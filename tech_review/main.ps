%!PS-Adobe-2.0
%%Creator: dvips(k) 5.996 Copyright 2016 Radical Eye Software
%%Title: main.dvi
%%CreationDate: Wed Nov 16 10:31:56 2016
%%Pages: 10
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: NimbusRomNo9L-Regu NimbusRomNo9L-Medi
%%+ NimbusRomNo9L-ReguItal NimbusRomNo9L-MediItal CMSY7 CMMI10 CMSY10
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -t letter main.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2016.11.16:1031
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 919 2014-05-19 18:42:47Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.24, 2016/04/22
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 919 2014-05-19 18:42:47Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not aload!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def/BorderArrayPatch{[exch{dup
dup type/integertype eq exch type/realtype eq or{BPToDvips}if}forall]}def/HyperBorder
{1 PDFToDvips} def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx
pdf@lly pdf@urx pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly
exch def dup DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx
exch def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 24 /similar put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70EB02A
60651FC2E263002D3986B7B20CC2AA08330B9FC2E26765CD52266969A86EE30E
71E0B41B6C1C6DA423D3A7E1553D2FAF26EF40DC183099322D362E4965695C52
9FC3E5BD7ABD743CDCB717DB10372A722A39CE53FABB454EADE2179C4CBFC016
A8E893C28EF549CA1692C8D8ADFC471DCCDE266FB4E97A1F3035801F3F034D44
AE6ADA0192657E8078A1D27420093FEBA111333314658021B90DA4E7A8D4B829
F1795501020D5FF0AD25584C1D57D4B3E8291F6E2FAACE63532B48948C4B25D8
D6CC9887B25F499C9A1B8C206C6BAAD4959AB961020E226C2782891C033C6F28
59A913B6FF25968405EE63DD5963A3434A80D3B7C71E0C84EE4F720BA253777C
6CCFFBB732B65BA58CF9F228F61E0B5644CE409D5D271504A957469961D49415
90B1C9B3C0E2076C5D0A694BCFC61B1E8F3D3F1181D5D2168595F386741FCB4A
EE412F1E602E70B8B4E90BFD171D0AF37CB556C5EAC84ECF3216F44A0052E41B
6C09F56714FAAB7F0EE25E467DE2E3D093F09AB8C1CC5A2288105494486FB7DB
E9516D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 62 /greater put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A9081E7BF64155A2CE3C0DF7
88D00671AD65654709589BAD7EA65BBA811387ABA5CA0BC3F66D3D48597A0D1D
2C268375DF47CCF62166262AE4840AB03BF49BE67A05EF66328EC729F03CA5FF
AD3937FC053E223303565DC771ACF32E63DFB96D5030E787961D72D02C195C66
B48E9AF0309DC169CFE8D16E2818DA94693A18F027DEA0D916672480464F7E22
CA6E431FE38D3FC019BDD229E064B72C545C61C6EA55984565CCA88ACB01F744
3B4593CC8953C83DFB6FF3C5F9113898F45B76D98F7F118FE4D1E6BE669545C3
92676FA583E3D3B272D5BFB24153AF62BF53BA0C81BF5AA2012FD33DD7640BDD
5CE8BA566FC85FC277B1EF69622D720569405B04D49FAA4C9FB2D4E3983D5C90
6B9A4327AB712D655D33EBE0C95E1325576B034525DC7BEE4BE00928DFD23FC7
42F317916B81D6B189FAD3045D66E40AED0B64F709989F419019BD5CAD255631
C91E48735BF1A70917B17928088769ECA64EA6FF215A445CBCB6D6D784022768
BAE9BE186FBC80269392EC8C86
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY7
%!PS-AdobeFont-1.0: CMSY7 003.002
%%Title: CMSY7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY7 known{/CMSY7 findfont dup/UniqueID known{dup
/UniqueID get 5096648 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY7 def
/FontBBox {-15 -951 1251 782 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY7.) readonly def
/FullName (CMSY7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 15 /bullet put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D9DAFF1B3EA76067
C5493B69F73B89C8B61804A34FCEC826343337CCDFFCE17BF343EA8034BF95AA
14C56862C2C052569AFB236E1F1795F05150C8F28DFEF6BF4BCBACB678D00036
30EE84FEB44B1A8438185EB45654E6853C1159B073E54292D135F0961A64E8A5
AAE49C4BA9C44156C123426212120F99F3E8B7425752A5FE384AAEF755A8464B
51F015F9E2967477D57B22627D75CEF8AAAF0AEBD504EB46D0289DFC8D86C972
F042BD88A90A53613DD93D8A7A8460E63D85F6C15C000C0AAEE4BD5130B6E668
8C9B3F3FFD804745DA1D5EC0AB85C96E1724FA67F9324C59275415182AB48D57
9722DCF602396AD4B5C075A5A89A5D005C9FE11273E5FBDDD1800F11BBDF6AEC
6711C5633A73AC5DF038BA521AC492E138F7FFC7C5438FFD32FEAA1128C66E83
0D3AA40665F05E62D7EF00B1B0596162C402A34B6BAE6300D43F3DFCC84860F5
C0F0F1CE28FC60642BBFE9BC9102E80146774CDC88F9C250DE762D24A3484BCD
1D26B6D9FE981CA5AAB2A4BEDC528115043DC18D7105735D7528C2C5DD89A812
75B5D7B2E5A586FBB0C061E708F92C1552F64A296490BD0F20243986A4707FF9
8AB3C917B8DB92F19DCA6B9D4A1DB57515E51DD85D5C9D2CAF7A036AA3F9E9B1
5B5E099CC05A9126AB274C17D75CB4FAF78052366D2F21EDAADF84B22A2D645A
3E65C4BC0F540B5D9609D88DD0E4CBEEF87C16447D43A5F98528FD45ADD10DE6
41AEC411FD6929308F0E4F48A8D9C9EE386E920D41C1CC98A52073011DF5BD28
5683F280B5CF7F27DC50930C81D344FF5A8A9258A207D2531AC21A735B14155B
C22C752DD22AA33C52D6D4D053B3E46FD4C9129068DFF52695A3A9184D04E8EC
93696A3FEC3AEB3814D9015EC14C22EC3ABD5070E8C28A3B42F5596D948212B4
AFB9978A0A361135C9E18CBDC98E0D1E8BDC17E25DDB3D52E86127E5AAECC55D
FEE61693190E378978EF1BBD4D1AF005D511C7607CCFA4BCBD3EC427CAD82809
B725B25AE8A03EE88F80A7732A571A2317E0B6A0D072EE8CE2EB9E033CDCC899
B64CF4FA1C708A885442062F08D3D8DAF44C066EE278714D1486EB709D327865
A483F62709E89D08291F044325208EBA758DD459481334F5D9AE3BB61B3020F2
A4538CFC2C94BE84C920BE80806FDCEE394230730E049333A7E16509207514FD
695B5E0AEA9E4A9737311AA0B33B15F6769FF865D1ACB63DC6201C3F1062A3FD
1B446C1857460745917A36289DD57C94FE6240F4A40FBDFC10E91B91B79029D9
9F1B9C74E8E5AA011A0ECBEC660230AD5929F01D0325D15FDC0040406F124021
02AE176F4C98BAC1706F03C2B5B40F325A50CA4683B2BB4605E68E72D0CBDC2D
96B3BBCDD01201B650A7E7744D58D1E36D81FBF72E0A875FF29B4C109A1950FC
9621B18D58806392EEE9841794DFD39E3C4E20D45384FE07F9D445F143B922D1
AB350AA6DFC51FCF767B141A392D6A8B633AACBCEC9F56A0CF40AB08020EE63E
08CC0BE01B40E86388A65F5869F2F4D022DD4B912031CB8CEDEDFC2473772569
5B28F66AB74CD7902A0061AA3547D13C7F0C6EEEA7B0BD316694A94E4D672520
EA044AB28D8D01076C486CE456EDA1811F7ACA75D27473080D27D3E681E35FC6
447046120C6CC4C17674F0F051570A79DCA74848F3F300B58B19018430D99858
CA5504084D6BB74CFDB635B6866974A9AF05DF201C69352B2663B0623E7828B9
5EC5FFA8D8F10A7C28000F8C679B180067D5481D6315BF1C4194EB171C8F3CE2
4CE319975B9E948D907F9F7EEAF07089844391555F329E331D52FF114668B8A4
80704B3C6AC0CCAA2F5D043CE44E65EDA89A0CA854CFDCB11D549B7FA72EDB90
D35353C34A771B1FAF96F83FCA5258AAB65384BAFFCE448690C1432A1F749C20
5817205185F973FA098BA856584753E75EBEBF387FC155202885F5B67117DD7E
70D1CD887183C5573B6FB607D4F6CC9F8B94B09B3F3AEC2EF1E6A320CF6D0112
63046321941D1FB3F2140B59370AA9387E24D579D389A166A10C989497FE9549
34E1AC2E546CC06C5308460DBEF3E1AEEB6CBB0FFDAC458E61DE3391480CF5CD
34A647D4DE15B81131B7D1F9EED4C6837A32E89B0EAAD6A05F5F67518655E5DB
224D4833CEC60D5DBBDB8A03FB1A9730589BB4F0FF56191D17E73B9562E0C356
B188882B36F9505F6F42EB2644FEE125C2A7D12227ABC8ADB924E88B0A9E8DC2
79762523B0B88DBBE6AC7968A46BD9E9F0C3F03F5F64724CA07782195F01F130
30DBE895C212E0EE20162D863F46A674D85232FA0DEE69A8DF019794AF6873AD
9CC2A5EEEF9393313CA519BF95C08ADF7A75B6F53EDCDC39851D20E58B97CA57
A7523717AA1821DEA94C8A9F8B82346B16D92D15AEDC16F0011A45A44B09DE47
08CBA46E8511D0C5CC83F952EEFA4ACFA7F3D7FA5E113EF6B70E5ABA6F1AD3B1
E4D3B15AC6D5C3BC70A3946F411A7D965D6FA9D7B6C6ECE19B2C29A2FF476251
EBF0CF3BF658A1D896323706172746F58B2DE49F8B7E431E20304A42694CCF73
11C4E9E96260CC442E2938A1E27EE6744C7CAB01634C8210CE40488B9CBD757C
4277B5E3E43C7560291D945F9128AF1F85924003418F96458ADDC5BB8EC431D5
AC9093D20DEA69B92454613BC1A82DAD4FBF8E56084494D9D2FFABD82A7C9847
171FE36B265B546F3072B0923840E6C6BB12CA53E05A99F0E8FD4F5109782746
7CAB9B35B68050230736AE624B7862D1244C7D9BE4D1CAAE21B123D1E8372377
F1FEF269A9A2EDF02CE0CC8BF92FD7EF09556987B8A3BF6D8C0A663DB6B9742B
E9AC61A449106AF1EA7ACAD40AC6F59427CC51865E6A90CF2AEED8D6037BA70E
4ADDAF622CDE877C98C3B2006B4721FC9BA18E30F0752BD4ACE36221F5CD1497
8FEDA5D643BE2EE007970A68E53D85975116E6CC09F0039A09EBAF0CA4B0EED6
A485CC0B69E526033FD1C1190BC5686739CE13D1AE8EBCABC01FCFF26141867C
44ED291196E546369129B9F759FDD7DC21BAF0A528FC34BA9FA8937813953644
C539F9DA4E55E83DB3D6DA309C562DA1330B157957B18F7618544AB738E25F16
F0517CD13C1F11BB8EA056BDC575D77CDC526EF497639DD89C2098660C5C45B2
D7CF715AC5E76847E0D3178360DAC1BAF6ACAEE72453B845B9F86621C166857B
029CEF5AFE29D1EDB4CA3AD7D008B7550A779E0066D7312DD6C7AFE1C0BFFF25
7B062B0DF30032EA2A2FE3CC46C96A3A0BA1888D1D2B05424A59ABE3EE928ED8
B67F507EFA78AE128F58B54634C7F534B3D0F4AFC23E38FB56EB39CFA425FD37
848545EAD03EDC5A9E796CEFB345F527615C785963F536972EBD9CFC4A6A4A07
5A31A508CA147FBB762ADD198CE36DF86730FCE2B643D1E7DF0BDE800DE7AF89
44A36B04193E44231E08919EE91A8B559646DC4DFAFF0AD891890A0A88FFA8EF
B066BCB7AFCA409C51889E7FEB33F19A3CB1268BD0EA74AF29C1401BABD16F87
ACF7DD65A8513DA9995C5092C36A774BC4260113360D29AF7ADF5D22B5B58E7E
A9BEFC33B9A91D2C397B27A81087376CB623318A8362C3FA9CBE3026675723C2
E711910DDB328E0EE3FCE219F44FE528B70E58B8E6CDB4AAB48237DD933D9639
E9D4F9EADAA8D46537D964D75C27F210B0C2473CB60D65F61BBD91ADE01576BF
77C49E31936138B0FBA066BE910DE1B1F0E4FFB5E81038E8656ABFF08DFD923E
6BA2AFEDCE6998BBF7045393C34811501586A4846E5B942C8E99D4C481D3AE60
2796ADBB5242D59F1116EBB828014BD903EF58B223DFD18BFBAAE4D348876B06
CAC10B7AF0DC270E6702A3F75D4DCEF872F2CDB9470AC9A1DC1ABCB55636D26F
9CB6BF27A0DAEB1F62AFEC12F55F78C9B59AC6DA9DB4B45444B0C582DB4DB8A4
B31EF4AFB77988E92FC0B257374B4408406490D9AFCC495316D6C08BEC9A76C7
12371E14417711EF802FB7151B3F6A2580C97527C9C3A0FAAB8D62FD992AA18F
EBEB36F7910186CD5F70A55DFE932757C299D9D2289796769A00A0C6ABD18F82
E0D4E95D6477E67B4C012DBBD098FE20E2F15C412DD2AD5471A65EACE05B3A1A
0C9C430BAEF4887F2CCE668116B87FFD9DAB4B9B3605CD26E6B12488058AFA30
8843791A95BB322DF5C47387F3EC72343855D6B23D72144EB5EB5157B8B238FD
6C71DDDA64C9539F66A7DD569FFF43DBE4A8F0608A3CBD354DD9BAB5E3C756DD
92C3C1B3E169D86A2230299432488BC04A87E08A80809F9968676DF9157B1C91
27C664ABCCBA9997FAD8966F766B325086899D1FE44581FE07C97688B3E15B0C
234A22646C32BB965B9BFD2CD34854D1488AAF021E169BF9CA9665CF040E25A8
16156C80A2F47397CD370AAEDA731E0D14FBEE1E51A17DB972D96DBCCE33F937
5CDBF1A650BF1D3536BA4CB7A1CACFD5CB457E2368A660A62AC26E64A631B2BA
6B08EBE42E02D9B1B2E95BF9F0A6B59C96A122968FD46A4D17BA3D018CCBA0F9
80BA3C1E6C683111AFF79303CF64F1D2CCBD7571C6E09DD9B27B8E101BE219F0
E075880A0E367885AC94143E777DAE455B990383100EADF786300602C2CE28F2
4F44662FDF03BD39A5181912D8F1243C36FF88882CFC4B34C1D4EBBC01D96A7D
9CE5303042D1B21042E4FEAA455F22A01333FCAD7E4AACA5D3A5386331985F6B
9B247EC6310BB07507321BEF3E4ECFC3B915AAA6E029B3999644C987640863B0
5DCF58CE479497AFAD1208FEFD1796E74467E9F7867C313A3412E6923F4C9144
C69EFA17965056DF043DB465BF2F1E191706D3AAB47E6AD5C9767E4A73B29F2D
E2E579D0262237568F82B360ADB6D0219B7535EFD02DD0688CDD23D84FC4F308
5D2D0010B1A9F4F0321A00C154672D21708B66B91ADCF98BAC7A2F94848E9A4E
86CC82EDD0399BD9F13E43359E71F80086B9B0C3B6D08831D4479ED83E7892C4
90C477BD1F06DFEBBF60F26516EECDEFE4787EEA8683754F2B257D0BAA607DBA
35EC6D1618C2FDF3881827F92D793ECF152D761F2423A96210F582DC9B90120F
26A33025414716A5E6F56D712E31BABE5047EC4855B767AC63D793995C9E074B
6E35C7E5255FBF4C3F17E7AD7B2A6C5F7459794FC94306B581536910F244BF5A
3158E821CE75F4B0565EBE985DF24DAA92F9C1D848EEC6B88E21FB6C51125872
1752F7352291960E5BD36F78AABBCF6DAA4D07AF56E4B6058AAB13D41BCDAA14
C0D63C6807FCD0E2B4B9CC892F224843173A75DC53A8F0FA396959C2E2CFE3F5
9B1C8B62797F34E7A0BFCF0787C73FEF98442234A617CF161829498035D30B29
ADFEAABD0B496E8A2E764D22DB7737F950FC5982F1C5F4FD414C1B0202F40FBA
62C81B8F0E836CD73D79366FD62388B437B81FC673442EE34BF27454F72A08F3
389E60CE28A050601A42FB4491C60DC02EC008E6B9DD2495522BBEC7293E2923
120584E88412DA7137397B41A28706B1CC6BB0C80709A2A4BA79822D245757A4
3EE454198942ED2316FAEB981F7615E642167620EBDDC5B271E273216EB119C6
4F2F0412F0BA6E3BA396217597575C6739194E1F839232FF088FDDFD3695A5CB
9A0E220389938596D8BDB183138E1F73F64512E4FAB5E1328F9B42364E3113B8
004BE2CA0B074EE271BBE0260D31CE555D535C16EBB528747EBAFFF253E659DA
3A377CBE0B296276AACF0294CF90FDAADB4EAD5E2F600E5B2A018DEFB86FF61C
84296480A425687CCE37D671472537E897AFD4B8C6A6175E1ADDF9AD24DFC5C3
A73E18AC2D9B28BDA2F17D51DB3521945850DAF0EE48B0FAC271544C1B4F3B2D
53BFC8DE32BA366FB1FEC0DD6C0B1FEA374CBE2B96F5B235A1D83A240DB442C7
1460980A3E5B96AE3D5784DE2C2DFFA671E0A856DB2FF4130E5905F3D5338856
C11A468D867D0C6EC585F1AD3E7164B8598BB59973B9A952FAE819F052A6554D
EDC342BCCB0525905D1D27ECB9EE43847B69AE116F494CB2DBBAFB2773F1A3E1
C75FBDF8D66FA5AB4005757D631A0D9424FCDA91A1D2AC6FCE7CC7A23E84C65B
3E92BC684F23467DCF8521E0E27CF1441C487EC6E3BCA0AB54BB137E83776009
833D772FD225E88A8BD992FD69819B3BA90BAAD1DDF16E4326190CC4BF9C30F2
AF7CA1FB38E6387D9745FC5E176B248B1581BF7A4CA2FCA8E423DF340EAE29AA
7E07A25FF838F67378F9A6A9A0B404E01E86E64FEF71DD3D540D4711AEB1974D
E2E0D485DAFFC74BA6B8E9AFDA245BC8997BB39BB6BD52B496A09C68F7A8E900
8DB3007643416040FCEC85B407EA0A946827771FBBEE49A3DA5542CC5173A31A
0280AB8E922C23C1BDD88D70627EF124633C318E7C9ACBC14AE216BFD41C0B6B
3A0161757913CA1F7B6626963C09936A52E73DD9B3D86DEEE73C0293A646FCF1
21D4C33DFF1671DA7A53E77E20233EDE51571549AACB7968602CD03EE67ACACA
B231661CA9DA2BEC5795A83DFAF675E9B052C8BDD51490F7874C91EF5ED2E0A6
BE9CBABB98A950F7E55DDA3823036437C11F614E27DA5BB8BC6D955FFE54B825
0201275C2C49A3908BEF1DB3D87792DDFFED23DE7FD9CFC284F6255C77E54A39
C2FDBCD28F2938E4CC135829AC1867CAA5705674062C9639FEEFBE49D6108091
7C58585B80464F7E69966D7933C7019BF336B88B9E0E7073A85EAF297B71B303
31EEE9121347A482D28CCE942AF53E94F88A97EF2F1860A92CE29A14495D67B7
D37E207D42F3891E0423F5BCFFCAAC057FEC683696ED6FEEFA65C8FB6F1312C5
24A1130192B4179F3B08DA1C951D988894E7FE7CFC28C56992A1CA82BF8BDBDA
E021F16E630FF67201BA4DF5F3F4D6AA65B8347FC1575C142C6C1868E8472BD2
CF191137AE1B36F32FD84DCAD50644AD55EBA2694C93BDF984A5C9E7C92B73A0
26769F00831537266FD2E711AB3F8AFC5F3FDA3C9E6439FFC48C3D1B5527FC56
1FEDE991E66E8465C0E395EAD0A22A2FDC001E449AB9C5E0EF187A1DE9B74696
BEB6A525DBF3A60DA2FBF1579150DEE1C5D1B6F55FF2708CE23289803CE123BD
C81E25DB96551A13AD713D5C7BFDD3F2E1D5C12463A195442B51909CC1724E50
A1F6F4EADB3B7355908F36F88521F333C4E7C70B094209D1F883B961DFAC32BC
8C5A2CAF77CA5E6AAB714CC0AF2B42FFF6F73301FC71AFFA9B33A2153F55C2DB
C1C111874DEC37CB746BEC9A3A9A37A2DD098CE7C66B0FE38460ACD77A47D53C
1550F857FFB733B5A8D02FB56790A09190B29CCB4F4A3058B1C82F0CC5E1B2EB
2F8E06F2DE531E1EB81326A8EF0F82843A4AC59D267EEE45730895752820BA93
A129C22A78C1AB28BCF67AD5DF372FECC9EE6719A02E499FD5CA866688E86089
7EE8E5912087E0C4588DE38428114785E0CFEDB1E2EE24CC067D107DFDF1E2BD
B1C4F9C6B740F3DEA0BD315581004E851ED5A9F66C4F9E95DE97D355DB06F482
A43B565F1255A85710B15A281E2F034B1C23FEE6CDF3A043780CB6AB18A016F1
9EAFE545CA5A5B5AAE2459D69D2151E99D029FB5C1649B9DA784BFDF7D177385
4D8B16B9922D149FFF6B4F99311D52BEC9A9FC098E7192180DBB38767DA9B9C6
E8CFC98615219EF3AD4A8157D14C72BA3F91C8B78381383E0BCA1A5319749B8D
07C9A8BBB76C74F0F05157151B418C385F2ECADE863C977BC1D0592216FF2843
DC1BB8509D9BB8356D008D7449147F456517EDB169678E28B2C0EDBD271BEC30
6E181064988515BD2B3AACC6D45DADEBD4DECAD9AC58CA06A6C9014B780C53D4
67D0FE46560B44CA4FF989A4D77F1B8828BB42507B524B622F10AC8781B19CE8
AA275F9FEDFB3036079F4F10ADC8CA8FAF5F5DA7088996FB632CEBD691C1F29A
FD52CB18BD258ADFB0B4B8B80F857B543BC64BE31FC83D5ED0A4866444501B5C
C98E1CF0A452E886EF57A241A093B769BB09B19B125F334D9D374A9C1B6CFFD6
FFED42F77C7624F8094CA624F45801B960F6E145D9623ADCB90F36C0C273C5B0
6E0AA4E0C95CDA1561529F446FE5489523B6E793FFF58C9DE064BC47635CCA71
AA72328472FF6822BD62A82B7765A73CA0239A9E28179AE7740477196602ABF4
2EE916B80AAFB638D00C1FB2A1EAFDC4516C7EE3EE4F5D3039E70EF3B07915B8
7C9C128C2ED3C27FE48D27D39B41E1ECEC46CD2209D760D75E743AD13AF1E761
A8B7F996ABCAEA43645546F42C87F6909258CC74419B96A39D6DA3233834894C
C60B03F867B6ADAA2C18F60040A9D8E70BAB12221217095DFC57117CDEB536FD
A09E11787D4F7B448F88
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusRomNo9L-MediItal
%!PS-AdobeFont-1.0: NimbusRomNo9L-MediItal 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Medium Italic) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Bold) readonly def
/ItalicAngle -15.3 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-MediItal def
/PaintType 0 def
/WMode 0 def
/FontBBox {-200 -324 996 964} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E1D5D732CFAD353E3B2D8
C2EB95195919264C4622E31A19D91AACFCBE5948640C6FF2ED865A61A34D5621
EC8F97345E25F89A2E3CDC64953A73D32C60044ED8C5175D7C40116E16BD025B
405736F8A4BD8D4070948E532BB7864341D6A02CAC612A639B6C94EC233CA648
C252709BD9C80F0E8CE48CF2F94766DF957F078F6AF4A7E5204102810F649186
3B67F9B7D04E783DD36176EBB99E92785F84225B659973AB97B63EC6FEC3D6AF
6C347303452A654C465952A3F0AFC0A74C9276CA0F262DF3ECE72D0E56057A6A
DDF6B9B6D3F64BC46336C8F8AB296E0A502A1B878052317E8F659881D1912278
082486870DC26891FF364E75D72547966C4B7E6C131EA1F71CD02B64104F7513
BA1157E65EFC56F23EB9E296D425562037559648C23DE28D468F61843F23F63C
10081F3DEEE3EBBD10B8E7B4B1B317B6B2116698542675F81AE47CF56F910DFB
878926D16FD18854090DB163B6C3E719A33B542AA70855DC846B98CD83DAB916
91691E259F7AEEE5B3F25435146E8EE16B5E46EC7F62E5B4298AD064A0D66991
3290D798C4CFB5499D96004311B4707DF64CF43724242FB88A88C5E2B53D2976
7F749D893DFC2D5A4280C4992FD60CC672FA505469184B21C6411C916339E7D9
64BCD55D6974362B0939449BD1355F7B99F07D6F3EE674328D1C485299EEDF90
5D5A5284EAD4B9606E8A9E381D623E38C74FD6F93EFBA70FBBCFA73565884CE2
39A5B4864E4852B6EEA8D2EAD8A396C424B4D318BAEC8AAC9CDE1863337C98C2
109A91C2EF30C929EE3F3BBB33E361EFF2812778CCBFCD2E7FFFC7F1F4406F15
BA868C0A90877010683689700681F7EFA9C6A377022865638E3B3CE101B3AF4C
FC4A583B396FC778023F828FCDA979E25395FD87AAFD437C2043CE2D2CE8E377
29A8A22744C233F003CF9B1F0AC9F14D7A1AD3F171C8D632ED0F3E6E2CA99429
1FE510C1CD4BD3F70BD308055BFED7FE4591DD58809003B0D12632E65AB753B3
FD08D95F9EB0F80914F68E9B5A5BEC215FD698B7FF33693DCA492BCBB376229C
4BA9575DCCB9C26B9FF9D40813F722DD86A572F602F300C3D409420B491B74D9
56A9A0270655811051028B571E39D1A96CCB0115898F910F38FD25CE03F740C9
69FCD8FC6082077DDB844137AB35E862CECB9761D4FD3514C706080ACE7A8462
EA4D0A2E3CE3EDA1EC59EE43FA55A2967E453EA6AC9AA63C2672EF797C6B569D
71D8514C89CDA3C719DA2D9AFB16D8A9B9AFD9BF39032AA828C424B94677EA2E
35AED029A5EF3D3C9FCE23F3733659F7942BD75F3D839477B4EFD118CAAF668B
B30226AAF44834DA5F3BCC3029DB39095E006F462DD9EFBDD34A443F263B41A3
B2076595CE2A7DAAA94E8D635DD650F404BA14C3E9D3D5937698573BFAC64BC5
1DAC341FB68C0D3A056F03D998770A0D22B1CA757FCBD3460F9E803E409065E1
58DA49560DBF9060489B2ACDC9BA9D2A1B213B20B0EBBF2BC4A0E37DE2DF8B75
EA2A55A5187666E9D9BD19EC0057F585DA96CF13D51EE1D8B35EC2E6B2BB0314
FD0E2835FB97FF48B963630A2422AB980B7CF013681E4A51760842271FB48294
FD8B63FD7216EA3D9D9CC7A830D54468CD68C23B59FA2A4A18D74B187587ABDE
7A3C8949663444EFC158564985AA22FC24BB9221F7ECB4B4E1094F27A3128A45
1D97B58D7549ED6EFCBB88788761B3C6150D55D1861582536AE9727A6021119C
751D4453EE0D6C01C63D3B42EBD8FBCAF24358C496F7F6C35804826374146861
F96E7EE3EBD6B0012895B74440C1E90EC44836EB4CDDF3288FB3926DCF77BE20
2AE82E35CFBA65227F9170D06B0C4169ADF35E74F2E10EFA7D7CC3107D4C8D0D
44DDC2CC1D1259EFA1F489DC229E9D659C8735442CEDDD4EAE1E5E9D914DDFDE
FA36EDF85949E50F1CDC69E178C52B5FB46AB460EFE17923AC0439E0FDAF8955
FBC699FC847F077A81047021DF46F69D76660C06E7682033B4376512D85F65AD
30E430DCA3586E888C0E9E815A6B3AE059838DB2EEF382D5AD4A22593487BDD4
CD96EEEAA809372D0F7C78CACBB5C8AA85ACC4F23E2C0F9279CD59961D5036B4
7F98527178B420EBB0B19C1AD3D1F5B8685D1874C7454D9ADD2F2E07884EE0A5
128AE2D8D5A8649CDEFA8D0F98E7E0155DBA5E300663BFF1B1FE9F4AE5867118
7FC42A47555CA6335EA80DA1C53CFAF7F52C23D3D6770CD6C6FA37A28699D9C0
F3EE94AA32E3C58F8D7F803B5F86AEC66CEA7569C46F793B54259DF6C99069F1
62BFB73C2D6F5E4A4B898478E82A3DD10055B80BAD84A8AA5ECB115DF97CF787
A7573C23EADD24CBAE9832EB5E2ECDC7317D6A8D4BF728F12F0F85E5554E9E55
EBBEA71E40D60CB4A26A706440672638AC068665A66F8412E65E9AB1292756DF
706310DB40FF45631902B92C516F678EE5308EE5471579E1740247679D2CF5D2
945585B2705BEDB17F179ACC88AC5A55B59D51DCEC1F7B6EADE5A944B8301581
323FF93A2E861E70EB06E1CC87E1F94ABD775CB6C5CE872670218FC0D11F1A0F
F001B1EC30A380962C2F527A135B5EEF4EFEBEDFDC5D7DCC163B3BC7F13281EE
4F77FC0B85B1099AC9797236388915F39ED1E485EA188E51E6A5DAFD97118D49
D35A0D801EAB3A54B90340EE129822028061F5D5E82A3C734D02A5817427BAE8
BBFC432A5F3DC8E90C8543C852C84769D1E4176F64EF3C2D266ED2B909E37B45
26D5861D0184F4956DB9D9BEEF25BF02427892C1A13835B688B79D566F17C754
C58BF1775D61115DD2D54476DD446BEA201F714664CE83D20AD69E65CE65E926
E72751B7B73886C1C0394F1A561EA185C51BD3BC8E9167970E1D356361BFAE3F
7F5DF22D8F98CF962B51280BE9A7F7253F7F8A49CCD3C1B4F9F918967746B40B
A6EEA726EBA19D288B0275495A5FDA55125F7C15388CC763B7B0E6C116B3C87E
992DE617DE4F0687351BEFEAE26D641D49B7A3490F09BF16B8D178346617B3C7
5F93CD8D9565305EF1001F84DE922D6D2359CA218F0E68D0FFC9CC45041B488C
C7AB76EE13554185E66A3A161EED1F99B8496A9FCFAC13492DFAF7D5864FDFF2
C4A2EC29E03625E8C97DE2E0C666C180EB8EED1A6E828175BFB5CC662779BF92
73B7F4B4664B2D7D147930659C508705FBA1FEA06D05A00D637AA1DA9CE60DA2
2A7223D92D63E43CB4F24D2D7A34E11BF60162B6BC76C73ECA10CAF2FDA981B5
7BA3A1D9C6FDED6F5EF405D8F3031740705A8202D06E4F2D2A84AFBB39C843F5
95213111E4F37599A5DBBA306860A20349B4F0AD0F4D7C5DCDA0AF1BA47DA65D
9435A2EC8E9A202425C3B61212039562D3F4928E99FA2DE2A50627B1FB143F4F
CB53BD99E69F256E24329BB7EECDD29BC62743F758B67B6E7974004BF64FEB5A
965DADDDB4CB27D2D50E1375DC1FA05DA81AB2FFBA2F6862D8B67673C3484389
787BEE5B95A70B22BC1FD60725E18E2BEC8D007BAFAE6AFBD7842578CC087559
287044261BD14654E9AE4F2EC340616C830CD66D46E6847D05F71CD140B7E531
B6A6ED12DB5F6E902CECEA846C37519A175F751594844475694CE4ED78B6F411
5381A8CC4026F70446B5693B6EE7D07B31175B35FC4DB8140FD188B6BCBE72D6
B2C78CF499C76AD0F57AD1B1786E79165B66C2E803B3947CE1BD2DFCD7D2AACF
6E08F7BBC7BB1EB59E29E3F98C374C0D683F13655463796A6BEB653DFC97C3B2
C87C4E2CC69013214D51C2F03FF1DE5A80C4C8B98FD3831EDB4F97F8D526EB04
6230DE50FDC07151723A30020DD3039902C4D462A8936D00AEB4CF601F6FB459
C0FB1C9A4B3C2FD96A239A93B9E8C5FE755C4C8C82CC2897C588A09FDB14647F
570BBEE55DC7F2AED67B0657DE2C6AE6027D1CC0B252FF9ED5F0D2EBB74A9F06
B7571AAAED118CE796246940463E2D044358AC88D31FD731D0DE9DB8BD454CAB
D34EEAFCA393AB87F780E30C865DC98E53B30FC4E51D0C7138D32D57A20D0684
F5EFCA127055FB69CEB9AE3082F13883F9D3427E3200E0E79FF355914F445B8F
63509B634A40D44F59E4E75BA397998E519B70C3670D8B0B89C65A9EBBE16BEA
B2EF6A77F16BBB6E90FDD676A2215FF11D933881D5E3552A086DCF9316839747
4BFC8C2081F2D82D8036D8F84AA6C643DB5351F70F30E7F138E98DCE28BE33EC
A3A2B2AD548B7E1E83558E524B7828061DA49643D3BC86FD2042ABADEB88DC35
0B40D54A4F160CEEE87C7D00F5808BA5E646A76D4780E686330B1E8EDF702B9A
F26A0324C760CCB6BDBC0C6C731CB95F018D5F92E2D374D5A72BE08AE40A9536
F403CF7EFB3B92F951EB011FE7F40C44D42FDF3DE2CCDA6CF533DAC3F6757917
66EAF4718FCF0CD0246E250D20D12E4108FB815ED1D54A3661DACC545C7C06D6
F2864EE61213F8168F3DFF482FB7C9109DF46D02E2D34F606C1C21120E490E3C
D97683EEEFCF837941C0D9578EA53FA2D0813AB238367A14F0ED1EAC26E444B6
B7FCFAABD370D5384B34D68CB4E10E0625681DEB0AAA813F59AB6528318A5DC7
648A46AFE9EAA17E79A2BA636A96BFF33DCF1124A4E0DF06126E587E8F5ED4F8
8B6633B8E67BB0EAB7E9CB648FB756B08F3A9EEE25ACAE0F66B2652B9E71D3AF
022B675E9A48B8C3E7693162202487944A1FC201C6C5263EDD2A7CC63B5B7D0E
B3AE6B0FAF7F415B3CCDE7DFFE06753869F9CC7C97C1B8345B135ADA4A7D7804
6F9615511CC53F344B5B3F2A805F8F6CB5F281082C35DFCDE7FBE9D07FA0B52F
23621D506D481F1496C163478A1369DAC4A33EEAEF00C51F744C427BBB682E28
28682D0C441DF566978132AC7A54BE6AB7F8DB91CA34F981D89339F051529646
10B3B785A453E4B3CD9D217B6D091C0A6701288ECFFDCAF439138776E7DBABC3
145199DF6DB27C986190055A178DCA86642048F2BBBD80E2D99DC404F4E6F1D2
C81BF72582EF89CC6E0AE6767F5C30365A241AFA181C54F274A2ABC153986338
4B7272F3571958BB8AAA48F1F3C5425753CDEB149DEB6D47DADE96BE71BDC161
873827640B4ABA46A9CB3F22C1404BE8A196AC89067C8D93E63AC7D55F69E01C
6229DA6CD94A28E1BD5A431B278087496FBA1B5B586E2C8AB308C9EBEBAFB489
48F5212C2422256661331C2866372C5C1531F0097FF6FF6CB9BD765A408A1358
B956C8ABB177C6607F01428E411457A81F08D85B1BA361CFDBD81AB95CCF0D09
5771B4BD12278E3F98CF4557AFD054A607962CCEFD0BC54923077B6C99F24A16
B01BFF053D20BDC0C5C6F773C091B5E6C2D4000C676C272C063DA79A4F5453DE
7BD7CF4997E8A2A51D46EF944F54DA0F3FCB7B0A3272654C9CD997EF2C3ECBEE
2143A5844BB1CBF1E7EC99536B4E43CA5F851BB2AC0C98C88C74EA422EF397FA
01B6BAA58A4C093DEF4ACE2AEA3833D76F2B1409252045351685F42C24C6CF0D
12D9D2E781E8F639FB5D0B3210CDF1EA276FB33EE5192DC102CEB1C512C2337C
E2C3828D95F0E16704682061BBD5130816C79774124E4EA644BEC5279E2D6664
BB5CF88F44436E36EF8FDB117309947AEAD6D9670DD996AA9FE4D4268A3FDBF8
F1A735342208D76F67B00F6B9DE822EE15680E972DC7B27F4492035D2304EC4F
9083716CA7906B80486BB5C7908FCFF73EE7957AA138B65BF369F7716494BF36
A317DFD2F4B237DD92E2CF8880A9D1B1CD692CDE92F674CC67D6CBFB9C690F0D
2E596A55C23ACA3848CCEE9A057DCAA4F10C7BF49B002ECE22FD0A5EA52434FC
CEC2157AFC8FDA2D39E2DF849039B5673F1930BEB20EC8ED1B9F873E7AD27461
33DB708E37926B0728702BA2EB5CC054219A606ADBFCE47CF5F756C0D2803619
AC60F553B15C7C1FA3F304BE6C36E5118C1B106CD67460FEBFCCD6F2DAB8F94D
C51BA4C2F8319D7ADD89BF6C6D03EC2708D74BE64FB74FAB8FD781D9B1A305FC
B073B36053E2185E94F0232F731816A6E38CE82CCF0182A25953CBB2375D67CB
38E29BD8A41135A9E950B4200C54AB893B43303B14350BB1C8804A120EE29FAC
26C26102E59F854866C31ADF42955E7964E4DD9C30504A414099BA8E0F01A0F4
A94340BD31A9BDA29B8D76D50F9047C8C9A1789139C4D2A58F98B8566EE2BB22
9D402881F7A3B37208C675B566A0D99631F904482DE3ED7C536F3EB3DA25E089
996B0975CD2741182E2199B7C27BD071FAA64FA194504137309DB85FB746166A
1324123762C28FE555160CF11A301CEC8B0607464F1C61BC884203219903AAB9
16E92C7354DDC4E736CCA22A08C53436AFF4E299178F373C02986CC31A7508E1
7C81A5199AD77E3793D8500FA007A524E4F3BEB896DBC13C03FF185E41F8C636
25AA7EB6E3088526CAA1A1CC2AFD08A8A66E4903D72E1C17ECCA3BAB5A8D4A44
6DBD9087F5D82055990533535DC04CC53C86FB7A09C5CD84148718B9B61E8DFD
7CC62C888881BE5D68A59C8B5ADCFB019D97B581FDBDB37470C1F429DE136CB5
163087DE1AF9F1C64AE9850B3673E970F95003948D0381474D00406AC83E4925
9530FDFCE1163D43118ED30D3D9075F5AC9A9744766064FD6905EF98B72A81E2
3ADECDE18C9FA6A5976B20CDFF321ADFD514B2DF7ECDC06921D7AAB051C03588
37C94006C25F2DB434890CA625EB27D1F0983C006E5B71CA887EB02CAAD614C9
260D489DE828AB2BABC7BDA80D9A3BD17FBC6A043C6C8BF36DF0C9875B4E477A
8BFE4DD5496E5B1FA6CD5FDF033C0B143C3ACA99547E2A0BE60D34FE5E044D0E
4B33EE501FC3BAEA9DCB8E3614B1324A185E51732A67962B5C27DB33FBDC57CD
092B35EFCAA6A79B9F49B4B605A6BBABAB617EDA35B2569AD53B59A059DA3C19
6B7DFE837D30F0A10FF0AA866D296B53E506D67A9A82BE2AA6D7C24DC708CBAD
17ABD8F8813796BBD3BEA22E12E9C4197D0F3835C0942AD6487F55366E6C1228
B9B2F296281350C23CEE1D869C4B895057A804DA692386F263A75C1F6ED625B9
9CC9C3E03F133F0C064DB7B2CE3368C46FA4EE69FED5C9ED874D51401961AE04
6587EA1350C84F0ADDDB4FE35701CDDDA2CE6B69E86D2CFE3CE783D1708C7B09
F9A92B658455FB81B09C5DC1DE472490624397A1A8DCF4530A89DF33968A0A76
193C714D8CBE776E96125014FB2360FFDC5659ED8E719BC4C278C92026322125
4213129D577BD8E0D6A709EB32426F3112E17476602F3D7B5AA66AC712573010
6E7C624D0CAB75DC0396E0802ACCEF1ABA9A1CD9797E07C3E9DAB83C34AC97C6
6C21F4CE4812FA0F007C12820B257F820686C412BFC78C427E8E051B99E95D20
5AD9D64962C7E233BF57DEA5FD7A0EEC6074F1B7334E238D984A28992B8DB550
D7488B296E21A0757882B1F0FD65BB5F020AF18760DE738F9AA02A86EF23D5F2
8C1F1C53B2B5B265EADD6E0378A1F7D1A254FAD9F125B2599B59ADE0E8408B2B
3F92ECCD384633B1CFBE950D0C420E2AA97FA2E5F21D647E2546E5E8702729D1
144DD5A9AE100CAD874CA50F5E1CE54AE464C493C65CEDA434824D694FFEDC9F
C8C589974C55513AE70589392CB5599C78917D314EB20A9D6DB74B82604E0C15
EF74736E17066AB079A292A4A06CC6D3429CB2E286B738BE2719E23968D459C0
6DFB0DF8B76F97E3AE0BE60A41AABACED09631FEE351A7A8CCB0C007F4C50242
E48324E9A31040AE138A801141B72D59E2898450699BE5ACA02DB1536D99057E
3597610E00CE29C4EFA9548CB450E12BC8B4BEE5E7F2248B74C41E3A930F7D96
A3F7CBBAAD1697059C16BEC49C76F4C6B2F1CDBAC5CBB4AF4E5AB320A83EF5F8
EA5481D2EC79CE0056462EB8C45A01A48ACCA88838D7474AD4CEEB2C38C13592
573F32EC6ED4A3B04382A50FD5F5176B91457ECD8637E6E454010B6CD6E5EA51
D640B16226B9A621AF1343E5403003C28CF53047A07DC8A48FD12C2F397E9481
DCE423ED67D8077EC4429E9F6FE39D6CC4DB92A9CCEFD6B629FA661440C361DD
E7817154052436A36BB9F0E51C0C1FBF1F6C230C1C99974CEC3D5F27E9BBB713
7AB09D0EAB3B1214182E7DB08E59E004E2255DBDC15F863186227C6499DC4E6D
E17A43D33DB3BE958098AEC3449AC8C8299532C59403567379760EF3C4CFBB9A
1261C5AB38E1D71D781BD8282FD2969975CDB303737E0B9B0E661AF17841FDBD
5D61718DE52EB4F11723D1D6426645C32AAF8918DC5AF8A1FFD1E491426C7251
9022732E8079AD6DFC8C619CE8FE1EEE3B9FE2203DC6C75B23CC2F701C915003
C885E577E9097CE4186BE217A2F3DF381FED5B682696A02EA21A9C6FC7C1CF76
7FB3E937DC4520B30E54DFFE770165D1759D82A5542CFC4A772D8F498CB0177E
6DC6B89FD204E5235E57CC6849A365F9AB477D1089559C972F241B85C3465B3C
551DA0888924FE6A44FA1C161BAFBF18900D500C4CE3599A4B186761649BC4EB
4E8174C2AA327DB9601268D2C877ED5AFAC1C065FA2367569CC2354D7B725C2E
2B38D20E81C0700BFFB9132DF181129DEDB9A655EE349F0956DB6D6268C6CF0A
6E7B9815E5C1D06AF1859F45140A382AD6E699337686B4EA0A5CE7E682B6A859
D852D22ADDC8B4AAE9F2257724D15317738826E365EA2E5831E662E3F99243D2
099F67A4E4059B6595005CC1A38855F8A61C29C1229C4C749C933A7CFC60FB3D
EBD2430D668B3D174C7CD696301EB6AEEAE9CF1701F6DF625DB40083C9FDB651
0619821B0CF1E6CDD22E976972C71EBE598D9439D0630840A08B78819C788E94
863F741958E4F19FFAD57C8A6FC768C74CE0DCC2782AE6B40151E46536376C42
9C1260DEF83D6D2A4C5D5D691554A65A14D15C261A3AEB182DDEFC54CD3E052F
6E44616542DBB5F90E7AE5170B78A031A8ED3AF8897BD1384C54FE9B6065F039
77D2CF7A92FC90740EB18BFD4531709EE422448B1A74FD31CECC456D2C7371C8
F6A29C933149B79857CD0B9BE1751FFC15C6BB7BB12E4BEDF4663355BC7FC2E9
DDCED1E8FB11656748300CF14A7A6487F86AFD0911D12937699CC968108095BB
B7C8820EFBF3D282E0D6E72309A63C110A21868EFE4D48DD2A4498D7FA5B5C3B
2370554F4A52E868E8FC22254B538D22BA16A354D87393CEE1F72764CC07A120
8440AE5D72F80F1BB6FFCBBA496CB3F793D4ECDF9B17D1B3AEA404328AE35813
4402F410B8DD71E5BE506E8343FB703A7EF38F9C612617CDD348699BC24D74E9
92712EC3BB7EC5DE08BC53D9B8820A39858C5F2040786CAAD5E5EDB63636278C
F5B50574C768065FBB24A71B15D09CB70476878D5B0558E10BED85CBCA7691B7
F02F42FA3CFB2241CA1AE9D54F1E376521B5982858FBFB71C230840470F557C1
3B242A5D5CB24FB7589456364DE6EB58E60BF16B7B78809E81CD51811E37A110
A381115FCF220E7726BF9BD70E7637F792D8E0F04BDA5B99F519E3B4019947A6
617605F9A2D0724257CD2A2DD3C35A5F273425735B75A41ED2300E2611522578
C6220EE3A7E9277685FA89F452BC99FC8B6BFB6920F6A22C4614150845100CDD
D34ECB507C53B518E9CC33F816D679D54B2C235173A6D1A9F901ADC629A3657C
955D13F3F158C37C85343225F047388165D6F1DF97BB737530AF7AD3525630E5
A5A6D3A844538959E456108BE20DDEAE3220ADFD2B93094E1D5DD5913259D7B3
0205DF9D0C2CFAD002954AA37A3A27AB31EE375F1C6FF81CAB9712AE99083CCD
0801BDF97EC5FC1D9EE67FB9CB2A382D980893E3E91373EED06DF3EC12EB8EB2
F4C7691FE0BF64DE923F75B75E246BA522976DA2B15EEC10CCE15071983F94BF
AB55819D89E66DC46B4327CFD5BF8309EBEB6E9CDC3D994E5374A6936E7040E6
A01311849B1A2FB3A1265248748B97E0D6A60B2EFD5C3B07489D8393950E1F7E
818D2CDCF685502359F1F43954568F015109A720450F20D927ED37B4105AE855
29DA10692709977B567E693433229A726CC10209A98CFD7FAF4715AB6ACFF86C
5B05EF5992CD3A020DFFA7C4471E9E275F63D186239722F1918575C067421DC1
0FD0FBE7313BBE93E8F8CDC356E0739FEBEF25A3C08EAAA69605CC08F88E06B8
1DA873445FBFE8A775DA65C67D294FCCFCA7B45F90A111ACBEA85242A79C9B09
77B391EAAA9E101705CCE20E7BE1A55567EAAB8263D64BD3DAED4E5289B9D598
B7BBEEE2A892FF254E44164994EFEFD7BB5A4E986EFBF6EA6C78E9B177DF9D17
116FC818DCAF7F7EED3124355C5D3344760485338027EF268230883494E63494
82A93DE23ECD3D2D01F431878C62405C05C857DD9D5CBFAA9C75A768D76413F5
2DA1CD61DD1E1F67385F9F1B1AE8F7AC777EAECAB12C4A27BC4CF21C99ACFE15
F309204FCF9893D489372285663DBE3050BB920D1BD969E3B7D38DDA99B5E0AC
FED79B718E8E06F09E58F67B770EB074EB45859E954800B8A9AB61FC7F5CD81E
74F1647E7583DBD8CFBB1379D0B49E75DD5EF27F04D5F0387B1042AD9959F488
18DD76A3F20E208AC89461F94AC073156936F1A808CDFCD9A9F5BEA8C6C5BB93
F97385D4ADCDE0DE64FB47AF0F738982D76462450E55758FDB5903D722FFF6BD
7FAA1A68B577FA75CEF46CDDD4BE299C3F642E7BC8391BE9E1D31D34A743DE8A
3045682DCE8542BC491761AB77C1C20CA75C38E8FFA02D35FAA0F808FDC65A26
C6AC667B068DFA0EE4CE4A3741DB2594450B99E5E011610F3A4DA2776CCB0DEB
D795FAC329D4BE40A636B57F02611DB295E1C3F6340E7A773B7AA7DD520F28AB
7B8B6E20D0E7CA5FB04E1F350E100D6ECAA1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusRomNo9L-Regu
%!PS-AdobeFont-1.0: NimbusRomNo9L-Regu 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Regular) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-Regu def
/PaintType 0 def
/WMode 0 def
/FontBBox {-168 -281 1000 924} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E152A40E590419249F2E4
C36159F8E54B532468E36965A38646781AB0B7F6A3E851FD10CAA49ADFC1E546
2FD2EC6150DC6E19523050F6148348A561AD8D2E2721EFF8A570CB33460A745B
926C889304C09753C2D78FB0CA95DC6DE5B8C524752C83601E7E9F73DF660674
F05AD83A166DA9BE89F22FEABD4B2665960F6FB5BC32928E1230C212E5D69CEE
0B3311A1738A11747AE263106916D8E95F25B25B4BC6AFB03B79ABB95DDA518B
41A49458111D2A1433C043627EF9460D324FFE22935F4F6DA88B8B91AE95B34E
08408A34EC8EAC3F65B6AE3E3E2524867EE9D29068F81E4372F4470BEEB4D6BE
EE4DF956BECC0CB77F8490117B22B2FB75C938ED0A5E208D88BC38B2AB8B9CFB
F1D53084B6F43DF336481ECA0AA2D5317BC83FC0E1D4DB01D0B7707EEF217E94
A7F985102DED27D8E8B009F7EF6DB91B91E78BFAE7BD688E10B3DC9AC77CDEE8
47AA4DC8EC78241E593D26EC7A60696151A2AE5325D736E99E01BDCBDE69579F
92EEEC224B6757EEDC64A75455BB665DF42A0E4CE7B99BF3E7D66F8FFC8C13F9
D7A1FF7A9D5FF7AC43396779F11C9B008C33A2043D48B61B88B03104B1425F09
675B559CA4302C001EE80D2B739CC0FD1023BF4F1FF9C01E892E59CCA7C26011
B8E0B6D29CC29FC72792FDA5E7D5D88EF98F9DBA960C96534C399C54865EAB86
0FA2E0D6C7C44B553EAC1574D55E7970744D4792FFFBDCE6FB4365BDBC2965BB
2E9EDAD9E0EBF0B620DB415AD98297F5AE83D9C710436657E74D26E83957C745
89834337035A7501803947F6880B70E56A3A404C62D57B849D28804CBE0F5884
435A0E12DCC9BA414ABB732BFBAE237001F557DEA5E972BA0838A3C7C9EB75AA
4A050DA0A529BDFFBF9011C360564FD17A02C18860AF6B86EFD4E2C125686C9A
5E114E95C71FC89A5DE9C589BFE5AC0480CFF716345265D2435EDAE67CFC4801
5BC08E7A48D683ACDB91E05F469C0C8919D73A5D07A1CCB173E30E76680ACB09
02A40A3E11916198BD69F1A26E88330F50692D0D5917E99E7A01B327413E24AA
E98EA484E45897E6AE4D6997B6E8BBF61C9406E916D56985CB2BD297E8ACFC6E
CF2D2281AD84696B7C6CB584BD85CC20BA14ADD3BC3E25DB91124C0ACF22E902
3CFBF04CC40DE331991E9075D22AB5EE0E849B340050E6C417C664A782D05549
DB2EF572F193B1C12B4635C2B358747046DE5858EC32B3B2E79D42750657977F
ACDD2EE5A7C9320D907438DBA63AA05ED410FC7000F53549091BE71BE45DA4AB
A315F95B724A60F17C70833E889CFE7EA206A7ABC4393CB6EF47BE3700BA5638
6831391809EF8384AEA8C22735E8062A9F9101ADD125A321FB65399CBCD9C9E6
0F46FBF271B2B1EC80832CC054BAB5CA80D4561DA0A380D56D5CB3D90AE89A19
48CD824EB1E7AC6127A6DBA3E8EA40F00ADD89749D77EC0EEBE26FD6EA5D8CCE
F7239681B3D94898236AE92FF3912E0AFE84B6C7E08134C158B640B4AECAB5F2
A90028E67D33DF31B461A2846F83D90979BB22618E2A17C5D159FB59D5177E12
EDF1320F596E7A4C379329ADB367F92BF2869A9A97398E0C20F5F017CA9DB7BA
B3BAB72B87A7B6BF4FEBD03132F9075C271F2054078396DF8403DC91461325F6
12CF1421F3099CCD799C2C099492C4F071336D985C0C360B2F5A5877FD00B6F9
2E5911DDDFB31D17A60124EE8DA6CBDA94196D7ED42804610E4F730DAF2F2D5A
B767C320C62543E26534314FACAE006BA2064623902C8AC479EEEBB609E8C3E4
1516CE412CB410BD026231E22A9CD0F664D769E4E45CBB75B7341F06D8E37285
BEAA9AB71AABE3CBFE5A348681AA246047CA29CA6B442FEADE254C7582D32D3C
71B5E645C82E92F057EB5F859BEE23DAA95C575EDAAF9896D6C10980A09DB34E
084C8A754E31B618C6991BAA856CB86877044E10C2F189B284E3195A2DB6B910
2574E2461D2FAE65B7321C0093A2A34996C0B77123503E9EDC623DD02C44FB76
3C550840BDF969582D226510EBF89944E59684EB2E2C463E69702266FBCF8D1D
4C0BE400495E227B9CB21C8086F328782CA7294DCF3ECDC1A62714143A4C1B98
E5DE1DD554FBA60571188A58F0354A6B9EF580689B78A0C8515CA05A35832616
7E0A90F68F3C306AB60AAB20872FB167673F41E8E87FF0111F579CBD0DA68B56
3E35D2EBF9F28B104082E36187373EFC7A33F62D3FE4A390B63A76E9B2531871
6BD59861F51B561DCC115192A6FC22D15A5AF03BA09CDFA66B660CF4288E9D79
26E797256659B0FF64BB5D900990C3CB588E1E18810BCB009A91E5F4F8D9DB1A
F2A063BDABD9C3332F4BDB701BB94B4FD24570B440AE74B8D924E48E7C2DEFB0
53A19E5B4DF39ABF4F6FC6160B5FCCA00608422A3091CD03E726B1EA1D203B3F
C44173460B490498EDA3121881EBD21CB5B571D21A6228CC0A1B035EBE97F26B
0B58179BD22AC950EC3A98458051A874297CD6BFE731C5B413819503111F1F6E
EBFB5628C955F5FCAED76F2402CE351F77E471D1C9821DAD627FF25131590577
5FF9335DD28D85A11BF155765632B34A3AA1DF9C01134BD8FE927E0064319951
E2C1D374C9ACFC30932712A5C3E0FE3C7E355E3356E9135A143F1B4E2738E208
8F44633DD9300BAFC770625A64B2BD20D4F672701310E5D1D5B2DD502802539A
65344601924C473B7618F9B87BF6EB49474FE62891097B9B381DFC9DD22F6CEB
340EFD950B74E614A2908EEA7B0D395E15943D0A9072E2C0E6C91D9141C84281
6A59F02111333723DB78C2C287675D73152EE3C63397F5EA6203C707568137E0
12438B86EAD16D71A0A56D00E6ACE9D80AFF646B05D829DCF08DCE2FED1A17D3
83A7C9E7C2A5CAEB38BDA802E6696BAB17A5D1E5D6C51B6371C642D5588A2945
1F3C8B0CD56806531579F7C0D10A9FBE254EA910522D955C86DDD693B8660BBD
17B2B23FEA57AF15B1720E42C6DE537074C071C50C114AC54C45BA2FEE00D13A
2573BB9243648A1BE2569CF68FF78E4CACACDB34DAD918A30005C31F17781633
6B74AF8B9931BEC0C1892780020C1A92470E3AD7F1BB6EF26C835F13A9C56DED
51DF4A7847C993B88B9FDA9A8955D8BDBF6BA773D06645E292CE26D9DF4BBD4F
3D20F52161853827837C837F33425990818B958ADCC3AE79B5791FF04DAA32FE
54050AA9D34606F16C7763DE770CC33C9ACB60E5354D5A27A687CA6E0FD74A4B
5CFFEADF6AD0BA87B906C09201FF65CE6C3F620BBFAACCBE54DA884B87E906B5
F5285D3841ECF78F0A1EE4A80724DA3A4FD49FFBAA66BE3402A2480A6F8FC164
343A369E2B8947FD5F58A4697234C742685421CE3D57398C5ED6F6B049FDF39F
6870236751D9EF2210E680B4D8A6DAAB758BD7FA7DA9680604E5BF85D1826611
2CA08E8922A1D46AC853F4BDCA37F7FE80D2D27854012E4A8F70BD854EA4C189
EA6939096B56168AEB971AAAFE1BCA667137A76761CBA2FBFFCEAFE3E98D5590
DB3DBC44B3F9D4EF0419CAE23086898BB25A222EEA19C1A760389672933EA7C2
8B31025619BD108B79D51D54E23F401F42165F0D513BB2409CE66BA3E83FC000
4372873EB8B4405A8F5BD88CC2F21D2D60FA4024707869C5FD40D94028ED13B2
5762CC7924D100D3CE0DD32CFCA124EC1FCE4CCE8C137070A18F05CD73809449
BCDEB0AC24DCF63679D46AA8B3A4A5D0DBFA9342716619CD3683DFA7A9D6683E
5A7A03DDB47833FDFF8935F2F004F58EDE6447ADCE4FDA1B734C75C52D16C406
9428CDF68855946014584F7FE49B03F896E0054CFFFF5DA4728BF4CE1D892052
701B48B81F58F5EA344E8EBFE13BAA70CB43CE4A979D8225ED78417648672E61
07EB7B31F81CF52B4136288200E640654E83534EADF05301FAF2F3A859772C3A
545FC20429119FF00C259AA582AF4E3CDE1C99769F4E433D9B178EDCECF142AD
FFAA6DA004A90F53E70048AA8D15A26BFCF7B02ED70BC262D165E99F87CA7424
0EB98F3D7FC0D4926AE43C8D322BB9ECA24A4C45F7DBB0FEAA9A900E3521D6B3
87B52A30ACB29C914B06793F19A1EFBE3BE7D0B8E20CAD99D292C315B12376D5
655121189A833132715762CA7118685814F71AAA08B89E466C7468BCA01BD98B
63EC7CC3AC41DD06C5BBDA86227AFCC1F7796B5F878946C135BFA75A98DB1B57
0F38C49770AE23986FFAEDBF6644DF58A252C29AC821F4584B96B5DDAFA9B3A1
AA0EF6D17FC1E75916753BC8C799497E1279EC783EA86DF307CD54B58C2B3EBB
FD722006D127834B089670E5F1E7BA8BC4A0F6181BB4EFBB8F99E4475181449F
2FCB255DA4233F7AB097EF0108BA3FC12CDA0618870EACB9FE4195DFAB182242
BAE0956D09E388D10DA2F940186E25C9926886E9806C70105DC75259FB1E5DA2
675E4E114F84862E6B822A10A9D364B1CD13DCA3D385B83499C715ECD7598766
B215910F002358D592FC36D0BD482EE9CC338378EA1566839526A5783F250818
078B97D73B1D62A1AAD3D5A9753BFEF23F7B3E6D5BD318C463AA04490B9063A0
E83E3E68109B182720D2B1C13B498F8F495661C0F4E6455B96A6A92FF806F1CB
3B1C6EAC82D9A687B83C572C42DF22BEAE31D1239719186F14EF637FE4E7C7B1
FE8F4F1BD8367D76D467BE95C394A818198D922BCAEEEE371FE17E396B27CEC5
F0554778587FC7D78ACDF317A8EFDFC82C2F57B6411B3AB68F96E3E7CD321A6D
4783435056AB5A0095726435BE6885BF2784FB2CBEFFC0F8248DCD594D34B21C
98E67DE50B6876C3D6D4D4CA7CE0B9013EBE754B104DCFC0719A10CDD9985E19
2CDF4E88876C2DD4E79E23AFA70AB5B4758AF32EE87B8415B881AC15C5C3E1BC
D17A5B961EFB3A8DC987DEDED6F28A240D66F004AD05CE1C551E29B45668DB2B
305C9B1AF5CD5388A0802D80F18E0F4BC8065BAF393FFAB9A4D674312C2033D2
7C78B5E9461FB09B9B2CAAAB70CEB3AFA574C89BC620328211C85656F63A8DDD
97C827297327B7980C2FE0ACB1C34866AA3C5D7408E257EBA3C53DE8338BDF96
CB7BA55FE31BDDBF7807148C0A132BDBBE8A2C21A23E11889DA13E429914F7F5
7132936359A0CC65E5993CAF52902F76F75D6CB46DD20A3C0BE80D45F2C746BF
236733462080FBDC8C5C1DBE9781F45ABA74AF8033A6EF2BDB16F7B0930D6B6E
7CA7FAC8CFB2DFAB8C063D961077585D24E8FBB5E0B0BEE9C4509B23361DD06A
DD25767833B9A770780B311F608CAE7ADDE000297A2672211F0DE8CF7F5FBC62
78FABA25D035FE3A7CC3A4743C0EFE1C4A5E9CADF1E05BC7982648D5C9FB2992
4A9EE1570BA2AB068CCE168552299361D62A2BC2C0DA48EE94D1CEDF1E2D29BB
43864AB5B770A14C98A432AB76C17998904F052A50EF845100533BA5CFB24C84
DA53581EC4F2201CA9FDAE76EF365515188ACE4CFC939AD6D193413CA7EE225B
0137F4637F09952213BE725CC7AEC579B2FE85F7C6AF18D70C4FDA0557567E64
D430F09ACA7BF28984977BA0F5849A5A86729D5640BBE4C30B17AB03262A02BD
8EE077EAD7FDAEFD37AF16007D83714ACA07FCF882ADC4792583AABB279579DF
6741F637CDF8598FB5827528771444B0AA82DD5E00E70EDEFA7405A1D8A7797B
EF021A53BA68C7FF6780C94F1393D1745AB1FD7C728C6112766A3C2E21DFF002
9E45A5C5668F8B084F22CD6A6CFB056CF0F402A73B2C02118259352EFF6D680B
877CE3024C37D532C186F3D4A97603704CC0DDB25CAC00AEB4CF601F6FB45655
8939AB962CB9E16A2400938D226056535EBE5707CF0A8678B54E6E3A103B2EFF
0BB7306D7C7C3F523B2AEC267A5F1E3F99208D8EC9AB27D658C26F635C2984AB
5A4D214768C6DC775BCC616838159AA10D5BD93CFC8B2D836EAE5ED480FB6DDB
24253A62A1B798BFA51B068B6888B76D2233B6FB11794F166254CB3AC8CFB650
429866DBEB8D09E6D03889899A4E8BFC9A855EA4660F928D0AAE8247EEC1668C
8E798398D53E52A5684CAA59C47CB38C8F1009A8AA12A269A587593874C2DC78
0BA989078910F3D70211147751E9F7264D6E64F1B05410ED3427BB7D0704443E
F2BAEB0FB9E3F1C1C14B178E716FEB4644240447A3F02211350E36E1A586A042
9AB336C6B44C0D2977294E704E8695B6DAF079BCA033B6BD3485EB7A78582FB9
373716136C63EADBAB3A2577738F553F81135829F9118F4BFE20CD51190BD7C5
17035EBE97F26B0B58973EA9B5E0D111D9EACF2FA54B223C4F40C139AB891A41
C7D5BA5338BFD58090EA727C3FD9D0C0217C05798787881D07CEFE019518CCDD
A7AD72305F06A98717CDA80C5DAAAFC50E3C6D78D2B5D851BEEC46731A6C29ED
DDCB9089DE5CC2DDB696D3B7DE3B67F066527AE22CC1AE6285DD1AD42E0809EE
65812268D28E7105859262E9368A3AA7FD0207D47DE5EA5591927F5E568386D3
A61FCBE872945A272C75384BE1E85B26AA094704715F1957DE37A2FDE2577BA3
85000D0708FC918D52360CDA828CEDD17CB7D625155CEB6931A29025B44EC8FC
3678FA08027B20FB9649D07F01484F2FD2E1746F290E32434FCD4D15ACF0708B
EE3FE9948D3AE141749B47810558D71D592735C1C86EE375BE7413B2CF462660
0B115CD043EDE5612AB895CEE0909DA8D165408CD5C4C34114EE4D7FAB4C37B6
A31CB829C4BAB2DD04B1A7097DEC24C6429C13482667116522F94EDC99DE551C
A693362BE4D277E12829BC466E13D09841B5D9AF504BE4EA59E9C2459EEA5AC2
C678E3FA30CDFC5AB855D56C1AD8374F9769A6B575A1DEE5AAAAB4F716DCEBE0
0FAB8B0B5522294CE3164F8446679FCC7AFF5BF49062CEA58F5C661A895AE753
8891536066F8416FF5E357FC34CC34D6B68ABE2FB2C540A7123BBF90D2671F65
90515B96CDD1BD2C1396BC15503CAA4CCD3CE28E0361801BDC5DA98887B2C39D
B84A0A4DE7859C7DA394ACC497641ECE12AD8A7D62AC5F8E6BDA0577FE64D581
35390A37A1570CB25B23B747B236F3F2606A3FF6E487A78069A068E7AF13A8E9
315016EBB2552F644065408A69F1BB6FED50486B2A05D403CD56EC5D3671C9CE
091995D384491B65EEAF33078529238342C32A4B81788C31E62BA0614BAFCF9C
3C1CD422C605740A8939487E26BB9233D4CDE68AFE7A0CADC3AECD739C9C425D
09CB50B4B4BE28115BA7FC59B541513CD6FD08039CF40A1F5B90A8BD1263806F
EC35AAA4100ECC05416ECE2F061CFDBC321CF3324F1EDA91976CABB8D2D9ACC9
B93C575C363FA691E18215311431841DE8187A20D6664348C7A8ADB06E867D02
07BD48FE8067168C4412FC80CDBA62F8B9209F5407670A26DB1F7F5D67C4D227
90BCD0F1E8640E5F9288C410487290808B88F9421D506386AC95CD959FD1ED07
778DE2F62958FF409D37332AA4BA88C735F2A56E4E746EE98B9667072874B21A
5F98225AEECABF5CC818F3FA54EDDE178B40A1B1D6E2F900365E2B503346B213
DDB43A269C5A973D303DBF615AC3CAABFC39FE2144681E7CD633056BC77D95A9
16F54291575AFF7A3A4C13ECA61A8D261B3A74307AAC38B50C0E55222626E717
DB6E122547B3B8A766FB877DEEEA52ECE2E74BA02CA7676F0E037CFFAF287340
C19BBFD9378D8E898225EDA3FBF814AD51F976241A7285DBCC62610FE998EBC9
7DC5961AF9D70A6786E8922E7932A539F1606101440C6855F2284EB34A895CAE
44637B6A0B1C6386C21F11F2E7EE2ADF012EA6FF35314981226505BD4B0EA25D
371BE9FB6FC0425D8F374CC51FCB15600FF7A49A4104BC29A369C8336438BD4A
45B7C8FD52577A49ACDB394CBBC16C844AD99F85B5AF1E8018900D50862D7C7B
045EE4BF7972EB05AA5696A004F3EC9BE95C4C14180C7C8098A3A0443C0DFAAD
91E9C3A37509B29066AF112DB77107B9DAF2E45E72DCD78660D5D56018CDF1E4
CA787593C31A2D6EF925E37E4EE77E687E149BF506664975CCBF5FDC20B5C306
984208FFB9EC2F79E76A7A029CF5981FD2D07176083D7FA0D9FA7B1E6C6DA9FE
423BF29011478BA39FBDC7E77BA230EE7B89728C9312602DDA359F1EE65BA362
D1F36657943255D62F0C84FE8A630204A8E64D8F940E9DDAF3C2DDC16FD131C7
F302A2F9FB65ECCCAD4616977B2EC724FC6A4C39417962E0DE1DCFA69AEC8A02
07179266935B655D20AF3D45228AC3796FD2B7B6E0580904A27FE0C8023F4FA0
FD70E469E5F309690C6AB737E9E0DD1DB57FB312362B64FF1955401395B42086
07E7F9449A8953149F324B4D5785C2A0A4C28EB487FD0BFD65462A1A4A741BE1
B1876330912EDEFCACE1DFACEA7628D16A4716D3989E1B31830CBC2BF9FCE144
9F0E80BDCBCFCF477A2C30A72EC227B20A0AF16FCB8356BC205F18C6088C1D6D
C579F1DCD23FFA147D72821B7A63FC011D5718FED41B16EA1D83ECD8D2ADE289
54EAA105F82F777B6635C160D0E3D67FBFF2080DB2A99D489A070D865C39AC9D
2A88AB5FBCE010919EDC0AB213A09038FAC6D3C81A4972E3C5683F49480FA5FE
B8CD3279398028DAB63EF7E8E1DF85A63F93273F187F8F8619C14AB824C97C3C
70D06FBC0A1B4BE1B2B7F11EF469ADEF71617B304B51C462AB3C6C0E831C9AD3
CB80C5E0D0FAFD079D7F4F245D542EA892C6FE3C3D6D1AC2C92371B7A33AAB5A
AB8375B4CAE9661C9D314999093B2A04EA1CB671C9F07ECEFBA615E023CB0F72
B6EED231AD31B1F4D03E807E56C1E1663986EED65E3EE47A2DD11C1211236973
4B4607A6570F534DEBC72AC06DBB2149F9EFB793A917B3B604271FB764FAB871
F7AA5A5FCC54533951454FE7AFA29CDDEF96E951AAA9B8EEB3F9B418BD132974
C601B6FA29471DC34814FC81A1E1A5155951C12022AADCE5826302220B18DFC3
D30B2277D08E7CC7A87BF1B8EC4507B43CEFB117119D86DE3BE51BF870390EA3
D8DAA3F74CCD3712D1C00261E853DC3078DD411189872A50D85D58CEE8FFFB1F
0288029490412F3E58F83DADA08FA695B18EFD0A4F289705385A411FCB2D7A47
FFE38977FCE18188C0043C448D27E160EE752BE0D44D0F83B6BF642C694AA530
E223AEFA3FDB17EE7AEABA75B9A86D7CB0F50AD4D5CE68D4ED48CB0C188F9DC4
34548B48403078F63079BCE8529F910AB280EBCAE7DF9F824DCA756F9D647DC4
D42DA412230A6231307E7495424F98C9F129CC4A326A3DD8E476E18D666F94FE
53EDC87E47F6D84ABB643FF3B4084437DA26B4A298F819F4B6823EDDAC11BC85
B9F5C5D0AA1E7B0DDCA82C8E01944B3EA48978C1B8F4FF47779A5523F600D33B
896B659C31F4F6F7DECBAE0FE1F83DDE18F77F53DB140A36B0F6F4B883EBCBB2
B6D353BF2CA6102173B6DFBA0F452D011F6CF7D661A470C3C5DD189C1E83FC4B
9372ED67EF4ED9A5B98F85C8D73D490133B7362AB976A385CEC705A2EB89D7F3
2FBD60C08B86A30219AA2988F79E6386062BE839C1F9D30AFFDE82CADE3494EE
13041755E76CC07CCB3A4A701461290B5B79728EDDFC63B2ED5CD4BBE0C4C365
75488D590258CE2084F898D7C58B3F65B09DEA2F8D4F71E80B2A2F8F31D5FCEF
7A7744B64D7BAA701E473B85C65814B0A93E3FFBD7B2AF85E00FFBFAB9BB7766
F444709A47902C919BD2A4BECDCE07B64053AEA1058E26024B46153D6BB92C0B
59861B2DDAF3D38DBEA5BFEDCC49938EB98188A3C4DCEEFA1F308559F7712CCF
288219C6A3D4EEFB81A2C5F154990FD8F09713A0531017D74B47E1F97AA6F0F3
92CE5BB7475C676247D57BB14FF676F11A4B5B564AC26BFA9D85C9CB0414FAFB
C35B46EACF74DD964FBDDAB28FD7BB304B9BF4E12CD15B3BBB163DD66E89F24E
6485C6EA63365D29907F6BA96D313F9B2AB7D175D549F4235653EF979A5C63CB
6EE50CC333387A0ED88D30D9FD2197D31A0894ED0A47B15D92DCA463A8C84B3A
986D396E6530B2E9BA127BB5662CA948A8F0C563B9C868644B8D01064DB6AA72
090DDA0521E6D778192A8C6D4D4639E80E309194CB76FC5D4615F396DD85B06F
71DFC7F39A259E322C5E7D28646310EAC92E5F6AFDD6071B21E6664E1CDD3848
C864CE0E380FDC48B251D52B5094EAD64D380B6818E2C8B1A4EB8F9C18ADDE6D
6E4CE1DEF2AE8F2649F1E5AAA05720A358A74E181568A10B536F68B7A0292787
12C34ACFA5BBAFC4AA3EAA4D8EBB26E20BB00D228B4EAC4A163E0B72899874A3
F85E82C396D9E2891D8E0D6E5571D4EF116879CD2F5485DDE4B9D40F638A3A95
DE5DDD14ADBE72F5BBADF0D9950A195F64FD3209C6D47B46B7708F855DA96CB5
E9E1260F6699D945A611A7EA348DB3C86BE4B32FC2687F15C4C86957018D428D
F6244A1FB6A99122BF89D7ADD01C80F2B2BB2C7168B02C400BFC98D65394948D
C736741F9E0244FE096571F087C5D6D7D022C726A4CECF37CF2DDEB1E9D77098
60C5D43121BC2E4B72A2D895A5AD2F449196AEFE8C01784323DE3804363B88C9
1C86124F431E6DD0744C3D073FFF4BBC2B98BDEF713BDEFC2DA4E0E22EDA76D0
34424CE13529BC04C078DFBF8B3EFD96CF662C4E151F15D4F8EA52641689D4A0
5F7C9EC4EFA5119DB9E3A61E4A669C29348A1E71382C093499CD35D7D1227A5F
5BC3DB96823C167100074C70040A55142148196567C20C7EECBB25ED6E31F563
9ADD24D52ACEEA4B88114EB6DBA9461C2E5262FB9529E9F6F0BDE20D3E209A8F
0C9FD81B99B00D268F764593BAA894F7AE50634766C922F751ED183AACAEC03D
B7D96D012CD0D111904245BE9537EDB0F8769AD1A8ABBD8D1CBBE5E79C53C00D
983C69D8865E93B6495A2F15AD9AB1DA7503BD5B85EBE27ABA01F71E56482BE9
D4342AC2562D8E6D1E4146447561EF5068D17306D66A52FA41644897A9B161C8
5DD4161AA3D956E7961AA8020467E76A833E01C974E32AA2B8CF27D62FC81EE4
D74649BF9530306481F430A539A95DCC2502F712947F6A68DDA00589EF404132
1DBC8B94AFD827BBD5F77820353FDDEC5D98FDD256E858581054789781AB090A
816E65AD3DC4A68B4EF2356E7CD2F906A859DAD680D649457BAE159F91805D52
FB6DCFA5D0AC6373FA8325A817563BC9ED89A17D8CDEE9B7516F38908E426F05
1517EEC7941CBADB22390E3E2E17D62CA67F37D01377C5A1E09BEF5B795B4446
54B383193351E05ED8BBD8B0B138CF62A428C78744582EEC90A41C3BD44A4E73
C9B32EA4936C211269BA5F883D45B16681F8AFA0646A4031EF69CF4936305336
5758F50534E6974342F4D232B5024DBA0EB297E3AA3E9EF0935BD47998370420
EAD844C7E336288356715CEB8CB8492ECDC8FD8F1183360FA32850051442F4D7
C0250D658C633DE21048F4676A1875DF6A8A61F0FC7C25DD5ACD0220798CA70E
F09A72B19595172AFB9085B9A5971AD1B9A3A2508884A3BCE88C984F58389620
95584866C59F89120C7F491CDE35B9D179F11DB0D3C30370138852050CF14B18
C06DADC218335BB465DD88304F1C1CD11062CA72649491FDC62D571C082CC816
261444906D399760159F6B1E6DF4B42A7A84750AA61C034B11A6E7EDDCDEB54D
E1F5151042A8E9F6A23A81A235FBC3908A85A6B05D8162BBDF3A672715B6FCCE
554E98DF1F4583E03E456469890F07F83BC0A8954FC5EDC7898F21F6917D30FA
36FAEE98F622EF313CC8431931D83D271CEF880DBA07B832A01384994E964233
F2E29DE305C3863191F877DFBA44214DA68BDBFBDE1E3B8B9659D7800DF5BD19
28BB1425A51ABC317EFDDA09D29E04EC8B17BD3B78085595120B58FB421916C6
AF4B92776EF8A8211CC376A37566422BF2E2A840BE57A357AB9B9ADAA20600D5
C49F228D2F7BB606FCFA867342884FCD426A72CA4C5D09612BBE26A2D9D3C8FE
15A55E095B6705F2A2F2A00C9F1CBAE16B91E13798B96D5AE66B5A8D1CD751CC
9747BD951A55EC3FCC11F58F8AFB40913166AB60A01B697507FE0753D085E5A8
8153CFCBB70E29B7073AB33F7BE2B6BD070ED974D0CFE4D41F7F57F05CEF38C4
251AA826E4A1D37459212C1B411B6B51FAA564DA0FF48EE6402B3C9FB77D502F
61FEEB32602DA2B5FA880C537F60E1394571392C3FBA4D110FF47A42D923C153
F7A83BC1FFE67CD11FF1A763950F2D7B6D9575F45562C3A9DE6D4EBF59482D7A
716F39ECA97FD68BE71AA73987D570CE2DDF953C6EC97CBB76B147CEB8973564
7EE159434E3AF6588F47FF9722B7E90F4D9FD0C5B9E9F3A14F9BFBA60CA6556B
0473DC073A961731D322161500E15ADA373D503552C0B76FC6576088E630CF29
B9B0C82CB348259EDD482520A84965A53CD673138AA57C32E41FCF50FE24A447
4ED23401F43F5206DE7FB3B6D1750223115919D85B54EAE8298A19212E5C66E0
C05C6DD7D7F8DD877123205B7E391A189E11FC30FDC6532FCA87770985B357A4
FBF9C5D261A4C998E2FE8EB96E27DAC9DAF1D3F0EC7422A85D9C7B241857209C
F372C03C1100D8EBF3CE4AB3C0EFC1F979C5999BAC6D4ABB6ABAB1D059C53F7E
34F972F56DF329BDB8485E39CC98CBF20CCB70A2A3CFDAD4DEB3267578B02F0B
0340F42BAC749465951198D2EA2BF7995852A50B5876597E55E1A1977B9E2F0B
8A8FB0F03839DCF6BD5542827208D443ED4B9C0145E4522274A02E4420F738E7
962C6D9FEE17520ECF6D6772E5E77D6ED395304699DD65D7A610D793E38CE3DC
E461843D5AF1E27BED5652BB84D5E85622B48BEC72E1622AB11506ADE702CB2E
8CA3FFB8ADD5C2470207BED74F2B34FAF8CB61DD5E0BF54F2B8E1C7EA1FEE81E
0E0A16747443630B04990EE1BE9DB5764A580222B27332072E74A60AB7B789DA
AEE741EB538E3AC7E38B333C7F6DADCAD5B9383AB433359862DCB30BA53A413B
5E9947EB637E78EEDC4B8B17CEC6B82F4CB8D2D71A37921E69D428723823EC95
0F683A6BFB55D22DFB161E1D6B6DB49DACECE6E43AD2C51A70E6342A85169FDE
F8060D7DA7E20B4DB176BB862C29749077D7104BCB313E5C886A01CB16F11F62
984C5F853516C1419DF929D29EAF4490A3AEBD24358EAC006A594AFCB839778F
D0925E2DAABE74C7DDCCE9A4F454633B52B445FEA99105FB0699485956FC737F
25625D53DCF0B9E2386BBF0900E0E011E8ADFE162D5876A850A6507512690D2D
D1F00992F4DBBCA2C63CD70B16DCE15D1C128B9D6881F3F7FFEB68D7174AE769
3B6F5E02523C7F046DE294E18255B689D2EF529E6DFE489956AFC909284A4D43
B0CA1D9F8B9BE4E4DA535522CD9B6E64841C81138EE358EF6768E7F78AF8033A
6885457DA6BA42CB4BDD4F35233B8E5AC02B7D8FBF2092BB8CE890DECB6E99CA
152D2AA56C5AB4179BA7936C74DD6C342A392131FB96C14C3B24D9F0E4D8B1CB
862EA5E7B13E204C914BF95F55FF32E4308FE5B2949FA454560E8DEC474EF52B
65BBBED017D5EAED0D89A3C86FC63BF01D3A6A10A5FE389B1AF013EBCBFF2A17
7F6E854DFEC5DBF19D4E977A07A42287A2DBD42A78E589A002CCA47EB865BD5E
601A98BB3A8572F20EF1C0A2B3500F615B1B8F9B04215F91ACEC454312EC1DCE
08F413B9E2DDDDCFD2BD85125DC5A043A45C0B9D3C86AC30B21F34CAE2D347A1
E93586EB95FDD3D1DB7157B21B7ED1702D31876A1CFCE58D619A66DF8CCC3116
319854A57965FE23D2D2D7E02F4D95D810E8A13D29872274FA6F48B7333B743C
7AF418C1FDAF467ACD5483A47C5E99A7BD81E18EF98763ECC08820176A109145
AF183870FAF171A3C24F603654896E2D1B0AC6224CFC765BF747E194CD18C740
6C61FD10B6B7DCE9C0A6577A87AE840E88F99CBF1C1D6CC83623D2FE80BD710C
EC79256F89F26B45F75281D3DE9636A134F63E244DF4A623C63A895FE66E1464
1959655F235BD056D65E3A50F55A041447594422EEFFACCE6AF7CC9768F72158
18ED408E47358AD45FCE20E4848CC38F70943755E9233AC711E663F2C7D77B46
C878E70669AD30ED18B6F832E4D7F54A23C837ED440AE97883348A0B5FE95232
779187E429B6F855ED7CFFCCC8D6784D8BCD92548E3257AC87231C36F119DDFB
F28AB8DC8B253A1FA09F016887FC29B6659B40BF3DD9DB6EAD8C8C3E504B10F8
37DAC82A816E06722397867DF32FA25DA0713E92EDE9E4D41577EF58AC70B402
A4427A7C86F7C1D7F378B62DB43CA4BC3A8669F6E924D719F18799D1A9E5969D
76BDE4FC976074F2D623721D38E3F5C73428D6824049DEA9416A450BE02DCB55
908E37FAF4A56A36519311DDB3D1CB66837C2964A2DD0D34A23DDE43EB30C88D
B6EA541956B904DB911D009F0B209BFDC139F48878C811EC38A21692F9B866C0
A59D9D736D429DE0DB4B0526463D0348157019A262B2C3E0BF54095D06110593
3646FCD24134D6B3A2A906A891187692967E93F69A54FF3AB8050418585ED1F5
9822B134F8841589FE146D05AB00C8E22651C43723216C053851A5D1F9BDFAF8
59C55523ACF1E394D27500A1CDD551C773C9A6D7B3882F31F29C281FB6C6250D
8A1C3C8DD110C1910014DA6FD1D57B8AE102B261FB65A3019BD75E81CCEBDE3F
3E23764E9A5DBE640CA98585DA2A4AF9DE5A5045598A905EE7B82BBAABDD0D92
BB5351D3A0B3071E8666FCE45202AF6000790C1C1D0A5BF0C4623B9815B8D3B7
7C39970A509DB6A4A0FFACE38A60E2DCCAB7F5B7AD1C0F42A74DA16147589A2D
3DADDE9BB1A63A4047EA20DDE1109F8856BB81184F4256994B5005D654E49086
7BB8396FC8D807EBDEFBB74E9894BF0EC793699F0E68263885581A17C87D7082
371D3D4884B50E1295C517FC56B91EBB6B4B657DE23503184AC5C0E91046F1B4
E859D84D5AA2C3B3752CB69D37162CA32B7B98C60E9435584AB7FAE6DFF71385
693E6B75BFC0436205231264EAB0C83FB929B0DC3CDFBC2B3B9143E3E8FB6E53
C629EF606550695F247C321C91DA2EF7558D272A4646327AFCA6D3D370D080E9
4CA387F4ECE353A14E82FF7D86251B59C66A711BA48899F9B2386BA4AD114054
FB455C41740DC0195522F51BA75F725249C5FD6FD166C835E1CE79E47B295E7D
92147BCD955869B80587746A2C55B63866E552FB94C1CA66CBB224FBF95B8DE8
FB0274CC120718A9ADBA29536CB0B18DEB2BA9A1B4B8D8985192607C49D27857
FA7ABCCB5DBBA81B6C87E4B45DFD9087429B4599C555C918F01399328769C48F
2F48D03751C6FB8E2F286068878E11778FBAAF8FB45AB48E1B046CD736398E60
0BD504B596C4BF214AEE075B8C6AF54B9B272E29346B97583773DDFEC57E3CEC
B90BD90EFEF508881A2EF3BA99925473FAD2249BCD7E460EBAF2571E97BA2F86
0320D8CB73B629DCF741B4D4AF2C1F8A267105B991947051D886E9EC4CA911BE
B8E4DB8C27EA930F4479DB51D8CC5DC41A7B5D4A30CCAB03764C8F7CD6AF3862
80FB1E7CE726FD1F618D92D1EDF7C8DA4EF9088F62C756EB786774D4BFBC89DB
8749B9E3F1C461C5D7D9DD4B5BD81A75823B4958FCFABAA8A4400446DEC12873
1A66D109A49ACE6CBD54E32968CFB8D086EB1D7A90A461A8C8BE5E5CBDABB390
AF98A7F143F4742F6F378BC883C0E54B2600F878B25B13262E00A34FC3E68098
20726C7E4206C0DEA8C815EBD13D195B8994BA11FE573E93F0C9ABE349820BC1
06DF609A17D787256712B37EB021AF8D56999C515350629327735CA86DCA53E7
4A9B490DD8E94A3B89A59E6C8BBF9A23128DBC3A6ECFDDC16FD131C7F3020E52
8C0448289AE17AA013B03E578212A7B2732F6529D19712926E230DD0BA580947
5C72D82F2AE00424B65B2263E00ECB0200F35C6B43C7C81B91A9C2B178E96C27
C4F11BF6601A700C7EA5CD1783CAD3C588FD13E33323F9695D3F43791432D47C
5BBA881EDFDD56B73E628A1EFCFFEC99EFAECA445E831AD8B2807249DEDD74F2
C02CD108BA7D2DF350F4C77A086AC4C6DA60FF9D29F3248719C401D492FC3123
DC9D867A548BCC7F27BDA8EC5E28FE939E2D006E49836C8A4DB0B290D0BA5502
6A1ED6D50ED630539493E2ED70EB7E375E5640741A2DB30D0E2F1A2F16C98F3F
CFE949D47FFBBCB01C0C06519C89133D8CEA8AB1DF653B127A3C7B726EA6A474
6AFAD6C8FCD0B291016087B73C32E7B8168B05E5D293D943FC5D76A9DA69758E
69C9E50BCDC5D95B8DEE88597A1D13CCD792CEF559A489CE524DC6764EDB094B
67C657000ABB040D49FDB48B305749D70819D5E9F0DC8D6E9FFF8B2AF0ECDD4E
18E4BBF3264FA0517BAF42274A5CF5864176816E6E6E4B46665116CB0BBA167F
37D7DE2FF9E8B9CE223DCF35E05CB10C52A339D23379C212F14B80904EBC9626
102AA79BDCDBA56C30F253AAC4D8526D51B7B05F38D572403B4900B9278CE0BD
FA748FFB349C9A2B0A2CE1815050DC6432B7267C7D1B45420220556F874C82F6
28FED9AEE16725369B8FD5E77D839726893D96DD0E46FDF3D718D9BF9FE691F7
395D8CFB9FEDBD909D9F97E8E7588DF0FF94DD8FB50278A975C41E20829AA8FF
EA4A01C6F9EF374A7A1735B5A1EAA58C8E13C0E8DC0DBAE419C34F5618380040
7B3BAB9ABC26691F7804D85DF0A7D9E501292FFF65091AB83CAF17A3B2F7CDCA
42BAEA35597ACC72BCE553C6B46C363DFC138BACF1C52FC7EB75FFD4BE9E6732
EE5E73E32B99EE43FE3440117595241581EB58606F75731648B7606F4BA2B7B8
9EA84C14771954B6BFE2B46116F6C5A30ACC1C008446891C9A02B2F131C1E21D
53600FA32F59EA7A639E2CFDED3BA63D48996FBC6332E5FB95726EAAD3F88255
896C4B232754772F6DDB6C83D9847355BFF6E213E8B75DDA82C06E16245D568C
9685D99BB1360F8A20CC85F9C9A987E2812B8CA40292EDC681429580D302BD9B
C90F4B861CC44F6D332D36DAFD71424527FC0CA6C03CBF08C81B82591CBC33FE
EF727373E289F0E05F8412C1545D869C95C8A5D6594F6CCD762F861D79ACCEFD
B6AB468DE609958719B732753846155F1FBDC218ED8FAF4B49EA82934F33BB40
721E4DB48B9DB40969BF427A2D893AED4492E29E61BEA44E476580DB82F0E7AD
9AB7C7DA7E5F7B09F886A88343A638570490E07CC72D60C849EBD4ED4AA112C3
A536B717FA3A7EB2C1E0D97CA6BD370B195C7F291A31BB2FDBEF48170FE9EFBB
FFA27AC138D8FEBABD3CE6E4CC07A0A5C7BB6A30BE50619EB7E9BC15338EF633
0892D349C157E09AF1FE09B5D41CBF8EDD475962545BCAE8697B3D5A8C4F24C1
15B9967923CAD2C4BFC40FFBF1C422A708C6FD0AB917509FB6AB2D942297A672
B6E763226D5C76AC80FA4143820FCA84DD2E9016C0ACB13A703DE0A6D5B017DF
D00160A20360880286CFCDDBF34DA4EA16801AF5E2666936AA9BBD84A3BFAD54
53EEC505A64E4A7756FBA78FD3B569122283404358BEC3EFA3DCA8AD17FD423B
1BF490E44099C9CF1B9743DBE0A4A5B25096205D726475C707A2B7380EEC014C
EBC4FBE7F6EBB77BEEAA58FEF461EC8C1866DFC966CAF7DB321708623163ED2D
B6362A45D6F670CDE92AE68F87511C60EE75C0707D0C736B09FD84D209EEA0F0
9B8A6B5C04F4B91AD35ED7885F3DC58D16D5FB275F602C20838B37C06404DBA5
A091BBDF05F51FB465FD7604C4F41918C39DBDE1DACCC229FF29B27D9462F75F
867DDF9BEDF50E3D9AF91C7D5DF413555ECF7E0304D3BD24BEF72C071D2C94AD
3BE4FBB558E1428A483C70086D99092998C0FF743302FE6CB13B1ED0B25BCE87
FE2E4F7D3993C0B2B7512C3B8545DAB6F9E2CE36DC7E8ED1D5D3620F2D02E3B7
C8A7045A92561302B2FEE5572A1C94D92316B9278470148767676DA57E51C00E
DAE3F433C23C4483BC6409A82BE151B526DE46919DA04B030B29073F7B191037
17F5776AE813FDDFBCC5688756ABB23F7E2D3D98F27CDDD7109C34141E89BA4B
90B0CA430CF1DBA7049EC5F4FE5F7A1ECAC00E50B239240275AA3448E5B83E41
6ED70AAF23FB628A419E1699115B54D5CADEE5F57C3EAE21FEE7C74204D02B1A
3CA7F89C45B2D0FBA999CFB58D75B82C05338A2D39761AA712862B6699981766
E58694B8C22677198A7868B19E91557AD6E15835BDC99A984BF3A1F374C670FC
900C5D0B3905010342FAFBE479E7155B380118472A2640DBF4360B13688A3C12
A0715673FBBD37A457588D5EEA26880FDB3E4E6295EF822C6830EFBA86FF80AF
584E040F89694ED4C43ABF924E408B93F6C6A3B15D30C363AB95F7C85321AB5B
3C8A312FF6AD88010D6E6E7D5704E0082AF5173C40D1B7E2CD19E0C3A0967AAB
17B53DE3E3C6478AC1B94DEAB02F1821C8D30F24863E5327CAE3E3453BD78498
8CA336FEF3E524FC7C830A25E85C45E2D01A34E6EFEDD6990DF601F446D30087
D64FBCDC9F4350C69FBADCF0D6D8FCBF7B8A79BF49AF8DF092C16131537206F9
B0EF3532642BE5214E985B30A6E5407523E0CB91D507E38E7B83FD259F86DB49
F6EFC53AEF1D8A7ECFF4892BAC0C9BF0D8AACC39B7DC98CCAC1F5F3A3BAC381B
E0826FA56244258A02AD6D3E8D62D18DCCEF67CE435AD936771A2F27F3742FED
F4F4C76D225957A2D679A4E8252E7990CE6BB80786450657EC6A4D1538B690ED
19BB9FACA0B059091A085C932D5570B053D9B8820A39858C5010E0D079B205C9
B1DF5246C2CD4466939841D931419C7A49F8E71C37B0B952A3D720F58D0019D2
A83C06143FD2E8AC2D4DBABC81B25AB33FDC400A525F3CEE7B24C61CEAE0E908
390563A8A5AE01DA1C4C1513620063B1B8B9993E495B06EF0A16E43CBCDCDC4A
5A8148841658B3226A0DED29E8B70E1180643F164F81302E64E46A1DC8E134C8
03A6E1D42C4F614890267F5A2B422BC18758359E92F6E56B667BE2595A5D4A1B
25D47892F319563587B4545D421C8B027FDD338CFFB0C6233A77CFD69AFA4C95
EAF47B72EEA52DB5B315B1F03FE17C13536198C5163E6C574AE1CB0604AFA7F3
52F6F5DC0C26A93F18046C4F745E4D4E36FED0DEA6E1E3853838ABBF23B9F98E
588AA45565FFB46E43925BF2377110EBBA85891A4BCE1522F7232DF8B23A8784
01402EA6B6C929A92C24786FC563599CB880CD19A2CC92F4778439181E6D55BE
FC52FFD2A6E63B3E367ADC0C7C4BBED09BDE21AF4692729958EEF5E3D9AEAB6C
59CAE2FB8A56DB1A75F41A198D617325F872FEEE4571EF7B6C87D5CF327C418D
65CC0E7696C95C5196623E8171BE0816ED7F88CFDB57ECF664E61426D9DBBDF7
A02D6AB6C95B723728124A00A11B5EC6F724C1DC5CBD57BE46EB884FF582A6C0
2E51F8533D86EFDDC91E2A6503705C3A229772E17055DD057D8695AD39F2C571
42891D0573AE215F7BAAAB1A086BEF3D0A199EC841738F5C2D7A71A96E833D7B
F656E9F9BB72EFB32848B10AC555A80A2C1298D907E25B5CFD054B1DDD9A554C
9CF42894A2D90AB79DAA21D002F8F6378C4ACFEE011996E03ECA7E7E0CACFCD1
14B0DEE4C6AC930442EF767902EFA28A68B0ED12902B504C15746EF950B9189A
726FEBE69A2B57988B333CD1323E6252C87A1E454912EF28E2AF90ECD2A3E023
4FEE187B6DDD558EE5BD31916AAFF0552D84D61F7CAC2BE38F6D98FE906C6ABD
722D1154F26D2D8985E4DE8F4DA26AEE123AD0FD63B11B2160E398C57318CF85
862A7FC592628C6513A9EEBA15D847D47AC5C679D7FB8CF9C931DCC61B31FD0A
C7524BC56FAC63A98AE48C3C4C40FC6F1235437E1AAD1C58445F1D4A9241CAF1
993123C3706A728C29B4DE534775607BFE10D4CDFBD9FC612FA3421A6AB195CE
57E23AFCC041337AAE0DF709D6A80DEC6A5E9E23E10492D8F39AFE4AB625E255
535249DCB0326AD46C3407EF11C82E84E7363041EA769FEB05BC53E87790656C
CC95C278EA06615B98E29DFCAC798130C06D8C71085608C509FF812BA1E8D99B
51082B509419C71F2F14DFD9C56658965231DAC3DFF29E8DB437E5694227A0E2
F100E52AC202E31A91787343404A9D8273C838FA33382C989001357E249C4870
0B2BAAB7E01A8DD354C2B05DE89ACB90854FA110238054B83CB6B19BEE86182D
05DE665B7477601A7393D53C9DF44F68B82D46FE8DA26F800B81CC4E3AD384D6
EAA939D76152694E1CC6DB42E9D3947C25CE607597C190036F9DDC99DEC77C8E
A299D5DE328B58663E404B774534463F25D7CB284944D1F5130F35F6E2DFB622
697987A29FF9286E13DD0AD53412C56EAE43FCFB7EFB304CAD6DC325EDAA2BBA
EC57B180EC5BF31312917E3142759FA7231E746AFEFA0968A66C1AC3A5E77851
81A6C436F207229B1330D137063EF356360F1F1D71EC1811BCCA1DF928AC899D
DE882CC97361D0C587E8224745781628058BFC8F429E2210BF9FED80AE80F9D8
63788E8752DCDF328DB47A624C02963367F2F6C0510F910635ED7C4403BD77C2
EE0B2DCD47A5D93AE0BD0B4DC0DE6884964FC95F3A9CBDA2ECCC8C0816CABACD
849EE96118592244A818019BBE81AA363C009CBC6C0938E80408FD3F72FFD8AD
38583A534C133D309AC650FEAF3B42AFA4EA09565323108B57F3A708006A9EE8
5773D79EE366C34948AFDF91CEA56871F6E2BAC21E8C24C5B9C6C0EECF2DB098
3F5B32B37648F391BE5779715BEDE0BF772404BCB806F9FD2B97D47480ACBBAE
A4AE9E5742F5FC647D1631FE75D58963ADCC13C5D5FF58D202E182BE22D8E1F6
607303507A148862716F9B14459C3AA3FEDD4526AFD7BD1EEBA395E81F031C3B
4DEEDF694961E8195FC8239B752490AE782C2578E80ED3B15E57811F122EF9DB
C315F3861DCF981551152CAC2BCAA4033CD48718EFA1EFFBBA98C441E790F768
C84DDA7596B97C1E081F1A0947484AB42CE03F6AF14959C3975B22CC5B330AA2
DEEFCF28BC2CE03F598317EE61A42D21114B2BA1D402BFD608DBC538353B7931
42B300E818ED1329A59F9A52D38CCA2986E3BE999E74F8096BB6478F9F3AE2CE
9506E9276B31AFE8EDEF624711C278C198EC75EE0819527F4893F5FCBD54771E
859D45F35E20C555DCB0AC8E95EAB7FB291F07D2D1D4FDA1BD5557C17619D7E4
1A6D41AADE1B1D2AD87D098D5D970888C7D8C1ED42F3F945F4CD728E377650EA
06FEE0FCC40DDE2C9BEB37B0F89613B5F89B71334F55AD0887153E9E2840AAE1
5D612F092F7633D43E6B344CE48F9CDA12B3B9FBF924A9E1B9B91B36B20B7A88
A8C48A53FC68032487C95A010368B2D050CABB66BC30CB0FB5FA878B3FD8B7D7
21154569ECD19DD6151DE358BBAD92DB83675E1034CCA473A6A7D33481ED446B
95AAA3CA0A1CFB4D764D936C634F208B2D0BADF9D03849B9CE01FA7D0584875A
95648213D2DC879B24A0C106B075CC87962AC105450958CBC3FD7EF671971AF6
E3390C5EBAC6ADE51AE15ACF5A2B6E85EB3BE508A1E0B7BB0B05213DAF7571FC
BE625484981DC4295000EC09B564FF453EAC830B08D31CADE034AA15989C8CB0
A507D3AAE258C3822735A35C458D683740DB402FF59E212BF4BCED82C574CFBB
84BEE05F13A6C0FAB4F1585A54AA4A433CE9F55D6679155F017817257D9CA6C6
D61B97807E6DB919CB0BCE5FC093BC2CF99B10267825C97928CC757172F8C5E7
5B2846856674DB6E351E7A2E3B834AB42D5E82031A1D4B8A5E942894CBDA32FF
2B7012AC709E09D71AC4F12CFCEDD7C386D5985BB52B45B1999591922A93C9AD
32F65C6BD33373BF046520163E0A4C2685AB2E99C1371C89E3FB294EEACAE721
0155E5D5B7548A6831209E8FF9417A98DFFB9BD8A9D183120CBC488E75D2F5D2
58475CFABE152E1F1B5934D04C802E89B28943986DECD56A5CB20A0860CCA1D3
B97646420086F801135DC3D69EA865C8D5958DAF7C5B9BC82D0ACD75F8B5FE32
0F8A8047EDDB461CBD3DDCCF07F00939CB33307F7F5BCF801028CAD92F617886
6C4BF36A7FCCE9C28F635A87E08D2C2382F99AC70E98455058022FA73D769B05
DEACB5C2C094451A605E10F7777A54AA256C39D9C59A92D5309A9B62941680F7
DC6BC9F380C65E841C5B44E863AE49CCC62E8CA185D8A16CAFBC3A37C7B61911
8895CF5956170C6221ADD96D168C5B171AE9FF2FBE2C2A5B63978E50C7EE03AF
9FF26BACF9EAC73EA6F188B7FD79521EC76DE73E3657D2ABC00DE3863D081335
89F90510BAE63AB0B680B55B01484BDA873984B0245A479983BBF27E15AB8021
3A8ABC282565000AAEB2B9636733C9A09E12DFA33367E968DC4036FFE04C92BE
2CA7D7F3205258EE0B62290E5BCB8A96755A83EBB236E01E00A0E492AA3BD2D1
213B59163C9EA231FA5316BFB9E6A13D53DF1A36D33D45ECB466C63BC6D4A795
E6ED6F533C398511227D4D2AB2D5FBC290E07DEAB376BE2FE44A301706927038
EF7D1C04041C12EE6791B4D718F858B76E0B4C7ADADB08CC1D1CC05BC6428CEE
982456907B1BDA6DA7B3599665E7E24C888F1FEC897226C27594FD5A65B8B7FE
49ACA7EF5F3D668AD5EAD82FA7329204D9AB6735C505D345372170B9C232674A
9840F94B00E0D0D72B9FB25EE2F90636C134F67A778B52F9AE92840A1D4C39C7
9B6FD7CB8365985628E7073F204B2E0F783600812C88657E26D51C7CD807719B
3B9AAD7000C7131C07591BB68C0D26B18C5F5666C2728F3B4137326382226C92
B9537D587A5A8E1D57186993D81CF6AFDB0136B4E4DBD6B7FC04E961C3DBE3DA
DEBFD8E61D929AA2F5E1C49652E90A73C0DE646D7F1BECF98B35543694C6F9EE
2CFCCB314C810968CA6D9A765B749E37619AEDC0FD293086B6CBB5B4B894FA72
0CF8382DB9291C135E6683695174DA8269586936E465BD6E0EA8E26D819E2D41
D0088336FE23789DFB9923F076AB3CFB3842F2BAC3D6423E0B788C4A729282F1
7ACDF6C62402CFB28509CE2F69CF69E0289A2C1F9317F4F6410889D604C5029C
9FDE20F64678C1BA5CDA27AF3B162E7FE31E0BE66AC69AB8F9FFA8B1F87178D6
A4B6DC4FBA53288A439284F80387D1BEF1D379FA6D49F7278B5D5DE026EA76C0
33467AB524D280AF4A95720298F909E46E5EC8FE7EC59F3822B1EE59053237DE
6EDC7511FEF6B22E5BAD6473D5CE090C2DBDCA07C9380893D5E26FA9707006A9
BE59CF35D456911504CD3942C6AF0A3E7E7F9552F546779D456ED50C80708CD6
3BC2E9B8D35CBF8B621D79DE7C2B618D3FC7FEE939D24196218BA46A909A48EC
D23A691A226E4C97FB2090AD49609882A99D22F4523666A172668DA4E30B33F5
41C81672400A0479CBFE035AF5C8978BABA720B260F9AD796588B9C26945660F
55732384626A5E18DA6D13243DE39A9AC63DAB28B35F560EF4F41816052C8224
25C744929646162D3AB85E8C34EB2E95915E9D71CEB819A10D25FBBFEBC646A1
F547B68B9DD73F441A21436B95911F163A045073831703A3CEA6947D9AB27733
1F8272440DCD5C73ADBDA46E86885D300EA68C7B9BB15F6A9818C1A43F3D5DB9
356E24BBA0742C4E46B17A6ACCCCF24163DFF71802BF3E3DE244B5EC0B7E4C02
4DAA4ECB9E5D93DE03A58837FFAE19C1B186916E0A48A68F316CCB5FF387AFC7
DF3C17D3116C6C314CCD7609A477EB989AAC211CE374ED5FBB18F1B0C2477546
D1D3C4D0CA7DC5F38D0CD26BF7B12E9D0C10C1E350E571D93F9691A4564BC0D5
C0F2424C2F14AD35ADE7A9859F83D64E1A40EA70D5049BC54034000742EB2AF8
4F1AC8ADAB7D7BED4CB25332FEA98982AFD42987FF296E361CA5EDCCF9910DB7
99D1789979B9A22EC4B56F65E035FF452AE6EA5D209072D17A9E03D5B62836B7
A48D6E976AAEAE6DD8CB352756AD43F6D97C81E3D654821D247C5A2E208983DF
97B10D9423BAC83D05E591EE4E27DBD055703C9859EDAE4D24CFE2138ABCED43
D343A582F473D960082AE3CFF6D2ACCC9CA17D27A584274B90A748093F3F05D6
59EF1D114D92B738ADC9A16CC2359EE7FCA283CDCCF194929D953EB69BF26E7D
F6EB1FA018C2E7C923EBE1E26B96EDFA26BACEBAC73D669CD30A7FDB3DF17E99
A91E13247FE4B39FCC4A14E6F28C88B8EBC1C3A9498A9776C0A94405799CE870
CE1305C5CD3F24B28ACDF98CDFFBE5278F93958FE6D4B64920BA741F9A9E0FDD
038903929F9BDCEF83D1FCE1D4EDAD54CC8BDDD83B81E189F9635389F511CD46
5D4B881511CFA97D9F351D9DD63F8E7AAF0EA12F8AD60DAE91CB58907EFE2761
C7FA75D3377F2CE49E58A8316FC78EE599CCB37534166B5602185840B396CB2A
75B48D13364AD33F8F597C33BF9A80CBEB69AD80CF6AA708D23081807C76B760
04D5550F42CA25F52389E4FDB93A0F1D086F7D189A46052378010B4CB598FFF7
FF9F5C4305196D89E54AD2B1712400396F8BA567AE928502322C7C3B7F07B630
C9B78C108E02C243C87F3C89357F25FCC0277061361469E9353A11C555DA8A03
619F3A0A1465E7F647D3978B315F723A7E824654003F6C09CB0A2C9208056397
5151EF84273B96B5C5F3BE40621F2F4EF7066B63563882FA85C9F670D0185719
851A6107486DFBF857B14F0EA11E961CA8C0FE13922A16A7A6CD513177910C0B
BB0BA2FC02C60B6133F721F14CDE9752318163576E38A802777D28AE733ACFEE
3D5E4270B373E5BA85BAD3383FC7BC9EB81A32FAEA38594317FF7361E7A19A3A
F413782BEB0C410E71B0A7E314BEF62CCC0D245EEFF24DAE5D50987BC1E0296E
A0770E61DC7A9CADE82A3230E530E853F553A3C4588D2F68938F6F12C71DD4C4
EF5BFD6D369D358F1534F47DE5824616A31DA14B4CC231E263AF77F2E83B3D16
C6B43D1895B11EB630F9609822C5E17E65A9E6435F6771C75B65EC1128CB1832
A8F9980752384B3C0F256A274420E2A917AD014D02F85CBAB811CC5B7FB41CD4
F671D8C34552C977E6B36AA2BCA50C9811FFC95B9E9E8D0CDC95F5A3EB9B35E9
7EC303D8800EDF268D69D638E59CCFCE83DA35A5E4EF85228FE3BC77984E2A60
C4A56097359F9ABDDF087DD56142E6D6DA1AE7F4B44E0CD35BCED77C0A0FF37B
38AE36DCA6B577952A3167E72F24438B290490BA1066E6AB6A0C21DC9BEA3CAA
684B0E9A13D35F87E6E91140618B1A53A33A7DD71E4D8D30F4ED21264A5B39F1
43AC964AC16B8D28112F51DED5FB4D0AD5FECE1D17E77DE30E4887C05EED7915
1F2C094A4352A1474923BD68161ED0F94F72126A8A0555AE296917F7E62BD4A6
468B8348506C85470436B32FB314568413E297F62BA0528B376FF3B5D2EF06D4
4F488BEBEE55A28ACAF9D495F424E0B0C01C808CF4F7D862BBBE2B14E19BD44A
334CAFA4EBE680CC21AA4C759061E5B84C7E01FB84D74792EDEA216D7C7E4261
2F5A0150BD9463F18C2144DF91171DCCBA54503E0F0B21CC7C5FFA61EAD1894F
D9EC5188C23C4B6D68C4E3CF35EDCC2DFF7539A638971361304FB7BD8F48292B
0ADF0DB7A7D53E34D3B2D02E507D64CF040ECC8C8685A9D0EB3644DD34D67A14
AF1D1BAE18A1F3B9A8B997A09A664F9CDACDBAE1CD560B68FB37DF3C3BE11CFD
4898FCA4C3179FD460F56D31AC879E007E354D0A38C0C4BBAB1143045BCAC07E
1A3B746609E98ED641F07365237D8B5E49F5F00B23440CCE715C30AEF628FD7A
6684726EFAF9C637A4469470E9F1F12F6999CB87D042617B01FE4F74D7B75138
BE17AD8F1330D6636746DA08005178AD495B06833539D25DB411E58A39E67AD5
DEFB25645736F5D60D4A2BCC32851E1CC26A903E7EC56FBB12D164951FE38674
D4E72868CF5C5DF7D1AA90490B5D2139DD092940312582A0FB0F875E45E6E0C4
595C465322C310E20BE8DE064DFAD725F0C1BB1C6BCB0BFD6B654621706635EC
3992BF23884336653D721C0A36B8DA96E19F06C637BDB79C7A3714345FD4E5E8
FE6C8A3A97DE556D5B75883DA32F2739F6074B0FEA7705FC2E0662C0079E28EA
0D07E60A75128B3FC5D95E773D1172F8F66D46AC510781B501700755E73DDD34
409B6C55131A2AF5C0F32B65AAFF1BD9FDF176D8F142B5CB02397948E05EF470
993A61CD2A463E69702266FBCFC753EB28C41051CDC20E54695BD4C876D57833
7BA78169236A9C9576120E8FDADB9DEACDF2033ED3AFEBB79F376155CF3B6350
391F4D5D03E72E207594C90417638511EE6B6EC0B3947FE260ACDD0541A7CD65
091592C37346C27041EF9A7DE215BFEB7222C0F6D05830C865B88E40874655AA
4010B7CF35A8D33AAAA5C2C6AB333386AAFAB5E612D80B5AFC8A93D2D528834F
EEB3AFAC52FCFC2941DD185AAB7BED768D0A144196F845A72666F63F9B29781F
5654A011B8D31C86B9548AE22BF5217F674DA6A99F3BAE9D6E0945862397E5E3
68427A7F461B5A420895BDD3374DAD44C60D9241A9CABD68372DED2177135DE6
77BF6EBEE0BB0DF82DB43934F00116FDD0BC65A846A9022ACF0D6AE5223423E3
B5DFDB217957177BD7A6E7D66649898299AD4FC0BE4380492156E68026F590E0
C3EC457D71C1C4F0ED95D20B892343C4B77BA94675A26C41ECAEA66D6C5E7A5E
1155F6E0CB7D068E9BBBD13286FB8BF5FC71B55132FF41C4B6B5CB9CEB99A052
E277A51AC0BF479A6B78D0044B8B010E45315B96EAA354FD0533106B0107E35B
A1DF3AE0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusRomNo9L-Medi
%!PS-AdobeFont-1.0: NimbusRomNo9L-Medi 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Medium) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-Medi def
/PaintType 0 def
/WMode 0 def
/FontBBox {-168 -341 1000 960} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E178732AD0E135F772215
EA7EB7EA7641D31502E1BB9661E7B0E875AEE90400138F2AAF4A8686C73EAA44
E5CAB467770A3D12E9807BAC97B24A8EFB0E276760F4F51EC7123C43BC6F8DCF
9A2F496A9172813FB461FD870763306B45670653A9780FF409B734CFA74C12CD
150B03344295918C4ED893FB620A9499404B83C71152BF2F2DBF769000D116D5
EE264C016EE3E1241018F59544CCE53E5AEC124CF6C59A4D7D7D511ECC9AFD49
6608ADDD237358D7CF8B4D1C5BD1158CDF2D6469D9BD6E6D9762ECF34D1C3C27
5F69900E0D12AF9B21F153585742E999870BEE3DFF6309CD82968EBB40D9C269
CD4306654AAB6734151132DE4194072485FD082FBB6DFCB3FDFF9E1FC88D9483
8AA64B5825293978C70C9EC095B18352BFDC34B4BE9C939384E3281BCC6B1808
A6B61EC4E47BB6AC14B105FFA7ED6AE99A1CA0B360D1A5C24E0FBB55C66F5811
A5CD0625654654651979A8C4C3612054181CD300CD42D1D9CAAA589118D6C7CD
5EA8A9A0C639D5539430D40318F4B739DA281ABF2BE2765D44F45B218BB192E1
9EFBDDF7777E8730FA7DC0651BCD5D68EB743C51D9CED55403021D45F77CAB5E
7E892B3D1F875DA86C030A2387487DBAC8795749E849EC93439C9E22EB20D11D
07DA0F09EE9356D55B8D0D8555F1B0EC98C72863B376D3436E10DE2FB1AB9453
DADA019DCB64F6D059AB3A95B28B94435004C9A8BD3FB80E2B9DE0E330D03622
3AD965B4283E6DC880A2130185CDABC053C52693CE3F50557F524D7CCA9BE05B
FF9597ADF5D1C432C00C0B0D8EC2CA8436685B4BF3E2105B89FA6CC787B77637
248796C2F43872B3BFC8011159C22EDB7149AD8932360A88A223CC638BED257E
04908032ADA750F17279F7331189C322CB5ED9B66E502945BEB1EC68B1C7BCC0
2322EFD669C229B28CE1D0CBC0005FF967D0A4383E29538AFA13D41D484D739E
487D497DEAD8F661847A5D82D77D91219ACF666E565292384728E58E1A489054
8C3E34B413A6A550C499218E7FCF43694CBEAD016119CE85515F5EDAE3CD483B
A0F32743E7A189708AF0CB6FBAB22AC8F23604FFECE038C838472CA40ADEBF08
47AB1D450E07F9D51828D25DDCA679E3FAE54634A37AE1A5A778365C5A2C8A27
64085AC775AC132CCF27CA164C4721F67B63D52E388B17122F15E5DF391674CC
B6C9EDE307D79E390068970FE0AB210337558544E8CA59BD8BAFDAE0AA6B50EF
8231DD2AF57730FA7EABD3D44DE5C2197CA778FFC85BDDAD152563B5FDC3F629
8C4728C9DE9761D7779EEDD1B150262BDF03C3F60D09B87E6267D7E5E43705D3
D364B37D06E4C153BC0F8F8B032E5F26D2DE7CCC0E927EF7D853D4E937863F0F
CCE5F79063649DFE6A9C36877D0B777E6FD7DB119677C74E3D0B1335C6106BB2
2253EE29D6495AFABC530EAA092BB709FCF1D2F4A32810A3DBCED812EE19D10B
0E690DB204C2CA3B5A07FB9A6A1768CEADEE7B507844B55E4CEA9D3179759BD2
0CF8F5B58D1394CE6906BD2ADF6260EB9A2A59A536E483B745488A5A82E16393
CBC17F406328F383F2BBE3B3B2A6AA6A1FEB26D4A1B4461A009DF7C2666CBFBD
B5B9834EC15C047FDCB4E0CC99AC20DC2E5181FA219E49C2F4D2C8EC80D9E187
F9E15825F5721D388B5A56C9FF8C4D4EC2F469549C5E2F6230337A4F7893FDDE
E3C61F3EBFDD15A822138A17ED1C6B430CFE77568235A193F57FD51F202DE629
4C204F576397053840C0109C325E5820D3C9EF826C2CABED7C5D4C7454D57F36
70A11457E550B1E5EB5E4E06836768591BD979D642FD47D7677CAD5B82B4548B
CFE806EBDD7A96133B2E41002B812F8E1AE5C8B8A9DDBFF5124566BC16EC1798
9C1052F8E184590223348E583C314D27C43C08B7B723B9BC4EB7C9538A2F8957
45068B89BFFBB595EE95F8BE4F058CCF35A29367992E5E5777F048D317210A67
91D432094998B144BC6FC564BA50B10D8896713764599CD8634344DD66EF6667
3C1CAA75ED1BC7113F02639546C046271577CDBF8AA7BB7B42666551A0531739
7690661D7B3C6CD036635AC005964C989FAAD34A1C94F15DA238A58F1FB3061D
B6B3DDAF549AEC049112F2D95DC0D89B3135BDF2BD8ED2281DE318DCB1B5A6C7
99895F16D274E277A7FB8BFA6DF104F63B78774431E6906CD36EAED81B0BDE7E
973C70180E1D12848546C36223A3B17A6E2AD43C7E98803D291EA326071309DE
0BB4DCAE71AF8F7727F737D807E2CB59BD01C1D26808A158461AC96DC36352B2
536CA59253CE658C0F03ED3EBA0348F6096EF7753EA539F13239B3DDE5083519
D0D34869D2E42BA1351FA7BC47642A19C1AD14481B2B51A267F1D2DCFCB8375E
856D321E7A99529CECBBAEF4879B8F6116D120DA29220155085322A408B5FF20
CA2AAB56C447B58D3C490777C30476CF9BD30E76E0E84F5F401CE18E37E72DF1
0AAC77E7B114286C3B68D4AC0396EC2B127C2894B02840EBCED897D3E4F629DC
3558E7DFF3379A0A4D590AAE63A705A9D11DC2C1CD378258728D59BBCB3FCD32
C534F0276C074DACAF2902C20BA118C90D0ED27006A83C04069F430855DF1F08
3E739CC9BE938C121E305B83ABFE4A1F3BD1B8490BBE80F6E45E346BF4C4B8B8
77F6778991BC0756A8B09EDE8F6C30A2362BC7E5656391E6D986BA910BAE371E
4E724CD85BBEB3817AB6AF0226603D6AD584EE1C93B805A2B40E883572A5A463
C0C8F74EF8C973BFC0C8B9F1996E9BB66724E0CA78ABAB862AF1D7550E5E7E67
87ED19E2F71217C246E6322E3D05B4A60CA6D94748EB6E09BC32A065F42AF72B
FBB45B9DF9B9C671DFA31D602CB719532794EA313841163051CDED4D8E41D46F
36B33E1B2B0FE4CDB6A6F516ADAA1123BD889A725FB835D4C27FE8D5986251B9
32C9E97DE2ADDE82CCA64661AB409E37B7CFB3EF9096AE49BE13904D8EB67A97
5BE804C5563DFC3C67C8166A935E2DFDC56E7C761DC1D072CD01B49DAA9AA780
1CDB41A857C054757ADBBCDC087429A3D69116CA81623F954A04003E406C8AA1
33F7AB5AC3000F952E0666AEEB60489E43D04D61E2BA368305A9155D12561B4B
D1F08A57C19D69CA6B3313142FD4E4225717717DBA723C4309D78C7A77864605
65035BED5BD24979EABD04B0BA1865C61A583F3BAA7FAFC3C309A8B200F0F29E
B692ADE586B8E56F0407F1F9DDF05CC2B68AE83E5C71A6D5833EF5AC57C32EE0
2DAD0A58D99663F85BE8F17A3B89BE9609E857531F33227904D8D757B2D3D157
CA6CF67E7DDB0E5570A70C393231DFD028846579AB2CBBB8A87C0939B7ACDCEE
DF545652FD0263765A9458C6C16660096EB128A08CA9E1CB491AD747D7810658
7E5944FDE7CE54852D947D57B5CB220926BC834B1646B70235BCA2E89C00FE1C
5BBB67140F327E10C02B8D7AAFDB3E2C7FAB218F58439AAE1170DBDA9AC3B337
48660AD735F13DC9AC40DC159707C99A752D3FC809DFB4A1DD266A5E734914DF
FF559B73B9E97EBE0DC8DB890D11DED31215B78DEA1708E447E0C5D78AF5B29C
3D9E18A27FC4CF05A5F078CF7BD2AA43A6F26735142CF561761F69E4FBED1827
5E45FF2928F2456CFC3AC351A3DACFE29416A9AA7E3151A70A57909EB341DBC5
23ADD4E12A3308A9887E9E7F77D6E344B4029236250C21CECB01F560C99A5F60
0C1712BF9A5E2351E3BADBEFFA219CF7E9B6F0477934A009A070DD833BEFE931
56F545C40DA56736E66D332AE7AE9677BBF810EBCC680814B3D59C1ECEF77773
82B772E494919E172018B0D73FCCB05924B33DF8DDFADD039C0627468E4BA725
E21021B82B84B88D6331C70F48BA02FEA751D326C0A25FFA4F3241FE1E28E0FD
B39562BD225A48FBB40F3ECDEBC19A3AD8B321553D81EC5AAA31A6791A559A80
3CB78491A65FF7D3A2DDD0677A75868D7D4C2B29A63FAB2184A2A1A77616F16E
71DB01855F65A727A3D570B482AF112883EFDA45CB16100E899C770ABD7AAFCF
78B5AD044B844BDBFF78EBD97F40F1B3B4DCC4B2900D0B4C3E6F89363AD5D292
302CD7DAA18888C8F8AF39449C06D6558A8DDBB3DB0C7D5F1F41C61B5D12547B
77C35A1D617BAB3C6DA0E60696C499C3E9ABD27F163BFEC9A69E88EB691CE39B
123A85001A74961A17FFCC364A06A5724A252400D7255AB3C88C0E9A014EA43B
39904AC4A1A00B0BD3607DB7466631822AF1BAEFB301E6900AC2B65FC35A57C9
03FB8CB1FA267164F4ADAB0D574488D4B9D678621BC73C63FC2D8EE1B1D3F803
1F677CFB783BB39FB24F9C16AF1CA3BDE9706880F3B59DD762C2C4444FF6D0FD
1A4881A34FA24BAD29AB5539707FA4F66CA2DD0DF116C44E4AD80A83201886DB
B83F6FC35164F4F663C71790516F77D4DA319B068F896B3EE954F5A5C0C971CB
DA5DF6A215D767D02EEDCB86711BA0DC2B193419709E52E6A095114588EF23F7
0562B13817D749424D3104F86B8285C10A35872FB7BD0966200D45200A85D27D
90A7BC5FCA56EF493269B070A435680C1F9DBCF3A067277802A5DB62E9A2A18D
E07C819E94F8715C4F184CEF99EFA20709CDB2404B733506E7AC12B9F980E959
908E1E9E3FF3FA019E52E4768CC208D4D5EDF68A5400F08DE62A8BACDC211A5C
2244B70FADDC7800CF6118D677EF4A3E9A6542B4291D9CF9B60ED1A5426572A0
F2E2DE8C013FCEEE2EAD0AE6BC9EEB6AEC573E7C2E173BDD0A4632BB24801994
FC6FDCB351CA1860BB82A162DF3B9B7F1D0A9D11C56994104CB4D353F747EAA5
D47FEE53720EA2953436862018BACA21C7B5BEE249399FD08CB1586C5032BEE7
0B05F7F43C1FBE95C64AF7864CBDB80DC12A4B7D1427772A54235E011367B4DF
CFF2E1D062B1B3CEC59C08C296AAF9B518E0B620B2604A0F02C3D059DBEBA1A4
DDF347787825DD49D11DAEFFD259385FB62DA200CC203D15AE5D01B5747EC15F
6E5BA686EB8295A282705BF1414AA87E10E652D2009DC386682938DB4B1EBA86
93B1481B4F32CF7A3505D4A2A876EDBE856EC3A82F34810C68ABDAE536D9DDEC
01178E42CAD202046019A1A67C9A7F757B4ACC3149D3036119C2C09BAD4A9C2A
895889F9D505B1556A38A0B6CF7E1243FE9BCFB3DECDF4620C91E7A1654F2D89
AF7D676499F23D26B47B9CB5B4171C6FB0709098A8F08091947EA1751B1F6385
32CA099977DFAE9E85990ABF2E14210890DE24639E116756AD65245610E87023
F1C0B776AD5B2483DA0BACB63D5A1E5762A219778BE70CE880B267FAC50E581B
2DEAF6AAEA5CD7E277B10D2D2DC10721300057C54A9E923A24C9335691C39E3D
79A6FF2FAEC3DA6CBB89A262DD3265A50CEBE46429B371EC7E46B6E9DA84BDF5
CAC71F4E90EE0661E9284998AB98F1DD4E042B63E257256BF0A7BCABAC49BC4E
D2413E58486776B00AE3797BF8BDE5D7CC3F8237395F6037F0180333B6DDB494
2225BD45F6FE01CB6C10015841B66CD6BF4C715C9F106D609D03E27B458B4CED
0D370F9E9BEE72029357C85DE0838FB8478B1B94A3F1AF5D53AC484C532C38B5
B60B749DF353AFF7F47BDD61C91DA2DBEAC05FC1086E047F043F4D780E9A34C3
E671B402F789CC1D1C0BCE37431DFDAF370FBC83FEF287B3E4A21FA289D04F0E
19A725568E617A5712CDFBA57001DE299223DDBB4AF0ABBCBB6E98D65B9C832A
F14A4F48BC1ED35F486642B1E5276AE3D72CB17D9A6035C6D835B0D228B5B6F6
33400B07640797685EE4F508E2D17CC39C6A7806AF9EE37F2AC8310B01E2D168
E07355A914EA12131ECE5ED99936CF709C8A3949D0C8CE4B3EEC40735342750D
453A14CA49E9A661C67235265548D43EC1DD3C9E08CECECFB5F6CBB15390181D
330ED60ABD9581F439C49D14BEA637CCD068A86773D55E58D5416C8AD2804C71
56ACF5D74E66F11F3A1CB866C7AB583ECCBE6FE0329A75576C15BF0A537D38FF
2162B2C27458AA6CD35186EC4B7318A60AD493E6DC26B83665DB71DB9A480D80
703C725064A6E5EE7F960BA25C294762580CF95CB8BA8EB4939E9875835511AC
6397594F8149D46E38C9E5F803E0E1780D14C57162531A16AED4911B438509F9
99C499367FA0E0FCE10496DB9EF16D81BF51E71CC594B8E794144A860558ACDF
9DF1E160BD70782C6538E8E3CDC85BFDEE18B469E7146C91E45274748C65AD4F
2DCFCD521B2274A869792DEF712508492044E24FE224A14BDCA9C8A97289C5B5
B2A3F2505070BF0E1FE4B60BBC2102420DBC2F6F6F7B9EA9B498E23B56178B25
1BBA1D812A10381D0456CC203C348DD73C1D3BFECD712EC46352ED1B976706A6
AE560AD6A82C3B0C66CD40D03EF76649A6AC929DCD3FF06B9FBF62FB17E52CBB
C2EFAF3B7F0B7478DD477AEF90C0AAF406F5049889DCE822D58B48EFD185C651
E24ACD1D0A7FF74689952C838623B68519D11ACB5A55AF22AF3C69E25898FF63
90D4F9D3AB952D812DC7EF545B8A2B482868D2A9E4FA7FBD5CE49A470899F4F8
3517B5AD2EFC4B2AA279B06EBE1DB8826B9C0A9C6D69412B72CC0CD7177C0206
99005F6C0D10D78585740BB798449CFDE209001F68B04377E9DAD87BCD6759B3
DDBACBD0B0D742C6CA069465E5A64A0E8A150835751C717DAFF655F68920F678
B5C4584A1EAB39443FB4126192FE590A0632416E2316A739A2703A399BACCB0A
38FF9D6A22E66F10354BDAECB0ADC7DC3FA7B24303B3C291B173D068F646C9AC
457A5099FA95167ACFED3C707D5771C74A5837D993CCC2992E444218A366046A
1B947C681186DE1D3BD3710A1EB1F5BF62B71CE33E468014DA1E445EB52B2BEC
F66696392E1B71AD0FBA163635704071DBFFBAF1675780138ADC47CE982A755D
DD349D56513BB6521DCB5B18875046BF8CFEB3A5D0AC9CADD46DE48B2BD2B51D
7A4D3FD842EE498596F3D15995DBCACFBF885FCBA160DD6CE6A7A490C010E401
7AEF12AAE3D45E10BD736BF7520641F485F51330A99079ECBEE429138DC66B96
D6CB67FC2F45D36B651BB1C908D2103181F00DF8DAC3BBD7148B437B73C9FEE6
DDBA443FC0AD87BFB1ED2F7192209B95AA058750DF7E7961AC02E369C920DA89
C300920143A620C2D3B44D3F90F59A766CB6063DEA3688E60428B2CC42D69618
FE19D81E3E19A7C96EF9C08116DD8F50F132F8E84B668D8553E048EEDE577A5D
54966A664A240D7FB8F5EBC8488E3385FD6CC94B32A556244A7F1526D78E6D0C
65D20B898D4E11903C37DE3CDB0DD546C8D2E81805BDFC625C5717D4CE3E694D
40620979205726FA57C6450A6EA03F60DCE93729098B15814D6B8746375E4BE4
34590D1F8326FAA1085B2B7DB327D6D4AA9F887D96DE53F4A2C4AF684E68040D
4564E5A47434533AE9A2134E2262621DFAEDCCF13D2B27ADBB254F03D7E57334
35AF41AB5AA1BD5C3AA3CFE0580FDAF7BAD0CA2AB966D475DF71852022024A3F
966175A521120D55F0EFA152ADA7ADD918D45A1AEDDC8802374028375D32CDF0
4E98004FD6E50186F11C5AEF48DD6BD9E9151B4B704964E5695E4E519B8F99CE
6966EF22DDAA97A2315EA8C071AB63EF9CECFCEE020C7270AF0954456C6920F8
891505A3F0D710AC71210359989F6E41A0ACEE38A655AF0D0A563D38ADD55AC7
13D204AFD65A7E44E106EE0AF417C56C378E8C16EACC72C00DCFC9413A4A09A5
5D76CF38724D79DCEBA0DC5F0335C770ADF03B54407D4E675843A050076676FB
C638F830B211D979B7B9BA270EC46983AEA2072A840862E9F3775CAEDADA0690
D2867E15C4C86957018D427D725F48CEAD8BF036B382F73BAF1F52EEBA7A9186
709E264269259176DE98C0B81A75C78A77CE2BB4CA891AC8B6BF30DEF5F3A5CD
26C6DCD44D62EEA6B5033525C1D286EF116C277C4C208CF264E97950923955FC
C90BF3485204CFFB0FEDA09991D35195F787EC032345FF5F13462F4D7B345C73
0E7559809666F79951A9F9DCD1BE4F987CEDC15DF8804F8A82B131363328DCEF
6D653A038DEA61359C5EBE9F735FC5D0CAABA3E6E27059E16A91DED9543E130F
44806B12AB7E1A6B17B15FA30B0F0F0E993FF236FE5B0444D631147FB95D1B21
F8B1B2EAB432715BBFDA58999084F9347B630913D8288F0419735DF90EBDEEF5
6F44787F6E54B6AAC17266664663386CCDD036E32974665C1EBD1FC1B90EA0C8
5432454F1594385B2AF841D9A43016FD85CF9289DF78EE12F3DEB4E33DCD967D
167E99037EFF7EB6CBC34FDD4C97AFC7CE9441475183C8221AD466A9C2B7BD71
71591C710366EC9E9E9C1D03E2D3F5E2EF72DE51178166EA60855627B34B0D31
E35E38FA636A0921FEF84FB08AFB198CEA92EDD3C90F88943A5D20C4D42F2183
DE74034DDAFFC890CD8BB912A1C704EC14ECB88F9D24D202865939AB8DE6E2E5
019F48C3E3223F9E340C65E7A99EFF163B7FBD24DFE37E30E8FC47F6D30D0CE4
C5E6DC22B2F397C1B7A68ECAFED136682183CB86E49BB5F3896887F0DB0C1466
2CA0DEA1F18A4979984605F64C282842E2ED8FC597B470A42CC0388738CE4B29
55A9C7950E80F92DB796238C985A124A3B38F7BE6389337CFFF9DAF1BD3504C7
44F5E19A7E7F4D8F9B18E72F15F0A5CC39F66641FE768D7165A2C7A2292E4DBE
26E76109D539C7B73D54FF1B0E1C626B0F86AA71C02EC7A9A57E7901DB58A0B4
11A3952EDBBA3BFE050160C51E38C0C751DDE67D9ECDCAEB8AE755A41AB90F0C
EB9B96FE8BF50099CD74D28179BAFD3C8162FDC7AFAD395E9973BAC93A9F5E95
E83543F29ED2C0E7E2EE6A386F7CC94D2DFF834567C10D3914453588EFA50D47
8F58B608207A786D5B4983594D80464C24F7AB0FA91DBBAF0DCAB85DE7232525
024FC893BE554137FCC3D181378141593BADC0B6FA3628B1EB9EAA51B861EEC9
48584C8D5E4321963198FA99C53536EDEDA50ABB2E531A24D1567E37C3046F1E
7824AD632A4F12434D63EC5A3E0ACD13B07DB2B87F22977BD7C720F24E9D390E
F7866AF284F220372CF101D2820C4B919D08D7F4CF121C933B7A25D4963D227C
4262DF8117E481179DB35F59A5657B02F4E7CFF254D5C9957684C77AA4F6B5F9
FB68071F03207C6DB3AB426EE63D2647B8F925AEBE62E9900BDC9BFCC27AF278
5D069A19BD7C05754EF0BDCC8B70ADC8B47AA85F49A8C83174A9AE49F2269083
E8425C3739504F93587C8CD3328F0DC964B24668DA2312AD7B497CE7CA888BA8
8D6EC9E004BBCB58562AD60AA8B272C0149E7E4219CB3835F4A9782A069A9B63
DCCFDFADA4053E2766F605A34BB73E20645B7A61361022372E4C64AD401D1C68
D4C7921E7891CAAE491149F05398A961E709AC213988AE1E6FD9D5449B23D8CD
8F1C92BA6C2802FD1A1822C71F58EBE55A7EC3597827FC29040C0C3F06835537
8CA104CC80EFDDBB781D59E88127C87FB94D1E0B609B99EAB171FD8E6B12A890
3055D53313DBD1DE6C8937D66B3714B8E90F7E19930E724352B2DF600A22FCCB
736268C30F74F798B3EC272FFB4A01969BFBB8C47A097279C543276FE99692B0
CD741F6513A4C596C3677C57AB1E920F32BFF91B2C6372E6F0277D8600AB7DB5
17D5BF5D79A01DEFD54B2F8FF931F1C20EDC6CAEEF7CC88C2D4583D5CACA9811
DCEB013ED92EF746B60D5411A2CAF037CD201430A9E6809A5656A5968DC170F1
FBF0E7D6E9929A0E8F1E6FC28B9BB4771494E73522C4099EAF7681973A349475
ED81D15A26A644743B53CF0CD7FDCF48A0A9463279CFFDCB82FE9730B2D43F1E
A571D30159979693734B16AB45A7BB793871DAB143C8E3DF12E0EA44B99FF032
F14D316DDD5027A67AD13FF34C837097BB9CE6169E0FA0C438956782496AD85A
11A5A060801815AC31CE230E6DD78ED0BF2B97A5D04136F429E128E6BB9035D3
61EBD801DCD03716586EC2A715E51FF0F344B58CB933AF1949307A201864D1F8
139A94680FCE37D2F442059147876AA4FC5142358AFC5B5EB34FBF42A45EF326
5EF16B3E6DA48B07068F8F0C4D6C5DC31B97CACBD16EA1EDDC541AED28ADFBB3
7C89612953825C3D971C8AD739BCEB42859C95208ACA80286C639DB89625ACAD
E4481C7E08D21CEA08AB097C3DCAEEB3087C3EF69A360D0C53D0CFA55C06633C
36D32CB9E484FDD4E4A64E019B6C56B28487B2182D7A5B4CCD3C2FF05CBB1D05
A2048535A3660E4DDC23492ABFC15D986B7C8C8679D05460358BF68F4D57AFB3
50C8401F3906C080193EA2AA9831D08BE74B99BB4ECE58B8318176802FF0C226
959159D7ED8EFD41763B2EEB14CE3164A05FBB29A0E40E755815ED30F1417CF6
58D88D55F4B2AAE6ACFDE88768568C31B1E14FE2FE5102B7F4DF3E4FF03E6F44
91CBF50E1AAB4DB1875D107D8180396BA6046C2C6F51C26CF9E4B2E310D48403
63780C68504F41331F208DA2144AB09286BE38266BEB239F8046CD4F6DD29CFE
584CA22C60BD2E1036D4E38890A7A050EF59EE647E2E3EC3883411401D6784FC
B07E08AC8035332E24B1C5F017F27DFF2F8C37AD6B3DB402CB970662D3E42B25
98D1CEF588585C7F7CEDAC3DF29A546F652311A1151BA1B9C52FE8B51720FD43
D82AA715CACAC9840DBC60F09334486A2BC7EB3334E5CECC9691867E0C311918
0B78C205A58F29DCB55C3052048B9E3129847059CE0F6AC177556D17F337F31F
C100C92E6405D7DD1C1CADCF7E712A8D7EA7C777BB916526A7CB9A821B14E4B4
19371CF255F2C71CD1447846216EAA9017CEAD458F7A4D93E6230230CC5B7D0E
46716D81039491DB446916FA5F10B5FF1AE7A0F340550A06E6873997A34909E7
A6E74E315A99E03DE5597039E640191FBFFCB121BC0352247B8C6AF0966CBC44
9C788B427E5377513B0FCF3DF537FCD61BB3678AA8EC6137A6B916B884A136A2
C1CC1019BD805E1F6A2B9468F7CA43975062FD00F1833D68AAB322BD74142D45
2C210D2B939D23DC846A41F7F1107728BF9E6B27CF8B60B76961098097405CA3
AFB482B995485CE83DD1881C46486E3A8247773BF93CE1C3593D56A4D8893AC2
3349FDF9163F7A4B2A7C503538F9EB6C9F9561EC12974B4B88A0AD2FFB4491A0
3346BB7DA155890534199E1D6FA71F8A4F048F596C8FED28F07755A8D3AC99C1
9406D1FF3412D50494B24FBF2413C4045325947392870511E2D43F924AD3D832
19C023C1926A52285A7C4D903A367C2E2007AFDC8140DFD031E524AC04B3F74B
7DF109DB05AC52615F5C4576F6EF44CBFBC583BEABA6A577651BF99F44ABD3D6
8FDAF7F8756B84668463680AA78A41E4BDFF189E356555DA1A22700A87C2999D
DE579B60444EAF9918B88E20F71C865A3C7B1B589C0B5BA0C811390F952293FB
37A1EB49A99E4A07515606610BF2B74AB4A228504E978CA100066CDE17ED245D
82EBD6D8A0E6E05435983DC335D84920C033EBB5F7FFA3A31A5A1E03E1F868AE
5B4B389E1934B98FFF72243AFF882E061CA00527A9ADDC118698B1F3280F90A2
FAF82D4125EA3FA457A2B6DC3D4AFBE261F8D4529D93F2CA8DBCF55453A1FA4D
76121001B3E3676963F37DFCC943CF236B074DBCCA06BF120950B4F8ACE22418
F08755BD425D00D1D5B53BF96B66B51DF90BED14A3164DA8B2883B0B2CA52A8B
48F33FFB3AB00A9EFAC8828C25C7DD412DB8410C0151D97D9B5CD859C51EE7A3
1E4510F5196DF93DC22D53B21CC5998EF2E2E49E3C4E6440CCEE63759898ED82
1AB23EF5AD128DAE985CA2F3C2B3BE8DCDA5CEB0E5E36288E4F97D9C29E03AE3
81D34ACDBB00E3CE315A4D6ECE6F3704B003F88D68139F4BD2C863B1E0556138
BA81C56F6BB94814EE8B51D851E5269B2CE9C17B631FB97B0F955DC39028C333
EC869FB37E0A2C47419CE43422FB4A39882E91ED97A96DA52D9F69E733DD192B
BFF74C518C72880DC5AA89CF0089CCB78946E834D7C5A04F954B6CA01F6B0CA3
360AD99EB36B2EAFDE5FDF5C92005ADF6BAEB359251DB496771366553A5FA814
6BEFB62E1603C7E522465BDD3E25A9DF8158DF67183B0FA6ABE87FCB83408D73
61B98B1B05BCD9E873051C730ECB6E0F01085AA2E37CEC405ECD451DF3F6C5D1
2CB95D3DC2178422A46CA54A7B9C2E30019D6E645EA2B73CCF0BC0BF2E27A017
4B3FC572BDCF80B61524827F3870095BCD16CF26E00CD63CF1411C62DB2DDD22
3779B1E6F7503E0C8A30AA00FC9CACF0E064724F0DB92AD6442393E4D67B4758
249035E055E61B6E0B10EEBE23B5D3EAC1B0024E13C0CCB254501A8353AFF93D
541651CD027D5B23BE4FC86005E73CF756A79208329AB20B8A48A155EB556737
FE177CDEEA1721DDF49DEC109E46BA9E162A0E724F9A85088E46CC50EAEE1C21
96A14A4D6F646BAFEB7C19098C9E2A52B2D6C0C8BB0B9B743486E0A343D68682
DDD7E10A9FB1DFA90DB34E373B20F89136385827B7980C2FE0ACB1C47F031084
14CB221F8802343692C68AB1C2BFD00F8446712528A57CD458DF6ED9F8FAF6B0
A70F46877976C12BB6E0B7BC93FBB87AC0D15C2818BACBAACBD8298AB19DC460
F404114D9A5A4BE0615A047B77289CD1998D457DD2BAFC5DF8A50E6F0C48860C
52FEEFAA70B595334556803819D6319D83BE8C08110D8A57A59CB3B83EF63E7B
8EDD6604EF7B6E8EB25A7E3E92666F3C071B85F99C19EDBDA44E136B806FA288
EAEAC5C55E304902C505B9F22F0A88332A4DB1B5557EC14BBC4F8A5CC4122001
B24B7913BD5DBA752088D72BB7F07AFA7950F10F1B8618DE8BAB103E0EF969FC
6FA61A1B3F446870DE4B5618B937F1F4862FAB6DDE4C476D0CF532FCF97002F6
B526482E4C92C78DF4B4DAD9EA2AA438F7E62D3322BE51A1D04A8C920ADE18DB
E66018CF8D38D807A232010212DD90AD87EE8B2751A25ADECAA7FD25CA7F4200
8C1D5E4BD81B090F9DBD23A20FB8F78495109D3306057522D4202B855A0D7C6C
E173151E8CD6C1167B84439A2A34A576FD32E70722D93494FB3084CEFE9AB3D4
94143AFD8F307AA61690B3F6FA15DCE0DB1BC25E684B0148C748F4E1E450A40C
EC2C60EFC6D5C61E47E074E3C70D0E771C53315ADC80AF9ED3BBB481D05C6908
8A0EAEDA82C2B0B3D4C78F0F498191D1C0AB0E4A464D4378077BAC69AA8DC1EC
A76354B05E23DF0A12A9D179F37ED3749AA495E3D9832D3215B3B1C110B1FB8B
95245403545C4E692C81FB96E158A1B9285754CE36C42B22AC76578F829A1DC8
55FC32B66498ACC6DAC6045C1BD81EC0AFA1C54F2F501AA172AEFA43894C6668
C57B610A9964086604922EDB718CD416BC7840C09A9EDD089B69DA960E9BB69F
09FD7E6BB0E9695642E732CDF23D3020945EEE5647594676AECC80600232A817
6CAEB338E15220B727C2455694B336EBD7F0C42E9768E4ED4B2C3FD7E71F4917
7BCB29E30391AB54FE45DA1D07990D30C95E2665C3408CA1DDCBF56C4AAFBF9B
0A715E2AC6A94D8CDCEA36924D015ADC13DA7D446F6296EA77D10EDC951669FD
2AB85CAC34D5951411C6F46CF3BD8D8E269B59E4FE2119620F9D9CC7EC5EE850
90AB69A78FDC06810D5EC17CCC537E4190F8C1EE566C0A75E0EBC5C22C6546E5
866486665CEDBCF38764B859AE6DF1B068CEA128E4C184CA7815E2B8515649F8
06B42C821134EB4BD25E07B48D8516663290E64FBC8E3877D01541BFD331244E
BCCB99523EE15E49FE54A2F2F1D66FF4604362616DC8C5862B461F0DEC477588
AA157AD3ACAA50F6722B91C61540793F94477E7C7105F83BB226A6915AE8EA04
13FEED6DCDA775041E6EDE800C385269992E2DB4C4C169B68A4450B64B43D8FE
CF6609305306CCC85FDEB881EF521213998A61E63109FD65D7ED7E906FCC5456
FCCDE9B2988B42D8B480F14B9D9A5BB077982EEC28CB1F7B07FFD84261346EC2
FC3B58C912F96AC3A644ED5337DA1113E4E1BE96B20905F79F45C0167877D763
D6B3ACE9357F2E03614CD911994BC6DE352277C93D69EA6F9CD02659A56B7EA9
419CE567562C067C6A0665BCF68687BC3E38A28BBA8997BB94ECA9668AFC335A
73A9CFF9ABEF47E41C3B96EF7F8EBB260A32222432C405FE88824D0EE0B1AE3B
FB5ED0BBBBF641E04004C119BE6E3901BFBAD7F4D869B891FB7A660181E94A83
80D890964107186607DBF316CE25FD8B82DF804EBEE7CAB8A772A358E88242C2
AB3CD710BE58C65737D793A30567A919BBD7362DB481C9E75A5FC8E3F4093B29
B5A64CCD02DD7D7E32ED4C191D5124A7D4AC28EBCE31F1D711405CE893295346
271E16F37285502156C3300A2AEAD3E7CE7A6064EEDAE7128B82E50635281BD9
4A7CDC6AD2E441D5FD81C60A3A1E8676CF3B14CF99E775DC4F85B60FC3763E0F
AA71C38D03BBB1F8A275DC6C338F6C0356F2DF105B7F78A86D7FF82204104298
173D442E7D35A1C9BE8F21E7270B7448CDEC0E7D72B3763F558C658C5660CF6A
AD5ED4F1FF4AF11D51113BF18BFEC55D2F96744F350E73CF838E2E0961BACE80
730579698F671FFB018DB162A880682F51DC4493158B83AD026791E8B63FAD50
7C372619F741BE783AF7BB0F8DD5598C250C546EC3B117474DC5148B288410DB
8A23F607126265ED818A011A99176C245055F4D9E7DC4FABD457DB3308F3C91E
B2161BFA6B1CC29C016ECA9229057B6FF7F7FAC5AB593050B2E466D91EC6D5B0
5686A2C1961C5E2529FA7E69E5E5E13F84D0C5C8AC17C026CBFE3B4245E98107
4B11167DC7AF363489EA6B93520BDF3484A3DDD4ECB45835B81CB32470C82A15
DBFE573F4E4F43B53940CCF16E9B92B633F630F5F14C6139818621278E2AD546
13621CA93EC91822F50986C6BDDED78818CE71CB7A8DD97A38F6DD4D2A3C1D97
7AB1F0E6AD35C0B4C60A29E4F0A37C5E041FE0FF832696F5CA0D4B78AB2C26FD
EC01494AB2827E1B8A92FF830C0818DAC5751E074BB831F91FD3032575023D65
BC1F0C6B90EBB9BD4905705D8AF8DEF3AED93DB4833DE2E1A980932DC3A9EFA4
CA39BD0A48307DBFB44994938D4170544DDFC5C8893F33C7B18B754688FCCF35
2DD8DA079916422AFCB6A7526BC6AA01B93D474AB52E98F58ED017393C84693E
319940F9F054056319A0793FB943F8FB18836EAF6DB80A0C98A4D444058F96BA
A8C9BA0A2AF8D1BE1AE38B759EC37528FC4A482A157F99A7672F186BCE23602C
E8AF421EA35CD6BE6121B5EED306AF737FCC97AF0F79B6FFD294207CCB14AEB5
02DF268C7B7005DC3AE7A758647CE853BCB1432B04957F823E2817BC1FDD98A1
D35AB5648A65B3B4A06D785101C99C35ED752708F6AE6494C2714846796A9E64
1CFAC89513DEBFA447656EA9AFB8A41EA0FDB250F84C9B0BCD68C728864CD504
B52093CE374070B5CE26ECD33693C0846C53DEC1B0B493C396F7FB8FF4D72D55
A72127AB7C8CC77C4CEB3352E0A897B79EF7B40E3E6B3BBFF38CC7BCA050C6F7
C4AD64E27F166EE0323CA9B49F706B79F7367B0C79F052E88A7C53EBAA083F94
A7F5348A2F35D378B9591A49816B02E0DECD80035FAB75FF0D43DDBBBC88104A
7104305CBC8835078F477BC9B29241C63F7E6B8BA03EAED769148CCF63B50953
E7D99BC53B96E3C5D26524633325211B0126BFEFA12DC3CEA88BC85FCE3DC870
0CCAF9FD2974C8CBBD04E84DDFD44627675521DACD23310402B8CAFF2A52355A
E2A69735BBF1CCC7E24EF2AF65CFADD059608ADF21BDB49FECBE25FD43EE407E
F8F9147EF1C56D1D311A4E24FD7ADCB7544ED2DF9F881063245BC565C4BE1E4D
8397242B00F901D0FDDA60EAAFE0357983DAF70B94AF5ED58F8B136764C060C3
5ABDEAE2D98C6534043B1A7AB27DB4A208778CB6A605884A8E7997548B72AA4F
E7ECB356C68E4B06F7D98B29A498568965EB813B533D836A0A6799FF1F78334D
A8759F25B8C58AC4E7E90ACFD136C9F3D00876A4E29762FB1810A6A0F7EA8A22
EA213F7D810D32E37A59AA5F1353EE785B304AA6C55C1E2C0B14EAE005E024BE
1099C72DCE7FB3C2117B678DF4378C539BAE622BAFA83B3410D9C7B90C317A5C
43C787B892AA20638ADCC32356886E9B27AFB1043AB164E0C075C4C75C23E302
712C80092AFB45CD75BA708BBA708AAA2C2D73EDC3ABA51CEC9EC91E090E3CBF
2C975040DAAE5730ED573000F98A11FBF53DFF4AA214F53E17A4E5E5ABC1E210
0E81A35B2BC62AC62D66B746FE733F4AEBF295B16C50DC385521CA04D6D5A57B
3D2661349933C1866DD036BA83F4DF1D7528B6015293D65DD9AA950D5719B735
CC1EE250EFCF0DF2611D31D323478E0C4EB5D09250C2695BD31E4083EBB19DBA
533B476B05651858DD1697FAA422D2620069FF40366BC63E624DB2C4C48029F5
8450669D0EF1EB8DC640E940F0BAD7157C67F5E16ADC252192B3173FBAA321C5
6E2584610D506803638F6E250C0E34E736D74F03FC6CC0FB325848541B1DBC25
2F782D6865F878E71CA03435B2248C5959D61D2EFDD6FA5257E5F5F312AEAA53
D1D80A5EDDE4A02ED5E45F0D94F804CDB679ED5CB69900C3FEC24D3F0D2B4266
B025DFA7D9805EA67253EA29CAC53F045BADF6F57E23E652AEBFAB7309FA6D78
4914698835DC68AF303BFEFCF58E603427DD5658B7808B5EFCA127FC281327D3
A310F83D28DF096BA84C7EE2B5C2CB9C8D3472DA5362E4AF19B422C3D06157B5
3D376230F1A7F9B12F410BB994E15E940E0EC3FF12D9FD14D850E349E454B05A
A454F5C2F7B41BC4D9BEE7C896011E88BAC4869BE4707F20C788253164AAC8DE
7461F1B7981234BFF642F5B14CABF88EDBE0315FC98721AF87DF882E86CBBD08
33E4685F63181C710FC77EE8955BA74A11890A1B63E7FCFD8309479894CBF96B
660FC142ABB6A2DB6C07EC328DFABE0D7BF47545C995988EB5E2DDADEE34544F
C05119D3393F9063BBBBAD61D29E85595706230B177BCFB62D239164FBDF7EF7
F8E438A579EBA81C04CADEB6626AB7B2CCFFBA17E63DCD735E0F1FB90D39D06B
E5D771CDA2A271326D20D0842106CE1E970EFCD68BEB8BD6F0E516AEE42265C9
0D364BDE3E6D2AC120C23E7FCAF002055D3492B3C113BE9672FD355BB5C709BF
3367E6453EE4DE4134C9E6A53D1D9B4E39E3056D960EA2561210A9A5F375A268
286746F9B3874B53AB24EC85AE64C6A95BDDFD0213F3BC1EB04C26BB8D32A933
AA6BC4669C53DECB0C51C2E34E974B9EA75B5A8FEF649AE3A3E12EB39B418ABE
82ADF8EC3C1B15292ED323BF221EDD0A5C84F1AD9FA1FCEE904849872FF70191
496686BA8BECA5394BB8B8E6121EEB516EE82FD6128DD367DBD5060C3F20482E
8C83000FAE1FCED624B0ABDD850E11E9FD1CFF8F910B1BBAD54373322F92E8F1
2CEB720F37F9F9B9B08975BA35E90FACA1FC05DC2126CC8F6F5429DFF6CADDC7
2BAF4C31092425A3027CC5E5F3F95840E60F152DF120DCBAC7CE231A4ED68590
E1B784C8ED5606CCBCF7349C792CA5F15F5893CC077009EE8F7EB3DCF04DB1FF
47E7405E5F995FED980BA6BA7D3EEAFD586E3A3EFEC089800288320E9DCF884B
C2A801DA41364653CEB5D6DADD0E585123B4CC222409AC0B4641EC902CE793E0
544BEF061E35DBC0B6018A7C4CFD751A6B7C9AFE6101C760BDEAFD71671E3C19
0989934C2498BB0B7D9433C6AC0F56E5BC693B6E417A30383060072F472F7208
228193AF62A6F50A355D0A9C7FF802BB3CDB08F4EEA2AE30172FDC9BCFB0F7F7
124793A764CCBFB37ADA2DF986528147812A238CF0C75C238DC465A11847A98E
AA15997A6481EBA4F088A4ED1BDC02A02851A29356F39EC3901F46F8E9671EAC
43B827B40ED17C3FE94FB32057A3B8A1CFF711FD990A946EA26716848C0C77B8
8E1EC2B321703F7E10660CE948DE1958BEB5BD238E774D0E2EBE9080B90B0333
AC63227B43223F270832CF7D49098A39AA8B3FE7E4877E3E6F5222B88B939FA5
23FE2328165FD772E0D9E197EB138D209B598D58B7BA15A32CA7DBA2437011FF
11B1EF161D1FC4B17A17E82E4340265BB3EA146B274BAEEB712F1067E6DC17D3
D58555539EAB176815BBB5FF585B561BD3EEEA6D5105B7A70D28CD3F82596D42
2BD7AB5FD1A6219CC5AAD19802423004F2BA738E9B97B24CAE5D3A20BEA7DEF7
BA0DD1296833F25725499E167AB194BAA064BF6AFAA14D051F60182760507837
1E00C4BAACC5A89707E435478927EBA8072567764CF3432C6AF66DC278917769
95EBF685443322E08FC297EF1533AABC47296D3BAD5C7ABC8EFB4A081E0DB592
D656AEB6182E660DCBD81E030898655678B2F9CD9894D1FC0258F3864285E15E
8C36747565D27141ACB118619807E2E255FF586B0A7577B91310803E930B0E46
52883F787260B159E1F481BA5D08D380AD0D174348BEC88B372D56655686727F
CD3CC5CEE12CEFE5C0EC2D063CF121144C3038D3B44A280B2FBF3608DEFAD53C
DFF6AD8665DBD626601E97E965CDA2BF9AB414C7B0E9726BAA882712F82CCBBD
1BA53677964AD1AE1879CCC0A20192C455246D673E3B0EE4E620A9E59C49F264
2823132E1DD528CDD1E3A8E45B1C68A11E76937C9CEC4571851E75C4F3E431D1
E5A204764BB6FAC267A94DA61D84260C3DA20F1E11E0A0D8E8FB47CB9DE223D9
353836354F6EAB504200FCED057BAEA084D203E13A5DC7A4DB62897BFE8B1B25
3110AD8BC6547068A525F02B296AB80BD17AE86E478B8BC3E82BED61A6EC9760
43419A871FDC96A33623C4A306582FCACFF030623C975EA4EEF200053F9692DF
EDC7C7C68F76182EC3E6ED89121BCE7390AFEB6F7F9E63AE01E05D5775703B31
6D55440B14D73016CAF90D650C13BBD3BF24773633270AB846F3B849C8C78519
3417043E895501A1F3D7A271AAAF68880FEF0DE13C851D48267FAAE6B6C25173
024E0A09757094C15D6986FB664808ACFFE8CDEE18C8ED4B7516348D78859F51
B2C3E55E38962C9D3DD5D98278F22232595CB48F409EDA803CBB1B65C2F10C90
D1C083E0674DF2D75A6166E0048150228560D3BC6461C4F95412A5F3D96F2422
0CBF87723F20FC8B936A42AB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusRomNo9L-ReguItal
%!PS-AdobeFont-1.0: NimbusRomNo9L-ReguItal 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Regular Italic) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Regular) readonly def
/ItalicAngle -15.5 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-ReguItal def
/PaintType 0 def
/WMode 0 def
/FontBBox {-169 -270 1010 924} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E134D4CB5ABCED39AC635
DA001E9934C198A7F9B9ED0028A85E9AE00421DFD8EAA3BB3B4B4CE45D209303
237BD51809FE4D880900B1EEB236ACA87B9FF6EBE6B994A60AF5D67CCC42BD56
77295C346EB4C62BDC1EF22EE07DAAD928DFB73455F091F32408ED6430B97417
683AF27A03718A156E3F6E7B6E4F2E8177503CD82DDBF4557A3CCFF4C858AE7A
F7EFED6CC521A28342436B953E4650B5792BE85EA2F989EB6D986905A61FA38B
96E1BBC830B74469150FB0B598A794FD80D10870084A877273A9502C3456E5EF
74350E6E3BE5863E8BA185EB59FB87B36566AF71200B6ED389D1287D4E925E33
B2383ED05D87D48586E698FBC5D562ED9D8A09EC3EAA1B1F300224AF20C23F26
A2EADC74562571DA84B3914D1D80B127C6FF4706C7046BBB372A0013E0AB94F0
C27946583871D272BF4F20FA84E89D745DE7BBA885CC09BA72E0F530ED4EF7D1
864B3C67007ED98800284235372F0A70C912E21E851AFBF812165B8DF912CD1A
013E271F0B347967876C68AE4C4107EF8AD1F170916210034C66394A9D971B68
FBFC1131E37FC178EB97C1B2A0F573ADD9D7C0BF944E6529734DF8A7EF54485B
A3375CC30E9E328943733CBD352BC15B06C85BFB4A96994291C72A0EAE84FB01
0F1B24D0125FB8C16D60561DF8BB7AA7DDFE9549AFB70C1E89424214609FDE41
9A142892E30F02754FD234CEB3C59A2A04C06BAB7AE40E8FDEC50559B8347684
391C750987802D5452C47C1E0B5F222DE9A0EEAFEE19D796FF375A1E1EF0AEED
1BCAC4F485FCAEE18AEC585D1A9D80F41871DDA45FEF1EAE82C5893118987BEB
4D9E345C27C7419FE65E4853B40537D822E34FF1E0BD2819D21EF607981259E8
9F1040A2D708D7463858AA5381759AC49DF4DDDEB209A278FE60BD2508ACA0F4
6A249A05B652E4C7BF1B676943CDC463BC49115864B5B5A6569C59D057CF2A8C
FD282B79BC3FA1308A61476AFF58D91BFD63D1BABC326C4FB78A42CA08478425
E8038116DCD68406DCCA2F5A85858019428DC1DA7A7F42131319C2B08B6B93C3
64413BF65B6D8554C69AF4C1D98BA42AA91660B2AE57BAD964F6AE9BD13DC93F
44DC05BF90F7E1C05C954ACAC42A93DCAB215675B1C7894E2A0D724B606E9DA8
F016953104BF247B66A7BB05C64AD7636D951338BD379956280919E1F6CCAE67
34BEAB789A232E1082DEA0383E98A6F55D8C71CEA9D1554E7A796586577CFA8E
0A1567CA0F3C0A445EC1752A47E705F4EEA6268E2323E3C3369D97355E3B32C3
3CCB9F39E828B8B8317E4E50F94EFED6873046F14E850D30BCFD2B6A49A29126
CABDEB8551410ABFC1BAD9D79E03CAE74D67249247577F67F6E02B76C71D6809
A3ADEC3800693DF0FC7EFEBB1BFA166A088B8F232012896F122727523E1AD51E
E1D8B35EC2E6B2BB0314FD0E2835FB97FF4BC59F9E64756B4B5F2119B20D5BCF
AB27289A93B316981EAC33605FFF98C7D011DAF6ED1AE0ECE6A43A7A29E27903
3C4AAC3E18B02E195E87257DEB8A1F6489CA0115898F910F38FD25CE03F740C9
69FCD8FC6085A66D841ADED0348EF0A843D0F05CE3F579148DC11183ADE03A18
83B216F1DA8BD7F20B32D5A200D311AD5B70D8D7A6DF940E23FDF870E2858CDB
C2A33039814B0C5363F0ADB027A201E35FB4C9C631CF85C30F422B9F568B9ED2
25D9D69B6581864E351CA800EF635224885516C2A291A8A4132F4D2503B8C48A
50FA52CA3C85E11C1DC9E4C2143267370E240E581EEEDD6C8F062E85A8523B5B
3511CB2A4472AD2F31CC926B1958BEAB365EBCFD4E115498E2DC2DF2B4188BB2
9A5658D4C194A0990EBA589A7478D96BF1C37B5E81CC928D77CA54740EEA5E26
E4651F258EAE949DFF86E8DB2DF54D851AA72052511AF53DAF63F92AFED25998
FA67CBDFFD53A6555556089ADAB4DAF9B826BC53D97B40BBC552DE312337BE64
2A4FE8EDB821A8890E798B779352BF6848399710E25E104FDEDDCDB96DAAF34E
4E28E12C1F5928573B5E896EDA20A07AE6DDE6A36925BF28F77EF5B1E1D63D50
84032D2791A7306FC46D0D85E85E3E1A4348B76A2C31464B1A1C2079DDFB5552
4A28D6A826D6A9A1D45D110BF4173BE2C934C892C84B3E7A868AF976A2BE72F6
3AB655ED639EDA5CDC9D6A92E4F621DD8D2A012DDAF61C232D074BF3BE08E129
244B19C42AC80035D6B0129745977065D16F01B343AB4347CF24113CB5F145D0
1D5669473E51EC2560FE7FCDB9B6D54476BFDFB2CCE4DC60424C76B6ED7D29EE
971C8624BD5A520AFB638BC3AB6509A977F098D2629B31201AC008AEA293D484
ABA495E1F51CB28A0C152EFFF2ED47D1810FDF108F20CC8C5DE8E72E7119EC4D
76D140E55D74201DD6A979C8BFABDDE279883CA2050B29932B9E68DEA83C3C4D
4D984326353072AE1ED9DDB08D73402CCB57F9E6F6AF13FB7261A0519295C8BD
48B7C694FD40F4FE0BBA82223313143111682831293C15178311FA4DC6B27A1A
5982211AAABBA90479824AE89419BACF04FFFF38E09A1337FBF361E35F61C382
0A1CDD0580E8C3CCCABEC81D8D642F424FC890C3AC8C7FB9DCAB5C51E5FFC0F5
2745F17ECBE3710F8B3425A53658E3D5C88C4D3E21B24D44ED1E3D3F76E5A893
65EA456752C7AC4E976DA8B622DA9530698C2360105A98E82DDF7A497667EC15
0BA60FEAA4A597215E9D85E389F72AD1C3D583F15585615D3FA015C9057A87BF
0897CA4B909C81DAC739D4CD1B9522F6165550DFD16347A521FC4DAB9B449F05
9AE81EC8EA346E5E123651EABBA1559BDA7DE9A2D8296EA41CD46F6B6C4BB370
FE641D9C4CDA75B146C8621777A50A85EF0B7F6CA0EDC79EB69EF0047CDFA2D0
27388EE08D743A71FA38BD9803A9BCF2E936DF27B6B9989B0C371C06336EA0B9
337678A87F78062708C1E3ADBC27F1D1A6D28C2DFD8FA0571D0F96B18F190A19
51A48B8D95C5D8F6870640EC9641455796196B24E4D2201CB19819C282638930
57FEFFABA2CF401E5CD578A4833AA4ADF9716441C3D9BA58487A9DF5CF6D419E
54CF7FAA311671BCD21B5B4086B1EC9CA656CF019F7E338059ECB0A02D9EED19
2440A8789E491372A1D7E5671D41F5D98FC0F27CE2E358C323B4A8F278BA850E
2D32E4478ED0FE99D6A6A65772617D7E842E67A7D4FE70EE6C6F4F4D02D7915E
5574FDB8547DB3296B9A039FCCCF04393885D2BE3E0595C3FADA2518205D9B65
518303788B8C32072918FDDBC862112F1CF75950B0C5296AE847C21072039C82
06693ECCCBCF64DD63395AD65937802430FFA0F826B0273A254F0BEBB0795194
7D838F69F7D5CB203F66CF1C65AB7C2EE422DCC91BB61977568B0AA419699546
CBEB20FDEB5E011ABCA27F1258CC2633E4977ABDC070590C9516FBDA63C6BFF0
64B217997F9CB2592ADCD4CB08D20DC36E567163645319D0F71EB88DA763F855
B0ED3D639441F9D316C8E1A0054529666A053670E21BD3BAC9DEE01D54024843
8E334AF28D61EEBB2D8C9EDCF8876244F10E470A1A36F32B3C3127D58DB53DFB
4077401550D710BCF4BDB422FADBA84EF8B32719A94FEAAF6CA0E576151A83CE
CEDDA1F3DB1621A07145E43F11298F2B28443C44ADD75494A9F984263380B662
FEEDD26E87144F70B873501E58CEAF77B9BF050E361DFA4A172814F0BA7D514A
05070ED6BAA61A38908E94D4C2E72BEDAA84C52C3BCA1DFCC65559BEE8579693
4E01C95121F2BAAE53F271B3137E05B12BC814B10963EC944F3C937C321AFE9D
3F538386371C421D77DFCC073C60946E2E6F70CBF918DF361A702D946DE51C28
F50AE216F9038E9D56F41D62834170B824C792AECA4B6BD7706A6ED1744511C9
D249092A48A29C94FDCC338C0B8801AF6DA56EAA4F6E1226A5379DA857348974
77BA5BFECD08F2E9B0678F1C75B4349B175BD7BF099E8276173D443884AC0600
329C607B7034F2A4EDC2F0821009F568E615CE94158D9E0A162428C5017557EA
0AFB8EB0933FBE74940E3418BD0765946BE5582923819F890D9B5F31CFA3C1EE
28722FC7F6A0EFB2930FE49F81D1AF4CDAAC4D7B009365C57ECD52F82AA83AF7
B75D69B181CDE45BDD5F6297A11BD1DA2053B6D6AA999EAAB2027D4A0D350CAA
CD97F173888288B94228C0F5BAAA9A255EFFD429A53CC75C0830A9777BF96B60
DBB09CC98E07135032D6241317A296EB73AB5945FA25E3E98734A0CA4A813F58
8D0978A20B1C96BB32448FD4B669BC65CD951ED8285EC371159F0D61B7E13A57
384EBA37933AB60F9A92A98B800B466149035EE12897E8CA86275AFBDA809D2F
1FAAA6FEE6527B5875D6FDF494A8D1E43676E992AB5CCE5D230D1D63BADD0C7F
029375F509281FE73BB18A1A71C087D87FAD941259A1A647525B49E3E8FA843C
D9CC3C8D0BAE1D5F7F87303956877301CB9DB16C0DF14FED31E5CB08803A1B24
74EB66EE60292BC98B6B88F8D84CE7EDBCF28CA7C0D267AC0814AA776A2F731C
046E7B342D61B15BAC0348706DAD0FEFCF83BA14B4710841BE3CB27124373543
A2C18439DB2227247B30A41C72B8836460C3DF99FD8A37EFDA8A3CCF56AD9EE9
F5DC0243522F519849EECC61B4FFA86ABF086446AA18D71F315F1F7E2767D31E
5008CC54BA8B86EAFE46108547E31184307257BA246EDC7D49FC9547EA6A83D9
A5AB65C8B5583040768B842E6ED5646368C41EC6F53A05F309FD7D1E8C04F44E
62A1D674C6FCB236E69C385146CEB28D3074EC559BAA9D19D7A1B1DFD643207B
B4B8FC4B126E787B0F7F03FA3A6A002421D44B363E23E75B35967CEB421D279E
1956C7AC4E43987F983B252D72F9BD231DF77189F8354FBE32A033B350DEA6D4
6C02ED928034400AA5D2972F6296E4F15FC71128C09EDA131595236DF44F85EA
69E08FD6B7FABA4154F9E84B907FE19FC642DDB7E368BE1BA83B649F630AD776
9A18D7EF32D631C90D04FF225530AD6D43E6148CD19AF3E9C0D7039E630D0A7B
B9C5DEE91C13B249ACC756B6DD00D9B48462944E1080623A9E2E843444B29D7C
B004560D8C74BA26DA629E201C9D921CE849154C53C4447D335B05B6C07BFB23
791A595C80E620E640C61C8A470C8477AB5B1C5A25CD592B94191224B0F048C2
F099F97F1720C3190F525CE6A80BA818502DF131D50E0114B65879E03170683E
B58E32E766652FD107ED9D8756E725BBD2D2ACA8905FD052DFA431F418D2EB11
5E025E5FE61F842293A24C2F8A99E14E5DFDB76ED0E06DEF03F84B2AD7A34604
69DA11C4F0855ED9C34CE3A0AEC54874D7F80D136D3F6F65113A36064BE0702C
1C9DDC08648C6861DB6B4E11A29097EAA340155713F9564CDC0632A8928A2603
2DC88CAC5F4EEEF91E7F4445BA8C5B968401A3CD81976D2140ACC6FA3F605EEC
03DDC872F75A1B652F87AF1E35CE918A420AB29715F83C1C822EFA66A75E01A6
8758FD97C5928BB2B1D94F87FC5DF0B7AB1BC8DCE622DC3FABD85B0F740A54EF
02B3E24B1C4F7EAFD43D3A111D7AC375945F753FBB437E9B37D21481BB42DF9F
34C5E80B618FA651FA66EEDA77819CC32E81AE692C5AE0C53DB380ABB866BF70
91B33FEE92536D6EAC29F1F7D265EA9CBFF54202AEFC083CF9EDE0778C2D79BE
9FD9DE57CC35175C841F56A5C5F8E8DDD7180F306DF16E79A2D2DB9802275D8B
E44233E4E54C8C0255CA77AAA035608BB2F0E6203950EDFD6CEA20D064907144
2B2916EBCE5F4B55E47F31B7AE43ABEAD548324A5DAEB9AC7E77DDD61F36369D
82D571ABF7BDD14C79D796556DEFD53B3E52ACC66D868BAF04521E3997F3550D
2FBA8D9CF42976EAEDA71AD36A1E1422A76D86F602E1FA74D8AD12999E1C5EB0
9A9F44D249300D83C7A0C96976DCDAE344948C3C994176F942821D2BBAC44D94
F2873B57A9A57B66297EC9D0ED3BE5D5861FF4144258962F71F70C30735423A9
929585FC71DD278721FC0148A6F695574A287C1BAED70A94B83B87785F4E94E2
157EFCBC228C03D999481214A1E7098F475AFFF7495230F2C3754A2654A061C4
6E161F98EB00DEEE2826B70D6BDBB2ECA8548901269120B0F07A99C3BB5F4FEE
CA2A8F28EF2935387E3210CF1A2474E3ECEB25B18BCBACFAF313AC51BA6360C4
F0BC3465276EAE1E5CFE99B5A0257F0D8539077F7D96CEEB9FDF7D04B0765144
3AECD2BACD55B84D24C84A6A5714BFCB508BCE0A4639D84C1D02CC80B1B4C366
94BE5257D9D0BC41230B45EAA8E7D305ACCEF262945698BAA97A407399E92B08
1C5CC0BA4D3A4D110F1449483D3BE38D9FB4A728B1F85FE10987CE229459C52F
61E6F7410955D6F724E27E74683F9FCF497C83696806603B80F3F51582D90985
F087D184EBC81CC1C9C84AF6CA1B43338976ACEF451C5D776C4689DB1C878C35
53EB273D4162E157E32D1043CE11A4F13C509DB2785BFF2764891E5EE43797AF
64A00E26DB0F3A2625B73884FC5E5007524826661CEE81702CDB4E0BB8EEAE65
54EE54FC600F1BBA69AFBD1DE90520D068C41FFBC22EEC24A018DBFC1FC4B7DB
A7C99B203A6F69270539FF862BB27F404048C282A92938B399848B8F0A694CA5
139AA6D4E7C9DDE1A8CF59CEFC665D79AA32670DD780588E7F0C4AEDD4255640
260960EC179D69D43746B9D3B7ADB3AC0BC79B34B48930D0424FB280882B4F82
F5CA24D777277144F0B39179FCE9D3717D5CE3187EC23418B9451F63ED849D58
EF4EC2256D9603E85E21BB9CC05D01C32DB012E220FE75542D346AB80C4E8A31
D579451C57F17FA8A00FFFA3CD13D567798BDF6355C6230598D8796220D6EF04
EA845A6241FF262C6E8C4C3F2D1F4A564EF4F83B4EB5D4796E420B481FB976CE
B4E85399BA4133D439E4BD689AA6C2E2ACFFC31FD12B8A241DD366C39568C68F
B50233BD33443FEED6A9ACB4B1C12627FDD0CA0689A088A46438B908934C4C21
702F65F5737EE41D0D89C5430CF379E657FFCF2B9B9AA93267874C2078AC5A99
22BFDFD9B1FB737168076E89A2FAE3D78267B84450A2FAF3C15296DDB13A3D7F
AF68D2C23E47EF54811FAB1F7A0455F66B223C45B0602EC2D844F45E4D2B7660
63730AABA2612ED810C22F1915457C2E757482971AC8378A4048B6E89E95AAD4
E55BFC59FA69C2E602A82F4B624586278881E7E4C3648EF4B93086D5D5FCADE5
C7D196125FE8D401C98DDBF56FD6C72B14A5A3C99C535AA5D1A705D1FD74E50A
AD839187227B21157CED17964597E104A7CD4EEB95B85F542E629177CBBE1EE1
F10328ADCD3AD177D283B7CA4DFE6A25E3E36BC2395804307C78D4A3124A542C
CBB3599EAC6297F9BD0BF5F3DBF2D6BBB41157981856828D567C2EC57FA0C324
059F265A0FE7BC5A336F68B7449194D879F40A4A438C3026A74066B74FA07103
B19BD510B8F9A0D6C4B5C2F665746752937A936CC74252718CC5E605CD6C3C5A
46E851536CDDC8E1067251506608A2FE4693A2B9B3D435499D35A59EBA2675E4
D2A0C4E727BA4D422508519AF3280921CBE783D34613F338DE5BE2901EC20044
06ED6B7239C9A4D72DD7E683BF1228AE2F31ED1206FFC636D8189ECDCF3C7A73
AE09618CF3220B2F43462E5F07B06C95B3620CAF622939BD0E4B6D48E4D561FC
BDF693541537028493F14183FFC8CF1ED9373BAFEF9AF2DEA28F10361697B0F9
13C44111F8B95E6EC596ABF1F854FE0CB990E54EE4AB49B80D2E1389942B9B62
9637CE44D5D84E9A1853A377EC1CC309D823759E8CD6F36FD1AEE7BD8E02EF87
BDF2B78D3C62F09DB178914304456CBE68842494926F1AAD0EA5B01D2222AA58
DBEF6755E172DE0C8F2515D105B1FCA0C4818F521B46C69D2046591B5C19ABD3
2D3338F31E5A26A64FE348622C11E7F259660DFB002E71B664E5D7EA4B6E12D8
ECFD579B48AC1DD59F60CEB9E7DD0B731BCD8D56744FC87D96F450E7C9571435
2125CD2634FFB0E223A5AD7F6D5DFEBF2C2D9EF752B18E075D2BCCAFC58EF9E5
ED86773BA89B735EA02AADF40BECB26934F635AD9C35D0635F86E3AB7D2D0C96
AC8C5934986BAE097AA357AB3855A03C8F95BE0FCB2FE540F0C6F6487BAAFC2C
E829269AE8C8365E8B0C46E6F135F48D141736569CD507130E8F115E9BE8D96D
A35347A0648CE6002861D7CB962C4EA67DDCB3C4AF1300EBAF3DE4F3A2323B6F
F3CE4923BA8A1F64D39E7066989D7F0A46ED8C16E60A2BED9D4C7C58BF4B08DB
849E2BC8ACF7A893D4A651DC07938A065511A812863D87985C26DC83CC470C3F
B3BF189D4E3D8C23FCCFCF4CC14B6B172972FA87AFFE73C9E3F0777350BE92FE
E3430FB8AB80908253DCBF5DD24513C2B16E59080C7D31ECBCD6563EB1AD03A4
F5FF242E8404F601199BD3D3C82A0057BD724B16F51F1DB90AD895A6FF6A9D75
062DACD941918B6554DF4410D390FA4CDFEF69261447DE6D05B11A0997CCA5EB
C4AF98B14643C2699E4B27AD8059F6199BB919DE0811842275EA174BC5FFFFAE
864EE4821683F6DDA3EB26032FC0EF41B825AF8EAF86F3D5985F110822894F2A
B92C3DEAAF0422E17D856181919CAAA657A12F19DF4AFA8A78789EFEA3EB8929
9AA73FD83BE3C840DD982FA7A0EC5AC289BB985DAFD6259EA76A55B20FBDC8F0
007911FC88B22255FA39DB8B3F7683D013D490A0EE6A8D87791FD49B0547FA54
74AE86F47F359E87BA1CE0B9F5B77346ED7BA1AFC4C00169D43205BC553EBB47
7FB3B36FBE4796EF006EEDC8E25D1E02D5C7847892F433D8A3E7CDB04B07D974
442FA004081709232DDB638CA872130423BE3346821236C69CA623C1396ABFA1
7F05C6DFCD17424403AA84AE297F6214EA66B78E6A88AFEE8EFAEDB959F5AFBE
5B56B772CB856E82795B65BB5CD652F4A07B7D7A9998066709CA2CE1F19B6FF8
17D24AC02BD46AC988A9379A919B87601F80153DBCBFD86104CFD82FC13163B5
979EFEBB36BF98A5AF0823A455B6BBFB2D7CDD427ECA23631C0932ED2DC5E676
4113DB6D884AEB51FE87B31B6B7BB613ED01CA4D65F79C7CE47DAEE2714D1CD9
5861E0AE858C398D1E7556EA1BFE3DD4E1F2AA294C0071881AA3FF83DA2D533F
B0065C5DD1704570167885A5C135A52EE85E3A2BA3E6A4C8DE714626ACF8D9EF
D6892C0F5D5724AC93B0526F67D683369229F238862003F7006BBBB125214E9C
09B7A45856B8631A44249DC8E22A48E83FACA3EE03CF44B5A7DC93D6B861E45B
A58AEFC8E227E6743543112C4DD601D257BD427B0CCC7717811800D1FFE41EAC
3D35A3AAF934070C1C74BBB7502A9208346C30F93DD0D7DEA85E3C2FC2011472
445EDC8B7616BEB0A2A5A7869CA1414F8486484F26CC48EC8B8DE422468B7247
DBB0DD9BF9D336F25E57107684FD88FD0E7D86AAB806790BB439428906E413FF
A60442D8C45888D4A0CF8ABA5746D3140B2947F2CB0089402B6546AAFD217ABA
EC0FAF143EB22ABD9AD9F989B744BE85CE41651AF3C3579BBA71D78E10183C95
DA0BA671B188A21B1B128E6C28D631ACD5D68B301237B24361FF06F1071F587D
84763A0671EA95604C410674FF9CDF8B0E4E5F28A06DAE88113C1E9F6BAE4D98
EC93BCEDF1D2E09C594D9662CF2A375E5A1E6C185992CA5E9828E40049253C9F
A167F38A3D61071868A4CE3AA5FDF49CD4E6AA02F37B2F668A9E06A084965B62
9982CD1B97676042C9970131F45B4307B6123F25D2E5978D9623A8E4AB3A25A2
40C197D1E1F1CA33E259B8E64895C2D2A568A1EE8E3CC4CA8D413890E8BC61D7
6488361778E4FC45A5DA1D3387B43ADA8C98DDF3315EEAAE318CF9443F0BBB26
6942EAE8CEF394310A7EF6C8B4DB83A7061A0B9D535A5DD0C66CE4F7CB0AA774
FEF1C9FC0CBB0BDB259CF3615E60FD7B7DF8C75985363C195A7EAAF9C47146EC
873E810FA2ED0535EFEAB6B8B0C959B1C3B8B219634341123E5CA48D1415FA24
CB75FEA6380742E8106BBFF2B4E2F28C0A843B40E3E872BD8F6DAD70F1143917
DB990826700ED99DFE7893DBF1EF9A2B346D99DD16B544B5954AD8CC84D44CBA
FDB5F81E5D42A27D3BC70BB815896C3C727D60EBCC479BFF61D9A893DA0177CA
B77BB183F54581052B65132D14503F069B7883506212C9E0F6D295B8D5FF0337
24D4DC7DF5DDBCEE99339842E6524793953B5199444F2AAE29EE9230D572D3B3
88ACC01615123A9148EB1D57E1E8A4424F17BDE3D2900B187FAD04116775D0CA
0D0AA26CCCD0E15867C99D35CFEE7DC4021C5E2044247079C1696A464BB322C2
7511AC35C0BA324F5A1139D2D78945CC037C348DCCB768A35FAC65FC5317F886
5C9D8A418ECB9047ACCC3CCDE2BF3BE2C579921A1359CAB19371E9DD732C2BE6
66AA667801D78A4D5A13A5294A43A57869D21A83C2C94DAC715A1E9BCA3F65DA
6B3517623764136A5FA5E4D9C69291B47E88E183809095E88840F703E9BF997E
8A66669199CCC9825FBE959E9D0FA8D3881BC3D0263B7E30221D399E22CF04CA
4298BBB45B91E0281845DF8F8927A0D302D2816A2091A48EC0E46292E803045F
C7D7ED27129CE997C4F2BF094E8EB21476A72B6124E24D2AFEB2FD4378C82BEB
BD9D6BD3673FFAD5EF6D87744F05E98E2BD5FE77AD785E8BEBF390AA3CBF50D2
20ACEEB9EF24F6029F6829A6B55DCACD55D95EF18A6B47D6577EA4794F1F3964
D3ED3CF386A8513CC584A0205D94F0A305E4E4DD4C28797DEA1B2B6DE5E8CBC0
DA34E79D858FEDD6B738525FEF89E5722C14B7DED7E9AAE85B0FDDC9FE895D35
F7EB0263EF32316CD4DF45E5F9969A64D095FBBB7CD5B013F3D522E48DA28A4D
2B22F8F3F72460B7E8444D784EF7605B82852DF966B6706C44D54580479418B1
925C20B3BCDCC053DD5235182B883C2EAD0BD5AD97E5D7AE327345900752DBE3
2DF3057CC616B5F261ECCF04129779597138B23CEECA12BD18993CE660AE0656
23989700B041B9468DD40300F539704DC4F70F13DDA614AC12DE59C3A1C6D8DB
F33F869A2758EE44D5E954493700C49E10091FAE714F63A24AA98A5781F2DA46
3E9265A133D00285C4FD7E49FA5D2FB569061CAE94B807E669859D5BCC5C0B83
DC56E6B235EBF3767BECF1C78CD5892F2A258F023C1E0DEDF9BA72428181FFA0
DF545781B01387078AB900626C7488A61231C7BE4C83A070BC0CE566A60552DB
D6A302E6BDFFA20438F0184647BFEAD0A22BCE7616FA610E4B920460316C88FF
71B1043453711A8AF8E8F6607639FD0E146D6B621865797B9897175A034112F4
0E1BC647FC0AC8E9FE256471C02ECEEFC21266E0200DFDFCD73F99971EE31684
D721083208D76A4CBF0A3A48F40D2D8392CB24B922F94EDC99DE5515C67160AD
65654709589BAD7E23898C781A33C18EE27487C08BCB655AB02646E5BA327D73
0638DA6B918A381A0BEB6AFE62F4E10693029CE085ABDC77E8EBBBFC6365E9B3
F9F2B5F42E39023760290E41AF5A67734E96DE65F4EA2786E113B08278C88BC0
1623DDB54F98D5E04EEA13B10C7AB4EC84EC4C9C14BEE5F8F47D2E1627BC84CB
C7375C4EB8971FCF71D5D9A468FE112F5D3A5FDFDEA50653034CC11B637B8BA9
BAA8D07CFB5C9A4A7184FB2A68135A4C842808CBF589AB941348DDDF01194F49
D8164A422F3AEFBDB0DEA139D539F1465D50C5D1DF71C76C8753EC2767CAE725
63F58C453F45C231219FC9727D5D481C302610AD7CE0DC20FF7AD70ECFB5C62C
42B8B0B0300FAA3854294DA62F57F8C0D066CBD371A4A0FF645F9811D67DCA99
EA4C817D6576B0929D7D4B8B6AA528E7B3363039EBD068D131C7F302A2F9FB65
ECCCAD46169772EE6BA7DEDD798652E630C7BC349B1C750B3E0DD99C74218FF3
0ADB9E1AF76C75BC886FDF3EBB59329DAA5D44BFF468D10E46FCAE960AC3E36D
F09D644D8471D9C58AEF8516BE23B2287C5419D71D597BE38BB42EDB0BC2D266
354D0DE4640905C70522046046DC94B5012EF90263B33710330B918D33104689
105D7053F6F897A08A087D28C9FFD6344A06CF43A0AC6F28869B499D8D7EA76F
DBC08037E2CD0D7AA61C93FEEF1DA653E3506DD5A6911596CCA97FA8FE526905
7EBB23009821BBDB98FFE21B7DC2B3DA2C99FAFCF66FD533CA4E119EADB72C3B
CBCDD3FB0F462EFB67332262F9F3611A1C7348133693D492EB15272D37870C66
EA92F08D70585CFA1C422DD29AB8514D2C5CAC04A913C5F77C7B7F2F58D6A6AD
02BB0FCEF96145D8257789166A5A9CEDBA0371527AEF18385FC078E3BEA9570B
7C3FDF134760B12CECB0DD32C300622BDCADF01424FA8F0CFFABDFB1155FFF82
E6FC5FE6AB53F758648FB82B05B40CDCD90D8A343F0CD8386F7AF3E292B09918
8724504830F03AEA815E599A2AD04D9BB5BA1456840835333ABE825A8D714A05
31DA30BD1A0AC04FA9ECEA9497A6116C239D7F6FD0B1CE200A0B236672315B3D
72EDA0CB5443581B894044ED57C56F7DFD6339BCFE0ED7406756B8775891CC86
6C1E66E10AD1DCD22BA850D3966C65ADC16D6B6FA43E6137FF37A1A7AED6A7F5
B1303FC2FE1B2BBCDB55B9182765374469FBF98BEC43BD6779A4EA9A09E6CED8
5EBBD2A1889D11EE357DC2222872BA625204FFFC0D54FD8F79CFB7E1068596A2
87C0C4B5F904A44F45AF38327CF7E06E2CCD4B64C1D10F71057EFEB028B6C34B
A64E54BDF1CBEAA3DDE810C1CD4BD3F70BD305EE6307B3124C58D996D0549596
271C836AFD5BA5910DA747AAB0B33ECE29F3C58201570603812082040FD68601
DB23AE5BDAB0AF6155E664C0EF832D67624C86CCAAA62FCD08BC867D6B914D43
793902AC8D5CC40CE5872F0D4B808432F590562B2C500D74E91A4DBF8520E86B
FE7D8FBC5BED5291498D7860DAE41EB50AAE0E400078239DC64484A2955E475B
E6BE9E6B473B7C112143AF85FA4D6E52BF1FA74DF6C8F52C952903ED165E2C97
192E8E1F0AE85BAFA45E0EE2D7415523E7F7D3CCF162E84FB72B45040109A3D2
D98C2C34234F4AB7C1495811EBB3C78E8770DB330E9217AE529B735031ED0B3F
7D1FE59CA1E9926DEA633A0CA358506814B17990A3A1221149672066512D013F
7F76EAE68759201D4E314F9D60314B0E6D73ACBAD2100FE50453B132E95DBCAE
1D26ACE5D484D97F93FAB01B3C8D169FE166299584410085B74F4A1253E0EE8A
09501945CD3ABDD3EAFA860A1E9116300B5A63746CE6F38FEF78596D00ECDEE0
E7A7365ABA03DB4344D40B23482067B733F4BD8A51DE122D529E7123233B7E1F
45DF17710B81FE3628F421CE350855980C43833DC2775E8DDEEDD1BA73D93836
E53ED785428419DC74E534E318627B3CDFD3D62969AAD83C76F7A925C154F739
BFD28A6A8120413945FD92928079E2490F6ED6D36A038A8ED76A89600C4750F6
68107284CC70C91EC4C42892FF0BB9790318B1FED1A551660634FB1B0B31C13C
815BDD3E0A192AF5EC3F98BD2FBBB5CF73B43D7D4B9E70CBEE32BBB16AE9A8E6
638F5734C2DB4FFF74ACA644EE381019AE1A05FEB52D7FD49552D3937C229244
7D2889A1794F63F011EE94ECF5695C3D2B776EDA3247865E57D7A8D4BDEE7976
19EABE24A1656DF4A051E2203FDFB1654B21E3892E1BB64F65F7FEBECFC24370
28391A6A5BB61DDC1ED7E149FA176EE686914F8CEEE3DA1F932241022E9A099F
B8B482CC7FE232EF6D0969CAAF54CD92BC4D94C1728D2B3C00933F2E5AB1A825
C104DBE1DE1D68B15F2B74914B021BB8518EA35F96A49CAC9D0943C273BFD754
BCB3524D113BDE26715C0CFD1C76B679523A6CB7C0FA5BDB109BBB0795E45494
CBD5066CEC3C313244CA31E7BAF04D41AEB861CA38CE4CDA828B660B1C99423D
3F61A0CCF0B389AFC02D2681C61460C8F0E4ED980ED53D6E4B09D918AC0BD856
AC63C8A5F53021EA262EDCBE17BA4CF89D02CCAC91D309D4590D68C0EF57D033
1D6491B9F19C25B159D758E512BCD8C0D116940896D43D44A5ECF9A38522DB4F
865044ED6919E4A8BE890BDCFAA99BC86675C9652C3D71D6B30A4D714A050E1D
52AE787815CBF0CCF4693223576F0965A6BE046B930BC9E1224223F78BD1A711
87A40F57763E1A2997CE358F6776281F143092C3DFE8244B6A0F66BD534984BD
9B8D74CD03214D9A73AEA0FD3310625B9F541EAF2527138387F4C6D7FB2EAF25
6CEA1C4A9873EA7EA8B96B6016A1B264B10F80CC0E96244976A56C80D8838763
EAB63D557D43FC59535671016997120C9497C21D60A7BD71E3BC33AA4A4D75C3
F3269AC0DF1EC04FCA915B4955AADA8BC193FB8C2CBC8A56050821DF7202C74D
D6825EDE49B1F6A14A23E23FB48E4F1FA5257BF3065711EFBA42E3D6C49239A5
117973695599ABF159FD7FA125B9CBAD45E45A2BA8899F3125D38AE8C590ADD9
E82CFA26764F126EAFB6B634E8CEF5990A60674E37C4F771FEE2C312993BE346
6586572733DE963BE6AA380A985772F63E90FEF5D1F7123637333D02FA7BADD6
75F87DB12E1F02F69D52F2225188072D916117388FA7BAFA1E922FDFB61DFB49
0E111465A178F61FAC3E4210464F2FACCC78A14BBABB4D3CE6B48FD4C17C49F1
C75FCF90958CC56DB3768B85EC0F4822856469F9A58C0B39D1D9EF1E59C517ED
6B4746B179B0B27050C4700761B71C76AEBDCCC1449EB53567F95C3709C51976
4C7AC7A4CB9C6E7CA2AE90B5D7B9A2DA0BC41B80F424924831EA74E49A840895
1F04D6B0D0E59944EE26983B21963F4AB2A96FD87D59FE07A4A608EADD67EC65
42A8EB5123C9FFD363062B5F8CFA9203CC26800349411DDCDCAE9829F5EE55E7
576EB9145EECEFA07BBCFB63293ADC653A7CB0009F4EACA137332D535B49D494
92013C0BC033BD668518E654F6AFB86DCA506398DE5AECA6EAAE8989C3F0ECA1
6088A2784B299793E892D5A8728AEF1B07E0829C17A9DF5D39B85849D836B3D8
D3959AF1F3B22B7F8863479945515DB8840BBA751353582FE9CFFE28B0885331
6F2C0E1D5C650C47BD92CD0D852D037AF610E5DFE4DE4736964130F0D946C718
0B92FEF0063628F3B4FC94B66054DF4A5A9097C9F149D2395E70B5C2FD9FBA6A
B91BAB8273154305F989A8E670211327E6D79484D4F2D02F27884D14EB956D6A
FA20A9EA718972CE4D846267A1413995D9709209A5D117892433DF9FC20B5BCE
6581A2C28C3583ED42E492299C5DE0C2B28CFFF3711213AFA13EEFB411D3D68B
6B74FC109705B4574CA79006314DFB259D49CECA49E78F690997802EE1BC3367
497C95A462A833857A15C2C61A653E39A766CF52516B0FB93ACCFDEDAC3074E4
2FC869C9E2127082C28B60BDDC0408DA619280A4288DCB4007FB5540A0D89317
C4743AD011DCB075FD0998A60DA4F83B1D499D51E9B525B4E8095434623EB450
1B97852D484D4134A5011F2A11E9B0B1F71A4EA80D9BB394D1F1A1EEB4F5DDC8
A43675EDBFC8663C212CDF4A9F6D8231246EA7EE39AC9C09BB4A4B8F4652C33A
4B3FF84ACE8A3BA81CB3B54E2ED618A77C9210065A168DA5D81DD8CE336F77C2
60482B6A20B995872BB93C6E5FF1C93DC61BAB8AF13F25682745B91B319476DA
BEA17ACFED41357071E74E93FF04C27A915B9928949EBE8242FD62C44B9F4536
9F12F719709F8F932ED3425E85FB80AE13AD4E96C852279859E3E07304C1E0C0
E4BD5DE195F37A2CD82342361B14CEE27187DEC15CC897C528B7D7F84B666FE2
D23EC30812E72B4B6D4381D4F62170B0AD9FA88674AF1615A27923A360A28CE3
2120F0E3C9E794032E1BB6E70318053D19CDBBF775F3D8283505C8C177F6943D
B84482E604772B9FD8AF2399431725B127AC810F3572B6F970A2287E0D45116A
BA424505C4B0879B618BA7A9176664EC92F1BE8AA31AB6CE29C222A80F9EDE33
D48F53E4A345CC370813E09D4866E39B231665054D0FDA8A78674B6AEF7B5CD7
4E38DFA5D812BED459CE493AE0C4558AB462B71601DF9AC11EBEA62660EC8F9D
6EAED300E19C25CC842D52B08A443277B889EF7E0FEA167DDC1726076F0A3F35
F73697D2685101023727AB3FB8BDCE2FE2BE0BF1510088F77A8248D3F06FCC49
DE77B06E4EA944486F165BF75291EF6E7432B3051847BEDF7B1A216F7DB0C1DD
EAA3609CDF98191E490234D36FF51BACC496B82BD3205412135D34B902EE11BF
AD77DB6CB570AE892B75D73B4AFD4ADB544503D385AE11C2648DFD7CAF9F5384
BF632BB570C7BD77ADEEAA3A560596C03350E8AC5AA56E0440633F7763A4D4E3
D98992CB13526A95118EB5C621511E8975311FF238B7F05B12CB1C1FE0F71D76
56ABDCF0001826FBB064FC8185289AE98BC4F2C3C96CE4674E12C79FCCC503E9
386798E8404A6819B3EEBF92AB5B88286542FD8F898E7E11B48A357DDA4E9A43
96D76CD07007EF7C9C08A63675CDB21231C39CA94972EEB8B797EB460DD84BD3
B9A416FAA8F34CE1232B8C3040CF48AF83E3DF2E56FB6D48AEA5B5A250D2D045
E4536AE6FB82401E74249C59B479901383D37B50AE56D93DBD187B483826F704
000083903FEF03EC1A0372C661D534F244EF0B837EA7E09BBEC46BEE5DB34FDA
2EBAF4BA4EB3681C34200E17A25C9DF20406B749FACDA51DDEE61E8FD3FB9F6D
4F03BE82F903407A15B7E2799C122649DCDD2B3DC59C7318DB7CBD2EA674FEA2
3AD456ACF5B9FD26A0D04A01F842246A300A291E90B7375FF04BAE21480F8E07
FA1928BBB2E6C28904E60F7FFC3065CA190753387A9CA2DE9F1EDA4C4F05A821
8EE21E505831406C6DDDD64D5A3FDED9801F52433A9E84B5F28EC413239AE9CA
4EE56198A05162028F655480FF508C96BB6D3E47E297BA163C9F7FAA6350ECEB
F938EEF8D6F8CB585B9080993AE2AC57E3ADF5AC9BE23A5081AA1D40DA9B5AC4
C270A48BF6DEA2E3CC9ABF0CC4D0BB122F5BD6A19ACF55E95141C0EC8F54DB02
FE28F57A0BA73FA4519650AE92B64E08BA45FC6ACF157B9FA8D947CE8108F65A
B6F1AC3A2B86264267F89731BBC62790EF790FABD2797242BE47C2EF1682D8F9
446FA182477354E13683078F2E0D08218CB7246C544C18EF677569C646EA23E3
A1DFEED163670EAC9E4C0E890B73B209CCBE927023FB2953414672D27A93446B
06CCCE068F4B869D5F58267EB02BE95F7CD94165C121A71C64EE29E416DF16BC
2128F92704D2972735B4A1489676F5FC9B5E5EA10B7EEABDFC8B08E53A5EDB92
358FB452EB139DDAF4AAB2938D2BC28B6EE094B2CFC77A3270A08A2D0C6DFBD2
AC4CCF96EA472E2655E1A4EE748C85934A95EA34EFEAEF9BB0F0EB43DC4287D7
0721E5E778AFDFB01CB0E2A6F32D107994DE6ECA053F31177A45A917B0B7AABE
54DC4A8AFCBB495FC635C2D46EC38121005996A52852C4A3D60E933ED1D1C2E6
398D84618781C8026A6A8D6CEE361777C4513DAAE8AB8E46957A6B7F7FF6A47B
49C13096B923BB15C5ADC17EC3344B3D0FA786BDF826C97865B451164FC0997C
8C55F419426D4D7D1D468A0D22DD9BD9799D01128CA01D07C59EF4A96CA65B3F
CAA668113031AB0A77534EB7490E759D6467457EE48B7FAEB229A0B14D29F638
F522C8832ED9BDEEA712534938952AE081925ABDB7D2063608F682229890DA66
825CF7443BC782A13EE1DA8BC8F7A9B2864112EE29BFB04EFF01A909D502ED49
F92FA29595758DF24F4769B35733724CF8BC8A05DAD6DE32F1544D6568DF11B6
6C54D1F8CD574573E6B93C6B864016DEAEF93A410E9693F43AD49CF9C49A1766
7FD7D75CB304F38CA79F227AD37E3113A32C22FAD69117EA668E9448452D128F
6DC1B4AF2D4B47646257B6AFDE6C0097EC1BC5527A287A00C135C3942AC9F313
AA52504886B31D691465EEF28C8A1FF31CF969219F56AAE2E7D0EEFF97059848
8C3A83772D64D12AFF4328948CF29363DAFD9649596123B6306EAE5AD9E8FE60
C7A5FE95F36EF4C7301335F82B6B075DC6999227834FA035533F1872D9BF5DA9
B325118818DFD92BD2DFA545A711B21DD066BC472C34D030E205C30C038E30F1
716DB67AF858FAB3A3C14325670165453A809F9B8C82F1664E21F0506EACD2C1
6722D2DA286EFD570A4B91271ADF33DC957A2904F3C5219ABA040C08A21E6B30
EE9B7633B9C3E725EEFD344C9D8878EB05E204F481DFC6AA8FBBC863FD1673F2
9E59F0B4E156884ADA63623516299001FA384DF64C939EAD0F487F7DDAC8CCAA
008959E279F1EEBCA55527BA7AF3E536337BF90B000A673787954BAC5B0A4858
2D5C85DE3B54AC1D11673143B2D33D7944E37D54650CC4D03FD8676EC9E4B681
685023DE81B6ACD7F1CB52E4B741695A1D03BD73CC410595753B56607DB0A45D
C88D0F09F7110113A767567819051A57E278C55392497CF7FBD54D3F512E173D
1FD4C132FC5EC80AAC1F08ED58BD3A440C7D1C07C17E5B0BC25F89AE242D44C9
AF1B428B914EC0AAF221AA7C7C3789E038DB7C6E26699B6A5EC5DE8D0F7E63AF
728A36A43068067E081D3898ECD6B1CE9BD85420B2DECC558B2AA5C460420DA9
6C3D4B80B7889F80EC169125FCEB2D45BB91125B137FA870DFFBE0B2891FABF8
DC9E0A50B4D237DA09044ADFD9A3A18B6C74BBD667DAC691669A4AACDE2AAA9B
8778F4BEE1178B3883D7EF2F2EAF636F9868F206BC6E9CC473CD9DD023DA0601
FDB877A9E75226BA18BD5558F69C9F186DF1F6365F4CB402C9CC983A8367DBC2
50A765F2C5A7B1244305BDA97C681E2293D1D582D2A8BC086B10FE7E1CC59DA7
5B72624122D7C34AE6A7E5DEC2C1BE6A10E4D8A3E83243E5D433F8FA0E98A625
8355ED8A3C2471498E75BBF597DB49E3B53301F1673D14B515FC77C7134FB1A9
AC95958CB5D514A143604FB284EF08DD4E208E0F7C9926994DF50B33327021FB
71628986F0850EC74D0C9CEFDDF6F30F8915B99E68755C0FEEEEBD519F4479E3
39893A3F36DA3BBD6A28FAD067042F1120EC5683DF2C541F264926AB111D4CC8
7933FDF9FAF0F5CD62CC3FE0164FAF0D50C38CFCFDD4D17DC2C40E8761745C45
E67604E00222849B2996105C12B0B02574399C64C9658C20302217E82A9658C3
92C7FD076E62070E5B561DA165C52F8155870C6B9819E514092BFA14B8D415C9
F4C24936167C793EBC1B5E51BA976320129DB4711218DAF7C1BFF4F1D002775A
3B44B9ED4C2F266026FB03D1E5A91375C43BC02F81902B76D78FA55D28FD8444
27001A437C88C5EFFB15213158BA9B1639A4DF92F7435E115D455D8633F34A24
84FE8FC87BF01B3C69ADE1B510F6A219B179D5DA19B416875D59BD081AD37167
F20971769340729A6ECD980026CFEB0B7E31859271566BEB400A73E629728423
74E75243185A9BBCEB8165A93C1446728F7BA7309C170BA234DA04A74E5BB42A
A27E0B3A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258437 52099151 1000 600 600 (main.dvi)
@start /Fa 231[65 24[{}1 83.022 /CMSY10 rf /Fb 193[65
62[{}1 83.022 /CMMI10 rf /Fc 240[34 15[{}1 58.1154 /CMSY7
rf /Fd 136[55 3[32 32 2[42 46 4[23 46 42 1[37 1[37 1[42
14[55 6[55 42 5[60 9[28 16[28 28 40[{ TeXBase1Encoding ReEncodeFont }18
83.022 /NimbusRomNo9L-MediItal rf /Fe 107[29 29 24[29
33 1[48 33 33 18 26 22 1[33 33 33 52 18 33 1[18 33 33
22 29 33 29 33 29 3[22 1[22 3[63 1[48 41 37 44 1[37 48
48 59 41 48 1[22 48 48 37 41 48 44 44 48 6[18 33 33 33
33 33 33 33 33 33 33 18 17 22 17 37 1[22 22 2[55 34[37
2[{ TeXBase1Encoding ReEncodeFont }67 66.4176 /NimbusRomNo9L-Regu
rf /Ff 198[29 29 29 29 29 29 29 29 50[{ TeXBase1Encoding ReEncodeFont }
8 58.1154 /NimbusRomNo9L-Regu rf /Fg 133[37 42 42 60
42 46 28 32 37 1[46 42 46 69 23 46 1[23 46 42 28 37 46
37 46 42 9[83 60 60 55 46 60 1[51 65 60 78 55 65 1[32
65 65 1[55 60 60 55 60 7[42 42 5[42 2[23 21 28 1[47 1[28
28 37[46 2[{ TeXBase1Encoding ReEncodeFont }54 83.022
/NimbusRomNo9L-Medi rf /Fh 134[37 37 54 37 37 21 29 25
37 37 37 37 58 21 37 21 21 37 37 25 33 37 33 37 33 11[54
46 11[54 3[54 21[19 25 19 2[25 25 36[42 3[{
 TeXBase1Encoding ReEncodeFont }35 74.7198 /NimbusRomNo9L-Regu
rf /Fi 139[25 29 33 14[33 42 37 31[54 65[{
 TeXBase1Encoding ReEncodeFont }7 74.7198 /NimbusRomNo9L-Medi
rf /Fj 133[37 42 42 60 42 42 23 32 28 42 42 42 42 65
23 42 23 23 42 42 28 37 42 37 42 37 3[28 1[28 51 60 60
78 60 60 51 46 55 60 46 60 60 74 51 60 32 28 60 60 46
51 60 55 55 60 3[47 1[23 23 42 42 42 42 42 42 42 42 42
42 23 21 28 21 47 1[28 28 28 2[42 32[46 46 2[{
 TeXBase1Encoding ReEncodeFont }78 83.022 /NimbusRomNo9L-Regu
rf /Fk 134[37 37 55 37 42 23 32 32 1[42 42 42 60 23 37
1[23 42 42 23 37 42 37 42 42 11[60 46 42 51 1[51 60 1[69
46 55 1[28 60 1[51 51 60 55 51 51 6[28 42 3[42 42 42
42 42 42 23 21 28 3[28 28 40[{ TeXBase1Encoding ReEncodeFont }53
83.022 /NimbusRomNo9L-ReguItal rf /Fl 136[78 2[32 1[45
2[58 58 1[32 1[32 32 1[58 32 52 1[52 1[58 13[58 2[71
9[71 71 1[78 12[58 1[58 1[58 58 58 6[39 39 40[{
 TeXBase1Encoding ReEncodeFont }25 116.231 /NimbusRomNo9L-ReguItal
rf /Fm 134[58 1[84 58 1[39 45 3[58 65 1[32 2[32 65 58
1[52 1[52 14[78 1[84 14[84 67[{ TeXBase1Encoding ReEncodeFont }16
116.231 /NimbusRomNo9L-Medi rf /Fn 134[83 4[55 65 2[92
1[92 138 46 2[46 1[83 1[74 92 2[83 11[120 1[92 10[129
3[120 2[120 19[55 45[{ TeXBase1Encoding ReEncodeFont }18
166.044 /NimbusRomNo9L-Medi rf /Fo 170[102 1[78 3[102
79[{ TeXBase1Encoding ReEncodeFont }3 141.137 /NimbusRomNo9L-Regu
rf /Fp 166[82 2[82 1[69 63 75 2[82 82 4[38 1[82 1[69
3[82 65[{ TeXBase1Encoding ReEncodeFont }11 112.91 /NimbusRomNo9L-Regu
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 0 1
TeXDict begin 0 0 bop 0 0 a
SDict begin [/Producer (dvips + Distiller)/Title (Technology Review)/Subject
(Technology Review)/Creator (LaTeX with hyperref package)/Author (Krisna Irawan Jiongcheng Luo Drew Hamm)/Keywords
(capstone design, Technology Review) /DOCINFO pdfmark end
 0 0 a 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-158 -435 a
SDict begin H.S end
 -158 -435 a -158 -435 a
SDict begin H.R end
 -158 -435 a -158
-435 a
SDict begin [/View [/XYZ H.V]/Dest (page.0) cvn /DEST pdfmark end
 -158 -435 a Black 0 TeXcolorgray Black 0 TeXcolorgray
-150 -150 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -150 -150 a -150 -150 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -150 -150 a -150
-150 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -150 -150 a -150 -150 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -150 -150 a -150 -150
a
SDict begin [/Count -0/Dest (section.1) cvn/Title (Introduction) /OUT
pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -6/Dest (section.2) cvn/Title (Technologies) /OUT
pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -5/Dest (subsection.2.1) cvn/Title (Hardware selection of Microcontroller)
/OUT pdfmark end
 -150
-150 a -150 -150 a
SDict begin [/Count -0/Dest (subsubsection.2.1.1) cvn/Title (Context)
/OUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -0/Dest (subsubsection.2.1.2) cvn/Title (Options)
/OUT pdfmark end
 -150 -150
a -150 -150 a
SDict begin [/Count -0/Dest (subsubsection.2.1.3) cvn/Title (Criteria)
/OUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -0/Dest (subsubsection.2.1.4) cvn/Title (Table of Detailed Comparison)
/OUT pdfmark end
 -150 -150 a -150
-150 a
SDict begin [/Count -0/Dest (subsubsection.2.1.5) cvn/Title (Overall Discussion)
/OUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -5/Dest (subsection.2.2) cvn/Title (Hardware selection of Represented MEMS IMU)
/OUT pdfmark end
 -150 -150 a -150 -150
a
SDict begin [/Count -0/Dest (subsubsection.2.2.1) cvn/Title (Context)
/OUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -0/Dest (subsubsection.2.2.2) cvn/Title (Options)
/OUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -0/Dest (subsubsection.2.2.3) cvn/Title (Criteria)
/OUT pdfmark end
 -150
-150 a -150 -150 a
SDict begin [/Count -0/Dest (subsubsection.2.2.4) cvn/Title (Table of Detailed Comparison)
/OUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -0/Dest (subsubsection.2.2.5) cvn/Title (Overall Discussion)
/OUT pdfmark end
 -150 -150
a -150 -150 a
SDict begin [/Count -5/Dest (subsection.2.3) cvn/Title (Hardware selection of Communication Protocol Type)
/OUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -0/Dest (subsubsection.2.3.1) cvn/Title (Context)
/OUT pdfmark end
 -150 -150 a -150
-150 a
SDict begin [/Count -0/Dest (subsubsection.2.3.2) cvn/Title (Options)
/OUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -0/Dest (subsubsection.2.3.3) cvn/Title (Criteria)
/OUT pdfmark end
 -150 -150 a -150 -150
a
SDict begin [/Count -0/Dest (subsubsection.2.3.4) cvn/Title (Table of Detailed Comparison)
/OUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -0/Dest (subsubsection.2.3.5) cvn/Title (Overall Discussion)
/OUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -5/Dest (subsection.2.4) cvn/Title (User Interface Toolkit)
/OUT pdfmark end
 -150
-150 a -150 -150 a
SDict begin [/Count -0/Dest (subsubsection.2.4.1) cvn/Title (Context)
/OUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -0/Dest (subsubsection.2.4.2) cvn/Title (Options)
/OUT pdfmark end
 -150 -150
a -150 -150 a
SDict begin [/Count -0/Dest (subsubsection.2.4.3) cvn/Title (Criteria)
/OUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -0/Dest (subsubsection.2.4.4) cvn/Title (Table of Detailed Comparison)
/OUT pdfmark end
 -150 -150 a -150
-150 a
SDict begin [/Count -0/Dest (subsubsection.2.4.5) cvn/Title (Overall Discussion)
/OUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -5/Dest (subsection.2.5) cvn/Title (Programming Language)
/OUT pdfmark end
 -150 -150 a -150 -150
a
SDict begin [/Count -0/Dest (subsubsection.2.5.1) cvn/Title (Context)
/OUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -0/Dest (subsubsection.2.5.2) cvn/Title (Options)
/OUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -0/Dest (subsubsection.2.5.3) cvn/Title (Criteria)
/OUT pdfmark end
 -150
-150 a -150 -150 a
SDict begin [/Count -0/Dest (subsubsection.2.5.4) cvn/Title (Table of Detailed Comparison)
/OUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -0/Dest (subsubsection.2.5.5) cvn/Title (Overall Discussion)
/OUT pdfmark end
 -150 -150
a -150 -150 a
SDict begin [/Count -5/Dest (subsection.2.6) cvn/Title (Statistical Analysis Method)
/OUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -0/Dest (subsubsection.2.6.1) cvn/Title (Context)
/OUT pdfmark end
 -150 -150 a -150
-150 a
SDict begin [/Count -0/Dest (subsubsection.2.6.2) cvn/Title (Options)
/OUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -0/Dest (subsubsection.2.6.3) cvn/Title (Criteria)
/OUT pdfmark end
 -150 -150 a -150 -150
a
SDict begin [/Count -0/Dest (subsubsection.2.6.4) cvn/Title (Table of Detailed Comparison)
/OUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -0/Dest (subsubsection.2.6.5) cvn/Title (Overall Discussion)
/OUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -0/Dest (section.3) cvn/Title (Conclusion) /OUT
pdfmark end
 -150
-150 a -150 -150 a
SDict begin [/Count -0/Dest (section*.1) cvn/Title (References) /OUT
pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/PageMode /UseNone/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 -150 -150
a -150 -150 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin H.S end
 -150 -150 a -150
-150 a
SDict begin 12 H.A end
 -150 -150 a -150 -150 a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 -150 -150 a -150 -150
a
SDict begin [ {Catalog} <</PageLabels<</Nums[0<</P(0)>>1<</S/D>>]>>>>
/PUT pdfmark end
 -150 -150 a 1079 -50 a Fo(O)8 b Fp(R)g(E)g(G)e(O)g(N)40
b Fo(S)8 b Fp(T)n(A)-7 b(T)8 b(E)40 b Fo(U)8 b Fp(N)e(I)i(V)e(E)i(R)g
(S)g(I)g(T)f(Y)639 621 y Fn(Head-Up)63 b(Display)f(Alignment)i(System)
1474 999 y Fm(T)-11 b(echnology)28 b(Re)n(view)886 1376
y Fl(Senior)i(Softwar)l(e)f(Engineering)g(Pr)-5 b(oject)29
b(\(CS461\))1727 1517 y(F)-9 b(all)30 b(2016)1806 1853
y Fk(A)n(uthor)o(s:)1711 1953 y Fj(Krisna)e(Ira)o(w)o(an)1680
2052 y(Jiongcheng)e(Luo)1731 2152 y(Dre)n(w)j(Hamm)1811
3163 y Fi(Abstract)p 0 TeXcolorgray 0 TeXcolorgray 141
3288 a Fh(This)g(project)h(is)g(a)g(proof)h(concept)g(to)f(e)o(xplore)g
(a)g(potential)h(technological)g(inno)o(v)n(ation)g(for)f(Head-Up)h
(Display)f(\(HUD\))g(system)g(that)16 3371 y(present)i(critical)f
(\003ight)g(information)h(to)f(pilots.)g(The)g(primary)h(objecti)n(v)o
(e)g(of)f(this)g(project)h(is)f(to)g(reduce)i(the)e(cost)h(and)g(time)f
(required)h(to)16 3454 y(precisely)e(align)g(\003ight)f(information)h
(to)f(the)h(HUD)f(by)h(introducing)h(additional)f(sensor)g(to)g(the)f
(system)h(to)g(mak)o(e)g(the)g(alignment)g(process)16
3537 y(more)c(dynamic.)g(T)-6 b(o)26 b(achie)n(v)o(e)g(this)g(goal,)f
(there)h(are)g(nine)g(dif)n(ferent)g(main)f(technologies)j(that)d(will)
g(be)h(critical)e(for)i(the)g(de)n(v)o(elopment)h(of)f(the)16
3620 y(project.)f(This)f(document)i(will)d(compare)j(three)f(alternati)
n(v)o(e)f(options)i(for)e(each)h(main)g(technologies.)h(This)e
(document)i(will)e(also)g(include)i(the)16 3703 y(option)h(that)f(we)h
(choose)g(for)g(each)g(main)f(technologies)i(to)e(de)n(v)o(elop)i(this)
e(project.)p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 1 2
TeXDict begin 1 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-158 -435 a
SDict begin H.S end
 -158 -435 a -158 -435 a
SDict begin H.R end
 -158 -435 a -158
-435 a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 -158 -435 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-150 -50 a Fm(Contents)p 0 TeXcolorgray -150 135 a
SDict begin H.S end
 -150
135 a Fg(I)93 b(Intr)o(oduction)427 135 y
SDict begin 12 H.L end
 427 135 a 427
135 a
SDict begin [/Subtype /Link/Dest (section.1) cvn/H /I/Border [0 0 0]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end
 427 135 a 0 TeXcolorgray 66 w Fj(.)42 b(.)f(.)g(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)131
b Fg(2)p 0 TeXcolorgray -150 318 a
SDict begin H.S end
 -150 318 a Fg(II)61
b(T)-8 b(echnologies)429 318 y
SDict begin 12 H.L end
 429 318 a 429 318 a
SDict begin [/Subtype /Link/Dest (section.2) cvn/H /I/Border [0 0 0]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end
 429
318 a 0 TeXcolorgray 64 w Fj(.)42 b(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)
f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)131 b Fg(2)p 0
TeXcolorgray -25 417 a
SDict begin H.S end
 -25 417 a Fj(II-A)46 b(Hardw)o(are)28
b(selection)g(of)g(Microcontroller)1472 417 y
SDict begin 12 H.L end
 1472 417
a 1472 417 a
SDict begin [/Subtype /Link/Dest (subsection.2.1) cvn/H /I/Border [0
0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1472 417 a 0 TeXcolorgray 80 w Fj(.)41 b(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)131
b(2)p 0 TeXcolorgray 165 517 a
SDict begin H.S end
 165 517 a Fj(II-A)o(1)81
b(Conte)o(xt)694 517 y
SDict begin 12 H.L end
 694 517 a 694 517 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.1.1) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 694 517 a
0 TeXcolorgray 48 w Fj(.)42 b(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)g(.)h(.)131 b(2)p 0 TeXcolorgray 165 617 a
SDict begin H.S end

165 617 a Fj(II-A)o(2)81 b(Options)695 617 y
SDict begin 12 H.L end
 695 617
a 695 617 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.1.2) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 695 617 a 0 TeXcolorgray 47 w Fj(.)42 b(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)
f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)131 b(2)p 0 TeXcolorgray
165 716 a
SDict begin H.S end
 165 716 a Fj(II-A)o(3)81 b(Criteria)685 716
y
SDict begin 12 H.L end
 685 716 a 685 716 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.1.3) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 685 716 a 0 TeXcolorgray 57 w Fj(.)42
b(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)131
b(2)p 0 TeXcolorgray 165 816 a
SDict begin H.S end
 165 816 a Fj(II-A)o(4)81
b(T)-7 b(able)29 b(of)f(Detailed)g(Comparison)1459 816
y
SDict begin 12 H.L end
 1459 816 a 1459 816 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.1.4) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1459 816 a 0 TeXcolorgray 31
w Fj(.)41 b(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)
h(.)f(.)g(.)g(.)h(.)131 b(3)p 0 TeXcolorgray 165 916
a
SDict begin H.S end
 165 916 a Fj(II-A)o(5)81 b(Ov)o(erall)28 b(Discussion)1073
916 y
SDict begin 12 H.L end
 1073 916 a 1073 916 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.1.5) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1073 916 a 0 TeXcolorgray
43 w Fj(.)41 b(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)131 b(3)p
0 TeXcolorgray -25 1015 a
SDict begin H.S end
 -25 1015 a Fj(II-B)51 b(Hardw)o(are)28
b(selection)g(of)g(Represented)g(MEMS)g(IMU)1818 1015
y
SDict begin 12 H.L end
 1818 1015 a 1818 1015 a
SDict begin [/Subtype /Link/Dest (subsection.2.2) cvn/H /I/Border [0
0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1818 1015 a 0 TeXcolorgray
45 w Fj(.)42 b(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)
131 b(3)p 0 TeXcolorgray 165 1115 a
SDict begin H.S end
 165 1115 a Fj(II-B1)85
b(Conte)o(xt)694 1115 y
SDict begin 12 H.L end
 694 1115 a 694 1115 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.2.1) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 694 1115
a 0 TeXcolorgray 48 w Fj(.)42 b(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)g(.)h(.)131 b(3)p 0 TeXcolorgray 165 1214
a
SDict begin H.S end
 165 1214 a Fj(II-B2)85 b(Options)695 1214 y
SDict begin 12 H.L end
 695 1214
a 695 1214 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.2.2) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 695 1214 a 0 TeXcolorgray 47 w Fj(.)42 b(.)f(.)g(.)h(.)f
(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)
h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)131 b(3)p
0 TeXcolorgray 165 1314 a
SDict begin H.S end
 165 1314 a Fj(II-B3)85 b(Criteria)685
1314 y
SDict begin 12 H.L end
 685 1314 a 685 1314 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.2.3) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 685 1314 a 0 TeXcolorgray
57 w Fj(.)42 b(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h
(.)131 b(3)p 0 TeXcolorgray 165 1414 a
SDict begin H.S end
 165 1414 a Fj(II-B4)85
b(T)-7 b(able)29 b(of)f(Detailed)g(Comparison)1459 1414
y
SDict begin 12 H.L end
 1459 1414 a 1459 1414 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.2.4) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1459 1414 a 0 TeXcolorgray
31 w Fj(.)41 b(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)g(.)h(.)131 b(4)p 0 TeXcolorgray 165
1513 a
SDict begin H.S end
 165 1513 a Fj(II-B5)85 b(Ov)o(erall)28 b(Discussion)1073
1513 y
SDict begin 12 H.L end
 1073 1513 a 1073 1513 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.2.5) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1073 1513 a 0 TeXcolorgray
43 w Fj(.)41 b(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)131 b(4)p
0 TeXcolorgray -25 1613 a
SDict begin H.S end
 -25 1613 a Fj(II-C)51 b(Hardw)o(are)28
b(selection)g(of)g(Communication)f(Protocol)g(T)-7 b(ype)1983
1613 y
SDict begin 12 H.L end
 1983 1613 a 1983 1613 a
SDict begin [/Subtype /Link/Dest (subsection.2.3) cvn/H /I/Border [0
0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1983 1613 a 0 TeXcolorgray
67 w Fj(.)41 b(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)131
b(4)p 0 TeXcolorgray 165 1713 a
SDict begin H.S end
 165 1713 a Fj(II-C1)85
b(Conte)o(xt)694 1713 y
SDict begin 12 H.L end
 694 1713 a 694 1713 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.3.1) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 694 1713
a 0 TeXcolorgray 48 w Fj(.)42 b(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)g(.)h(.)131 b(4)p 0 TeXcolorgray 165 1812
a
SDict begin H.S end
 165 1812 a Fj(II-C2)85 b(Options)695 1812 y
SDict begin 12 H.L end
 695 1812
a 695 1812 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.3.2) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 695 1812 a 0 TeXcolorgray 47 w Fj(.)42 b(.)f(.)g(.)h(.)f
(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)
h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)131 b(4)p
0 TeXcolorgray 165 1912 a
SDict begin H.S end
 165 1912 a Fj(II-C3)85 b(Criteria)685
1912 y
SDict begin 12 H.L end
 685 1912 a 685 1912 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.3.3) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 685 1912 a 0 TeXcolorgray
57 w Fj(.)42 b(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h
(.)131 b(4)p 0 TeXcolorgray 165 2011 a
SDict begin H.S end
 165 2011 a Fj(II-C4)85
b(T)-7 b(able)29 b(of)f(Detailed)g(Comparison)1459 2011
y
SDict begin 12 H.L end
 1459 2011 a 1459 2011 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.3.4) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1459 2011 a 0 TeXcolorgray
31 w Fj(.)41 b(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)g(.)h(.)131 b(4)p 0 TeXcolorgray 165
2111 a
SDict begin H.S end
 165 2111 a Fj(II-C5)85 b(Ov)o(erall)28 b(Discussion)1073
2111 y
SDict begin 12 H.L end
 1073 2111 a 1073 2111 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.3.5) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1073 2111 a 0 TeXcolorgray
43 w Fj(.)41 b(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)131 b(5)p
0 TeXcolorgray -25 2211 a
SDict begin H.S end
 -25 2211 a Fj(II-D)46 b(User)29
b(Interf)o(ace)e(T)-7 b(oolkit)913 2211 y
SDict begin 12 H.L end
 913 2211 a
913 2211 a
SDict begin [/Subtype /Link/Dest (subsection.2.4) cvn/H /I/Border [0
0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 913 2211 a 0 TeXcolorgray 79 w Fj(.)41 b(.)g(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)
f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)g(.)h(.)131 b(5)p 0 TeXcolorgray 165 2310
a
SDict begin H.S end
 165 2310 a Fj(II-D)o(1)81 b(Conte)o(xt)694 2310 y
SDict begin 12 H.L end
 694
2310 a 694 2310 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.4.1) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 694 2310 a 0 TeXcolorgray 48 w Fj(.)42
b(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)131
b(5)p 0 TeXcolorgray 165 2410 a
SDict begin H.S end
 165 2410 a Fj(II-D)o(2)81
b(Options)695 2410 y
SDict begin 12 H.L end
 695 2410 a 695 2410 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.4.2) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 695 2410 a
0 TeXcolorgray 47 w Fj(.)42 b(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)g(.)h(.)131 b(5)p 0 TeXcolorgray 165 2510
a
SDict begin H.S end
 165 2510 a Fj(II-D)o(3)81 b(Criteria)685 2510 y
SDict begin 12 H.L end
 685
2510 a 685 2510 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.4.3) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 685 2510 a 0 TeXcolorgray 57 w Fj(.)42
b(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)131
b(5)p 0 TeXcolorgray 165 2609 a
SDict begin H.S end
 165 2609 a Fj(II-D)o(4)81
b(T)-7 b(able)29 b(of)f(Detailed)g(Comparison)1459 2609
y
SDict begin 12 H.L end
 1459 2609 a 1459 2609 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.4.4) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1459 2609 a 0 TeXcolorgray
31 w Fj(.)41 b(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)g(.)h(.)131 b(6)p 0 TeXcolorgray 165
2709 a
SDict begin H.S end
 165 2709 a Fj(II-D)o(5)81 b(Ov)o(erall)28 b(Discussion)1073
2709 y
SDict begin 12 H.L end
 1073 2709 a 1073 2709 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.4.5) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1073 2709 a 0 TeXcolorgray
43 w Fj(.)41 b(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)131 b(6)p
0 TeXcolorgray -25 2808 a
SDict begin H.S end
 -25 2808 a Fj(II-E)55 b(Programming)26
b(Language)981 2808 y
SDict begin 12 H.L end
 981 2808 a 981 2808 a
SDict begin [/Subtype /Link/Dest (subsection.2.5) cvn/H /I/Border [0
0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 981 2808
a 0 TeXcolorgray 73 w Fj(.)41 b(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)131
b(6)p 0 TeXcolorgray 165 2908 a
SDict begin H.S end
 165 2908 a Fj(II-E)o(1)90
b(Conte)o(xt)694 2908 y
SDict begin 12 H.L end
 694 2908 a 694 2908 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.5.1) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 694 2908
a 0 TeXcolorgray 48 w Fj(.)42 b(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)g(.)h(.)131 b(6)p 0 TeXcolorgray 165 3008
a
SDict begin H.S end
 165 3008 a Fj(II-E)o(2)90 b(Options)695 3008 y
SDict begin 12 H.L end
 695
3008 a 695 3008 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.5.2) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 695 3008 a 0 TeXcolorgray 47 w Fj(.)42
b(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)131
b(6)p 0 TeXcolorgray 165 3107 a
SDict begin H.S end
 165 3107 a Fj(II-E)o(3)90
b(Criteria)685 3107 y
SDict begin 12 H.L end
 685 3107 a 685 3107 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.5.3) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 685 3107
a 0 TeXcolorgray 57 w Fj(.)42 b(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)g(.)h(.)131 b(6)p 0 TeXcolorgray 165 3207
a
SDict begin H.S end
 165 3207 a Fj(II-E)o(4)90 b(T)-7 b(able)29 b(of)f(Detailed)g
(Comparison)1459 3207 y
SDict begin 12 H.L end
 1459 3207 a 1459 3207 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.5.4) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1459
3207 a 0 TeXcolorgray 31 w Fj(.)41 b(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)131 b(7)p
0 TeXcolorgray 165 3307 a
SDict begin H.S end
 165 3307 a Fj(II-E)o(5)90 b(Ov)o(erall)28
b(Discussion)1073 3307 y
SDict begin 12 H.L end
 1073 3307 a 1073 3307 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.5.5) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1073
3307 a 0 TeXcolorgray 43 w Fj(.)41 b(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)
131 b(7)p 0 TeXcolorgray -25 3406 a
SDict begin H.S end
 -25 3406 a Fj(II-F)60
b(Statistical)30 b(Analysis)f(Method)1102 3406 y
SDict begin 12 H.L end
 1102
3406 a 1102 3406 a
SDict begin [/Subtype /Link/Dest (subsection.2.6) cvn/H /I/Border [0
0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1102 3406 a 0 TeXcolorgray 76 w Fj(.)42
b(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)
f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)131 b(7)p 0 TeXcolorgray
165 3506 a
SDict begin H.S end
 165 3506 a Fj(II-F1)94 b(Conte)o(xt)694 3506
y
SDict begin 12 H.L end
 694 3506 a 694 3506 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.6.1) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 694 3506 a 0 TeXcolorgray 48
w Fj(.)42 b(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)131
b(7)p 0 TeXcolorgray 165 3606 a
SDict begin H.S end
 165 3606 a Fj(II-F2)94
b(Options)695 3606 y
SDict begin 12 H.L end
 695 3606 a 695 3606 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.6.2) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 695 3606 a
0 TeXcolorgray 47 w Fj(.)42 b(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)g(.)h(.)131 b(7)p 0 TeXcolorgray 165 3705
a
SDict begin H.S end
 165 3705 a Fj(II-F3)94 b(Criteria)685 3705 y
SDict begin 12 H.L end
 685 3705
a 685 3705 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.6.3) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 685 3705 a 0 TeXcolorgray 57 w Fj(.)42 b(.)f(.)g(.)h(.)f
(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)
h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)131 b(7)p
0 TeXcolorgray 165 3805 a
SDict begin H.S end
 165 3805 a Fj(II-F4)94 b(T)-7
b(able)29 b(of)f(Detailed)g(Comparison)1459 3805 y
SDict begin 12 H.L end
 1459
3805 a 1459 3805 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.6.4) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1459 3805 a 0 TeXcolorgray 31 w Fj(.)41
b(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)
g(.)g(.)h(.)131 b(7)p 0 TeXcolorgray 165 3904 a
SDict begin H.S end
 165 3904
a Fj(II-F5)94 b(Ov)o(erall)28 b(Discussion)1073 3904
y
SDict begin 12 H.L end
 1073 3904 a 1073 3904 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.6.5) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1073 3904 a 0 TeXcolorgray
43 w Fj(.)41 b(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)131 b(8)p
0 TeXcolorgray -150 4087 a
SDict begin H.S end
 -150 4087 a Fg(III)29 b(Conclusion)372
4087 y
SDict begin 12 H.L end
 372 4087 a 372 4087 a
SDict begin [/Subtype /Link/Dest (section.3) cvn/H /I/Border [0 0 0]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end
 372 4087 a 0 TeXcolorgray
59 w Fj(.)41 b(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)
f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)g(.)h(.)131 b Fg(8)p 0 TeXcolorgray -150
4270 a
SDict begin H.S end
 -150 4270 a Fg(Refer)o(ences)237 4270 y
SDict begin 12 H.L end
 237 4270
a 237 4270 a
SDict begin [/Subtype /Link/Dest (section*.1) cvn/H /I/Border [0 0
0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 237 4270 a 0 TeXcolorgray 70 w Fj(.)41 b(.)g(.)g(.)h(.)f
(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)
131 b Fg(9)p 0 TeXcolorgray 1929 5764 a Fj(1)p 0 TeXcolorgray
eop end
%%Page: 2 3
TeXDict begin 2 2 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-158 -435 a
SDict begin H.S end
 -158 -435 a -158 -435 a
SDict begin H.R end
 -158 -435 a -158
-435 a
SDict begin [/View [/XYZ H.V]/Dest (page.2) cvn /DEST pdfmark end
 -158 -435 a 0 TeXcolorgray 0 TeXcolorgray 4021
-327 a Ff(2)p 0 TeXcolorgray -150 -150 a
SDict begin H.S end
 -150 -150 a
-150 -150 a
SDict begin 12 H.A end
 -150 -150 a -150 -150 a
SDict begin [/View [/XYZ H.V]/Dest (section.1) cvn /DEST pdfmark end
 -150 -150 a 1626
-50 a Fj(I)t(.)45 b(I)t Fe(N)t(T)t(R)q(O)t(D)t(U)t(C)t(T)t(I)t(O)t(N)
-67 75 y Fj(There)26 b(are)h(nine)f(dif)n(ferent)f(main)i(technologies)
e(that)i(will)h(be)e(used)h(or)g(in)m(v)n(olv)o(ed)d(in)j(this)h
(project.)d(These)i(technologies)e(contain)h(using)-150
175 y(of)35 b(both)f(softw)o(are)h(and)f(hardw)o(are.)g(F)o(or)g
(instance,)h(for)f(hardw)o(are,)g(we)h(will)h(compare)d(and)i(discuss)g
(about)f(some)h(possible)g(hardw)o(are)-150 275 y(options)23
b(for)h(b)n(uilding)f(the)h(demonstration)e(system;)j(for)e(softw)o
(are,)h(we)h(will)g(compare)d(and)i(discuss)h(dif)n(ferent)e
(algorithms)g(or)h(approaches)-150 374 y(for)k(resolving)f(the)h
(problem.)f(Each)h(of)g(us)h(tak)o(es)g(an)f(authorship)f
(\(responsibility\))f(for)i(three)g(technologies:)-67
574 y Fd(Jiongc)o(heng)i(\(Roger\):)p 0 TeXcolorgray
-59 690 a Fc(\017)p 0 TeXcolorgray 41 w Fj(Hardw)o(are)e(selection)g
(of)g(Microcontroller)p 0 TeXcolorgray -59 789 a Fc(\017)p
0 TeXcolorgray 41 w Fj(Hardw)o(are)g(selection)g(of)g(Represented)f
(MEMS)i(IMU)p 0 TeXcolorgray -59 889 a Fc(\017)p 0 TeXcolorgray
41 w Fj(Hardw)o(are)f(selection)g(of)g(Communication)e(Protocol)h(T)-7
b(ype)-67 1005 y Fd(Krisna:)p 0 TeXcolorgray -59 1121
a Fc(\017)p 0 TeXcolorgray 41 w Fj(User)29 b(Interf)o(ace)e(T)-7
b(oolkit)p 0 TeXcolorgray -59 1221 a Fc(\017)p 0 TeXcolorgray
41 w Fj(Programming)26 b(Language)p 0 TeXcolorgray -59
1321 a Fc(\017)p 0 TeXcolorgray 41 w Fj(Statistical)k(Analysis)e
(Method)-67 1437 y Fd(Drew:)p 0 TeXcolorgray -59 1553
a Fc(\017)p 0 TeXcolorgray 41 w Fj(Represent)g(IR)m(U:)h(Simulation)e
(techniques)p 0 TeXcolorgray -59 1653 a Fc(\017)p 0 TeXcolorgray
41 w Fj(Algorithm)g(to)i(con)m(v)o(ert)d(ra)o(w)i(MEMS)h(IR)m(U)g(data)
f(output)f(to)i(Quaternion)e(output)p 0 TeXcolorgray
-59 1752 a Fc(\017)p 0 TeXcolorgray 41 w Fj(Algorithm)g(to)i(get)f(of)n
(fset)g(using)g(both)g(sensor)g(outputs)-150 2064 y
SDict begin H.S end
 -150
2064 a -150 2064 a
SDict begin 12 H.A end
 -150 2064 a -150 2064 a
SDict begin [/View [/XYZ H.V]/Dest (section.2) cvn /DEST pdfmark end
 -150 2064
a 1605 2163 a Fj(I)t(I)t(.)45 b(T)t Fe(E)t(C)t(H)t(N)t(O)t(L)t(O)t(G)t
(I)t(E)t(S)-150 2191 y
SDict begin H.S end
 -150 2191 a -150 2191 a
SDict begin 12 H.A end
 -150 2191
a -150 2191 a
SDict begin [/View [/XYZ H.V]/Dest (subsection.2.1) cvn /DEST pdfmark
end
 -150 2191 a 98 x Fk(A.)c(Har)m(dwar)m(e)28
b(selection)g(of)h(Micr)l(ocontr)l(oller)-150 2332 y
SDict begin H.S end

-150 2332 a -150 2332 a
SDict begin 12 H.A end
 -150 2332 a -150 2332 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.1.1) cvn /DEST
pdfmark end
 -150
2332 a -67 2415 a Fk(1\))41 b(Conte)n(xt:)33 b Fj(It)21
b(is)f(critical)h(to)f(choose)f(the)h(most)g(appropriate)d
(microcontroller)g(for)j(this)g(system)g(since)g(there)g(are)g
(limitations)f(from)g(both)-150 2515 y(hardw)o(are)28
b(and)h(softw)o(are)f(perspecti)n(v)o(es.)g(A)i(microcontroller)c
(plays)j(an)g(important)f(role)h(in)g(the)h(system,)f(which)g(it)h
(will)g(ha)n(v)o(e)e(follo)n(wing)-150 2614 y(functionalities)f(in)i
(the)f(system:)p 0 TeXcolorgray -59 2730 a Fc(\017)p
0 TeXcolorgray 41 w Fj(Process)h(input)e(from)h(the)g(IMUs)h(and)f
(output)f(to)i(the)g(computer/display)p 0 TeXcolorgray
-59 2830 a Fc(\017)p 0 TeXcolorgray 41 w Fj(Process)g(the)f(alignment)f
(algorithm)p 0 TeXcolorgray -59 2930 a Fc(\017)p 0 TeXcolorgray
41 w Fj(Deb)n(ugging)f(and)i(testing)h(purpose)-150 3046
y
SDict begin H.S end
 -150 3046 a -150 3046 a
SDict begin 12 H.A end
 -150 3046 a -150 3046 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.1.2) cvn /DEST
pdfmark end
 -150
3046 a -67 3146 a Fk(2\))41 b(Options:)h Fj(W)-7 b(e)31
b(consider)d(to)i(use)g(a)g(board)e(between)h Fk(Ar)m(duino)f(Pr)l(o)i
(Mini)g Fj([)p 0 1 0 TeXcolorrgb 2322 3146 a
SDict begin H.S end
 2322 3146
a 0 1 0 TeXcolorrgb Fj(1)p 0 1 0 TeXcolorrgb 2363 3089
a
SDict begin H.R end
 2363 3089 a 2363 3146 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (cite.arduino) cvn H.B /ANN pdfmark end
 2363 3146 a 0 TeXcolorgray
Fj(],)f Fk(Adafruit)g(Pr)l(o)h(T)-5 b(rink)o(et)32 b
Fj([)p 0 1 0 TeXcolorrgb 3193 3146 a
SDict begin H.S end
 3193 3146 a 0 1 0
TeXcolorrgb Fj(2)p 0 1 0 TeXcolorrgb 3235 3089 a
SDict begin H.R end
 3235
3089 a 3235 3146 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (cite.trinket) cvn H.B /ANN pdfmark end
 3235 3146 a 0 TeXcolorgray Fj(])d(and)g
Fk(In)m(venSense)f(MPU-)-150 3245 y(9250)g(CA-SDK)i(Refer)m(ence)g
(Boar)m(d)h Fj([)p 0 1 0 TeXcolorrgb 992 3246 a
SDict begin H.S end
 992 3246
a 0 1 0 TeXcolorrgb -1 x Fj(3)p 0 1 0 TeXcolorrgb 1033
3189 a
SDict begin H.R end
 1033 3189 a 1033 3245 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (cite.MPU9250SDK) cvn H.B /ANN pdfmark end
 1033 3245 a 0 TeXcolorgray
Fj(].)f(An)o(yone)e(of)h(these)h(board)f(has)h(its)h(outstanding)d
(areas)i(and)f(lack,)g(and)h(we)g(will)h(choose)e(one)g(of)-150
3345 y(them)f(based)g(on)g(the)h(follo)n(wing)e(criteria.)-150
3444 y
SDict begin H.S end
 -150 3444 a -150 3444 a
SDict begin 12 H.A end
 -150 3444 a -150 3444
a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.1.3) cvn /DEST
pdfmark end
 -150 3444 a -67 3544 a Fk(3\))41 b(Criteria:)-150 3576
y
SDict begin H.S end
 -150 3576 a -150 3576 a
SDict begin 12 H.A end
 -150 3576 a -150 3576 a
SDict begin [/View [/XYZ H.V]/Dest (Item.1) cvn /DEST pdfmark end
 -150
3576 a 0 TeXcolorgray -94 3660 a Fj(1\))p 0 TeXcolorgray
40 w Fg(Support)c(Language)p Fj(,)d(we)g(e)o(xpect)f(to)i(use)f(a)h
(general)e(programming)e(language)h(for)i(the)g(microcontroller)d
(since)j(using)g(f)o(amiliar)16 3760 y(programming)22
b(language)j(will)h(reduce)f(our)g(time)h(on)f(addition)g(research)g
(and)g(the)h(sa)n(v)o(e)g(time)g(on)f(w)o(orking)g(on)g(the)h
(algorithm)e(itself.)-150 3778 y
SDict begin H.S end
 -150 3778 a -150 3778
a
SDict begin 12 H.A end
 -150 3778 a -150 3778 a
SDict begin [/View [/XYZ H.V]/Dest (Item.2) cvn /DEST pdfmark end
 -150 3778 a 0 TeXcolorgray
-94 3860 a Fj(2\))p 0 TeXcolorgray 40 w Fg(Clock)31 b(Speed)p
Fj(,)f(the)f(alignment)e(algorithm)h(is)h(required)e(to)j(within)e
(around)f(500)h(milliseconds)h(time)g(from)e(taking)i(the)f(input)h
(from)16 3959 y(the)g(IR)m(Us)g(to)f(the)h(output)e(of)h(aligned)g
(data,)g(that)g(require)g(the)g(board)f(has)i(a)g(f)o(ast)g(speed)f
(and)g(running)e(an)o(y)i(processes.)-150 3977 y
SDict begin H.S end
 -150
3977 a -150 3977 a
SDict begin 12 H.A end
 -150 3977 a -150 3977 a
SDict begin [/View [/XYZ H.V]/Dest (Item.3) cvn /DEST pdfmark end
 -150 3977
a 0 TeXcolorgray -94 4059 a Fj(3\))p 0 TeXcolorgray 40
w Fg(I2C)j(Pr)o(otocol)p Fj(,)25 b(this)k(is)g(necessary)f(to)g(ha)n(v)
o(e)g(on)g(the)g(board)f(since)i(the)f(MPU-9250)e(\(our)h(selected)i
(IMU\))f(require)e(I2C)j(protocol)d(to)16 4158 y(communicate.)-150
4159 y
SDict begin H.S end
 -150 4159 a -150 4159 a
SDict begin 12 H.A end
 -150 4159 a -150 4159
a
SDict begin [/View [/XYZ H.V]/Dest (Item.4) cvn /DEST pdfmark end
 -150 4159 a 0 TeXcolorgray -94 4258 a Fj(4\))p 0 TeXcolorgray
40 w Fg(Connection)k(with)h(PC)p Fj(,)e(this)g(is)g(necessary)f(to)g
(ha)n(v)o(e)g(on)g(the)h(board)e(since)i(we)f(will)i(use)e(computer)f
(to)i(an)o(y)e(softw)o(are)h(program.)-150 4276 y
SDict begin H.S end
 -150
4276 a -150 4276 a
SDict begin 12 H.A end
 -150 4276 a -150 4276 a
SDict begin [/View [/XYZ H.V]/Dest (Item.5) cvn /DEST pdfmark end
 -150 4276
a 0 TeXcolorgray -94 4358 a Fj(5\))p 0 TeXcolorgray 40
w Fg(Size)p Fj(,)h(size)g(is)g(less)h(important)d(since)i(this)g
(system)f(is)i(for)e(demonstration)e(purpose.)-150 4376
y
SDict begin H.S end
 -150 4376 a -150 4376 a
SDict begin 12 H.A end
 -150 4376 a -150 4376 a
SDict begin [/View [/XYZ H.V]/Dest (Item.6) cvn /DEST pdfmark end
 -150
4376 a 0 TeXcolorgray -94 4457 a Fj(6\))p 0 TeXcolorgray
40 w Fg(Cost)p Fj(,)i(this)h(is)h(relati)n(v)o(ely)d(important)g(b)n
(ut)h(as)i(long)d(as)j(the)e(price)g(is)h(within)g(the)f(e)o(xpected)f
(b)n(udget,)g(that)i(will)g(be)g(acceptable.)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 3 4
TeXDict begin 3 3 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-158 -435 a
SDict begin H.S end
 -158 -435 a -158 -435 a
SDict begin H.R end
 -158 -435 a -158
-435 a
SDict begin [/View [/XYZ H.V]/Dest (page.3) cvn /DEST pdfmark end
 -158 -435 a 0 TeXcolorgray 0 TeXcolorgray 4021
-327 a Ff(3)p 0 TeXcolorgray -150 -150 a
SDict begin H.S end
 -150 -150 a
-150 -150 a
SDict begin 12 H.A end
 -150 -150 a -150 -150 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.1.4) cvn /DEST
pdfmark end
 -150 -150 a -67 -50
a Fk(4\))41 b(T)-8 b(able)28 b(of)h(Detailed)f(Comparison:)p
0 TeXcolorgray 0 TeXcolorgray -76 102 4053 4 v -76 302
4 200 v 200 223 a Fg(Model)p 699 302 V 889 172 a Fk(Ar)m(duino)870
272 y(Pr)l(o)h(Mini)p 1344 302 V 1828 172 a(Adafruit)1774
272 y(Pr)l(o)g(T)-5 b(rink)o(et)p 2586 302 V 3061 172
a(In)m(venseSense)2639 272 y(MPU-9250)26 b(CA-SDK)j(Refer)m(ence)f
(Boar)m(d)p 3973 302 V -76 305 4053 4 v -76 504 4 200
v 123 425 a Fg(Cor)o(e)i(Chip)p 699 504 V 318 w Fj(A)-9
b(Tme)o(ga328)p 1344 504 V 536 w(A)g(Tme)o(ga328)p 2586
504 V 3185 375 a(T)j(e)o(xas)2941 474 y(Instrument)27
b(MSP430)p 3973 504 V -76 508 4053 4 v -76 607 4 100
v -23 577 a Fg(Support)j(Language)p 699 607 V 346 w Fj(C)p
1344 607 V 888 w(C)p 2586 607 V 1173 w(C/C++)p 3973 607
V -76 610 4053 4 v -76 810 4 200 v 87 731 a Fg(Clock)h(Speed)p
699 810 V 917 680 a Fj(8MHz)807 780 y(\(3.3V)c(mode\))p
1344 810 V 1840 680 a(12MHz)1781 780 y(\(3V)i(mode\))p
2586 810 V 3147 680 a(16MHZ)3061 780 y(\(1.8V)56 b(3.6V\))p
3973 810 V -76 813 4053 4 v -76 1012 4 200 v 246 883
a Fg(I2C)5 982 y(Pr)o(otocol/Number)p 699 1012 V 931
933 a Fj(Y)-8 b(es/1)p 1344 1012 V 757 w(Y)g(es/1)p 2586
1012 V 877 w(Embedded)26 b(Structure)p 3973 1012 V -76
1016 4053 4 v -76 1215 4 200 v 110 1085 a Fg(Connection)164
1185 y(with)31 b(PC)p 699 1215 V 942 1136 a Fj(USB)p
1344 1215 V 679 w(FTDI/USB)p 2586 1215 V 874 w(USB/Bluetooth)p
3973 1215 V -76 1218 4053 4 v -76 1318 4 100 v 241 1288
a Fg(Size)p 699 1318 V 368 w Fj(33mm)c(X)i(18mm)p 1344
1318 V 255 w(38mm)e(X)i(18mm)f(X)h(2mm)p 2586 1318 V
734 w(Unkno)n(wn)p 3973 1318 V -76 1321 4053 4 v -76
1421 4 100 v -1 1391 a Fg(Cost)i(\(U)l(.S)f(Dollar\))p
699 1421 V 302 w Fj($9.95)p 1344 1421 V 754 w($9.95)p
2586 1421 V 1084 w($440.00)p 3973 1421 V -76 1424 4053
4 v -76 1623 4 200 v 122 1544 a Fg(Adv)o(antage)p 699
1623 V 926 1494 a Fj(Small)959 1593 y(size)p 1344 1623
V 1866 1494 a(F)o(aster)1768 1593 y(clock)e(speed)p 2586
1623 V 2919 1544 a(W)m(ith)h(embedded)d(IMU)p 3973 1623
V -76 1627 4053 4 v -76 1826 4 200 v 154 1747 a Fg(Shortage)p
699 1826 V 907 1696 a Fj(Slo)n(wer)808 1796 y(Clock)i(Speed)p
1344 1826 V 1884 1696 a(Lack)1397 1796 y(of)h(resource)e(of)h
(guidance/datasheet)p 2586 1826 V 3117 1747 a(High)g(cost)p
3973 1826 V -76 1829 4053 4 v -150 1979 a
SDict begin H.S end
 -150 1979 a
-150 1979 a
SDict begin 12 H.A end
 -150 1979 a -150 1979 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.1.5) cvn /DEST
pdfmark end
 -150 1979 a -67 2078
a Fk(5\))41 b(Over)o(all)23 b(Discussion:)38 b Fj(By)24
b(comparing)d(these)j(boards)f(by)g(the)h(abo)o(v)o(e)e(criteria,)i
Fk(Ar)m(duino)e(Pr)l(o)i(Mini)g Fj(and)g Fk(Adafruit)f(Pr)l(o)h(T)-5
b(rink)o(et)26 b Fj(ha)n(v)o(e)-150 2178 y(similar)k(performance)d(and)
j(speci\002cation,)f(the)o(y)g(both)h(ha)n(v)o(e)f(the)h(adv)n(antages)
f(of)g(small)i(size)g(and)e(lo)n(w)h(cost.)h Fk(In)m(venseSense)c
(MPU-9250)-150 2278 y(CA-SDK)34 b(Refer)m(ence)f(Boar)m(d)i
Fj(is)g(a)g(special)f(case,)g(which)f(its)i(a)f(board)f(as)h(well)h(as)
f(the)g(IR)m(U)g(itself)h(since)f(it)h(has)f(embedded)d(on-board)-150
2377 y(sensors.)c Fk(MPU-9250)f(CA-SDK)i(is)h(very)f(powerful)g
Fj(for)f(multi-sensor)f(system,)i(other)f(than)g(an)h(embedded)d
(MPU-9250)h(\(accelerometer)m(,)-150 2477 y(gyroscope)36
b(and)h(compass\),)f(it)j(also)f(has)g(pressure)f(sensor)m(,)g(UV)h
(sensor)m(,)f(humidity)f(and)h(temperature)f(sensor)m(,)h(light)g(and)g
(proximity)-150 2576 y(sensor)-5 b(.)26 b(Ho)n(we)n(v)o(er)m(,)e(high)i
(cost)g(is)i(a)e(noticeable)f(shortage)h(of)g Fk(MPU-9250)e(CA-SDK)p
Fj(.)i(In)g(addition,)f(and)h(not)g(all)g(of)g(its)i(functionalities)d
(are)-150 2676 y(necessary)j(for)g(this)h(project.)-67
2776 y(No)n(w)-5 b(,)25 b(we)g(only)g(look)g(at)h Fk(Adafruit)e(Pr)l(o)
i(T)-5 b(rink)o(et)28 b Fj(and)d Fk(Ar)m(duino)f(Pr)l(o)i(Mini)p
Fj(.)f(Based)h(on)f(the)h(comparison)d(and)i(the)h(criteria,)e
Fk(Adafruit)h(Pr)l(o)-150 2875 y(T)-5 b(rink)o(et)30
b Fj(will)f(be)f(more)f(preferable.)f(Because)i(this)g(module)f(has)h
(a)g(f)o(aster)g(clock)f(speed)h(compares)f(to)h(the)g
Fk(Ar)m(duino)e(Pr)l(o)i(Mini)p Fj(,)g(although)-150
2975 y(it)d(has)g(a)f(lar)o(ger)g(size)h(b)n(ut)f(this)h(doesnt)f(af)n
(fect)f(to)i(its)g(actual)f(performance)e(based)i(on)g(our)f(project)h
(requirement,)e(other)h(than)h(that,)g(all)h(other)-150
3075 y(concerned)h(criteria)i(are)h(same)f(as)i(the)e
Fk(Ar)m(duino)f(Pr)l(o)i(Mini)p Fj(.)-150 3207 y
SDict begin H.S end
 -150
3207 a -150 3207 a
SDict begin 12 H.A end
 -150 3207 a -150 3207 a
SDict begin [/View [/XYZ H.V]/Dest (subsection.2.2) cvn /DEST pdfmark
end
 -150 3207
a 98 x Fk(B.)41 b(Har)m(dwar)m(e)28 b(selection)g(of)h(Repr)m(esented)e
(MEMS)i(IMU)-150 3348 y
SDict begin H.S end
 -150 3348 a -150 3348 a
SDict begin 12 H.A end
 -150
3348 a -150 3348 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.2.1) cvn /DEST
pdfmark end
 -150 3348 a -67 3431 a Fk(1\))41 b(Conte)n(xt:)e
Fj(An)25 b(Inertial)f(Measurement)g(Unit)h(\(IMU\))f(is)j(the)e(most)g
(signi\002cant)g(part)f(of)h(the)g(hardw)o(are)f(components)f(of)i
(this)h(system.)-150 3530 y(An)32 b(MEMS)h(IMU)f(will)h(be)f(used)g(to)
h(measure)e(the)i(acceleration,)e(v)o(elocity)g(position)g(of)h(the)h
(aircraft)e(and)h(output)f(data)h(for)g(alignment)-150
3630 y(algorithm.)25 b(Therefore,)f(we)i(are)h(looking)d(for)i(a)h
(model)e(of)h(IMU)h(that)f(is)h(highly)f(accurate,)f(well)i(performed)c
(as)k(well)g(as)g(with)g(af)n(fordable)-150 3730 y(e)o(xpense)g(for)h
(the)h(demonstration)d(of)i(this)h(project,)e(follo)n(wing)g(chart)h
(compare)f(these)i(three)f(model)f(with)i(a)g(list)h(of)e(comparison.)
-150 3829 y
SDict begin H.S end
 -150 3829 a -150 3829 a
SDict begin 12 H.A end
 -150 3829 a -150
3829 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.2.2) cvn /DEST
pdfmark end
 -150 3829 a -67 3929 a Fk(2\))41 b(Options:)35
b Fj(W)-7 b(e)24 b(are)e(looking)f(at)i(three)e(models)h(that)h(are)f
(considered)f(to)h(be)h(the)f(most)g(lik)o(ely)h(options)e(for)h
(representing)e(MEMS)j(IR)m(U.)-150 4028 y Fk(9DoF)k(Sensor)g(Stic)n(k)
i Fj([)p 0 1 0 TeXcolorrgb 543 4028 a
SDict begin H.S end
 543 4028 a 0 1 0
TeXcolorrgb Fj(4)p 0 1 0 TeXcolorrgb 584 3972 a
SDict begin H.R end
 584 3972
a 584 4028 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (cite.sensorStick) cvn H.B /ANN pdfmark end
 584 4028 a 0 TeXcolorgray Fj(],)e Fk(MPU-9250)f(IMU)31
b Fj([)p 0 1 0 TeXcolorrgb 1278 4029 a
SDict begin H.S end
 1278 4029 a 0 1 0
TeXcolorrgb -1 x Fj(5)p 0 1 0 TeXcolorrgb 1319 3972 a
SDict begin H.R end

1319 3972 a 1319 4028 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (cite.mpu9250) cvn H.B /ANN pdfmark end
 1319 4028 a 0 TeXcolorgray Fj(])d(and)f
Fk(9DoF)f(IMU)31 b Fj([)p 0 1 0 TeXcolorrgb 1960 4029
a
SDict begin H.S end
 1960 4029 a 0 1 0 TeXcolorrgb -1 x Fj(6)p 0 1 0 TeXcolorrgb
2002 3972 a
SDict begin H.R end
 2002 3972 a 2002 4028 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (cite.9dof) cvn H.B /ANN pdfmark end
 2002 4028 a 0 TeXcolorgray
Fj(])c(are)h(three)e(models)h(of)g(IMU.)g(All)h(these)g(three)f(IMUs)h
(are)f(with)g(9)-150 4128 y(de)o(grees)g(of)h(freedom/9)e(axis)j
(sensor)m(,)e(that)i(indicates)f(all)h(of)f(these)g(IMUs)h(contain)e
(MEMS)i(sensors)f(of)g(accelerometer)m(,)e(gyroscope)g(and)-150
4228 y(magnetometer\(compass\),)i(which)k(is)i(a)f(basic)g(requirement)
e(for)h(choosing)f(the)h(IMU)h(in)g(this)g(project.)f(F)o(ollo)n(wing)f
(are)i(some)f(speci\002c)-150 4327 y(criteria)c(that)h(we)g(look)e(and)
h(compare)f(for)h(choosing)f(the)h(most)h(proper)e(MEMS)h(IR)m(U.)-150
4427 y
SDict begin H.S end
 -150 4427 a -150 4427 a
SDict begin 12 H.A end
 -150 4427 a -150 4427
a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.2.3) cvn /DEST
pdfmark end
 -150 4427 a -67 4527 a Fk(3\))41 b(Criteria:)-150 4558
y
SDict begin H.S end
 -150 4558 a -150 4558 a
SDict begin 12 H.A end
 -150 4558 a -150 4558 a
SDict begin [/View [/XYZ H.V]/Dest (Item.7) cvn /DEST pdfmark end
 -150
4558 a 0 TeXcolorgray -94 4643 a Fj(1\))p 0 TeXcolorgray
40 w Fg(Operating)34 b(v)o(oltage)g(range)p Fj(,)d(this)i(is)g
(determines)f(based)g(on)g(the)g(model)g(we)g(use)h(for)f(the)g
(microcontroller)m(,)d(which)j(an)g(operable)16 4742
y(v)n(oltage)c(range)f(of)i(an)f(IMU)g(should)g(be)g(less)i(than)e(the)
g(output)g(v)n(oltage)f(of)i(its)g(microcontroller)-5
b(.)-150 4760 y
SDict begin H.S end
 -150 4760 a -150 4760 a
SDict begin 12 H.A end
 -150 4760 a -150
4760 a
SDict begin [/View [/XYZ H.V]/Dest (Item.8) cvn /DEST pdfmark end
 -150 4760 a 0 TeXcolorgray -94 4842 a Fj(2\))p
0 TeXcolorgray 40 w Fg(Support)33 b(I2C)g(pr)o(otocol)p
Fj(,)28 b(this)j(is)h(signi\002cant)e(since)g(I2C)h(could)e(be)h(the)h
(only)e(protocol)g(for)h(an)g(IMU)g(to)h(communicate)d(with)j(the)16
4942 y(microcontroller)-5 b(.)-150 4943 y
SDict begin H.S end
 -150 4943 a
-150 4943 a
SDict begin 12 H.A end
 -150 4943 a -150 4943 a
SDict begin [/View [/XYZ H.V]/Dest (Item.9) cvn /DEST pdfmark end
 -150 4943 a 0 TeXcolorgray
-94 5041 a Fj(3\))p 0 TeXcolorgray 40 w Fg(Acceler)o(ometer)29
b(output)h(r)o(esolution)p Fj(,)e(this)h(will)g(determine)e(the)i
(accurac)o(y)d(of)j(the)f(acceleration)f(data)i(output.)-150
5059 y
SDict begin H.S end
 -150 5059 a -150 5059 a
SDict begin 12 H.A end
 -150 5059 a -150 5059
a
SDict begin [/View [/XYZ H.V]/Dest (Item.10) cvn /DEST pdfmark end
 -150 5059 a 0 TeXcolorgray -94 5141 a Fj(4\))p 0 TeXcolorgray
40 w Fg(Gyr)o(oscope)g(output)h(r)o(esolution)p Fj(,)e(this)h(will)g
(determine)e(the)i(accurac)o(y)d(of)j(the)f(angular)f(v)o(elocity)g
(data)i(output.)-150 5159 y
SDict begin H.S end
 -150 5159 a -150 5159 a
SDict begin 12 H.A end
 -150
5159 a -150 5159 a
SDict begin [/View [/XYZ H.V]/Dest (Item.11) cvn /DEST pdfmark end
 -150 5159 a 0 TeXcolorgray -94 5241
a Fj(5\))p 0 TeXcolorgray 40 w Fg(Magnetometer)g(output)i(r)o
(esolution)p Fj(,)c(this)i(will)g(determine)e(the)i(accurac)o(y)e(of)h
(the)g(orientation)f(data)i(output.)-150 5259 y
SDict begin H.S end
 -150
5259 a -150 5259 a
SDict begin 12 H.A end
 -150 5259 a -150 5259 a
SDict begin [/View [/XYZ H.V]/Dest (Item.12) cvn /DEST pdfmark end
 -150 5259
a 0 TeXcolorgray -94 5340 a Fj(6\))p 0 TeXcolorgray 40
w Fg(Cost)p Fj(,)f(this)h(is)h(relati)n(v)o(ely)d(important)g(b)n(ut)h
(as)i(long)d(as)j(the)e(price)g(is)h(within)g(the)f(e)o(xpected)f(b)n
(udget,)g(that)i(will)g(be)g(acceptable.)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 4 5
TeXDict begin 4 4 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-158 -435 a
SDict begin H.S end
 -158 -435 a -158 -435 a
SDict begin H.R end
 -158 -435 a -158
-435 a
SDict begin [/View [/XYZ H.V]/Dest (page.4) cvn /DEST pdfmark end
 -158 -435 a 0 TeXcolorgray 0 TeXcolorgray 4021
-327 a Ff(4)p 0 TeXcolorgray -150 -150 a
SDict begin H.S end
 -150 -150 a
-150 -150 a
SDict begin 12 H.A end
 -150 -150 a -150 -150 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.2.4) cvn /DEST
pdfmark end
 -150 -150 a -67 -50
a Fk(4\))41 b(T)-8 b(able)28 b(of)h(Detailed)f(Comparison:)p
0 TeXcolorgray 0 TeXcolorgray -150 202 4263 4 v -150
401 4 200 v 248 322 a Fg(Model)p 869 401 V 1242 272 a
Fk(9DoF)1132 371 y(Sensor)g(Stic)n(k)p 1805 401 V 2189
272 a(MPU-9250)2298 371 y(IMU)p 2943 401 V 3336 322 a(9DoF)g(IMU)p
4109 401 V -150 405 4263 4 v -150 703 4 299 v 232 524
a Fg(MEMS)225 624 y(Sensors)p 869 703 V 922 474 a Fj(Accel.:)h(ADXL345)
922 574 y(Gyro:)f(ITG-3200)922 674 y(Magn.:)g(HMC5883L)p
1805 703 V 2189 575 a(MPU-9250)p 2943 703 V 783 w(LSM9DS1)p
4109 703 V -150 707 4263 4 v -150 806 4 100 v -97 777
a Fg(Operating)i(V)-8 b(oltage)29 b(Range)p 869 806 V
355 w Fj(2.1)57 b(3.6V)p 1805 806 V 710 w(2.4)g(3.6V)p
2943 806 V 825 w(1.9)g(3.6V)p 4109 806 V -150 810 4263
4 v -150 909 4 100 v 130 879 a Fg(Output)30 b(T)-6 b(ype)p
869 909 V 583 w Fj(Unkno)n(wn)p 1805 909 V 654 w(16)28
b(bits)h(ADC)p 2943 909 V 716 w(16)f(bits)h(ADC)p 4109
909 V -150 913 4263 4 v -150 1012 4 100 v -31 982 a Fg(Support)i(I2C)g
(Pr)o(otocol)p 869 1012 V 320 w Fj(2g,)d(4g,)g(8g,)g(16g)p
1805 1012 V 512 w(2g,)g(4g,)g(8g,)g(16g)p 2943 1012 V
627 w(2g,)g(4g,)g(8g,)g(16g)p 4109 1012 V -150 1016 4263
4 v -150 1315 4 299 v 28 1085 a Fg(Gyr)o(oscope)h(Output)172
1185 y(Resolution)29 1285 y(\(Angular)h(V)-8 b(elocity\))p
869 1315 V 1272 1135 a Fj(Full)968 1235 y(scale)29 b(=)g(2000)e(de)o
(gree/s)p 1805 1315 V 1858 1186 a(250,)h(500,)f(1000,)g(2000)g(de)o
(gree/s)p 2943 1315 V 115 w(250,)h(500,)f(1000,)g(2000)g(de)o(gree/s)p
4109 1315 V -150 1318 4263 4 v -150 1617 4 299 v -44
1388 a Fg(Magnetometer)i(Output)172 1487 y(Resolution)237
1587 y(\(gauss\))p 869 1617 V 1177 1488 a Fj(8)g(gausses)p
1805 1617 V 691 w(48)f(gausses)p 2943 1617 V 628 w(4,)h(8,)f(12,)g(16)g
(gausses)p 4109 1617 V -150 1620 4263 4 v -150 1720 4
100 v 290 1690 a Fg(Size)p 869 1720 V 581 w Fj(22.22)f(X)i(18.48)e(mm)p
1805 1720 V 548 w(Unkno)n(wn)p 2943 1720 V 624 w(14.3)h(mm)g(X)h(20.5)e
(mm)p 4109 1720 V -150 1723 4263 4 v -150 1922 4 200
v 281 1793 a Fg(Cost)133 1892 y(\(U)l(.S.)k(Dollar\))p
869 1922 V 1225 1843 a Fj($49.95)p 1805 1922 V 806 w($14.95)p
2943 1922 V 921 w($24.95)p 4109 1922 V -150 1926 4263
4 v -150 2025 4 100 v 170 1995 a Fg(Adv)o(antage)p 869
2025 V 368 w Fj(Higher)d(output)f(resolution)p 1805 2025
V 351 w(Least)i(e)o(xpensi)n(v)o(e)p 2943 2025 V 349
w(W)m(ide)g(spectrum)e(of)i(sensor)f(range)p 4109 2025
V -150 2028 4263 4 v -150 2128 4 100 v 202 2098 a Fg(Shortage)p
869 2128 V 586 w Fj(High)g(e)o(xpense)p 1805 2128 V 455
w(W)-7 b(eak)o(er)29 b(performance)p 2943 2128 V 500
w(A)g(little)g(e)o(xpensi)n(v)o(e)p 4109 2128 V -150
2131 4263 4 v -150 2281 a
SDict begin H.S end
 -150 2281 a -150 2281 a
SDict begin 12 H.A end
 -150
2281 a -150 2281 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.2.5) cvn /DEST
pdfmark end
 -150 2281 a -67 2381 a Fk(5\))41 b(Over)o(all)g
(Discussion:)54 b Fj(In)41 b(o)o(v)o(erall,)e(these)i(three)g(models)f
(ha)n(v)o(e)h(similar)g(performance)d(and)j(speci\002cation)f(of)g(out)
h(resolution,)-150 2480 y(ho)n(we)n(v)o(er)m(,)31 b Fk(9DoF)j(Sensor)f
(Stic)n(k)j Fj(will)e(be)g(the)g(least)h(preferred)c(option)i(since)h
(it)h(has)f(the)g(highest)f(e)o(xpense)g(and)g(it)i(lacks)f(of)g
(resources)-150 2580 y(of)h(its)h(datasheet)f(the)g(rele)n(v)n(ant)f
(guidance.)f(By)j(comparing)d(between)h Fk(MPU-9250)f(IMU)40
b Fj(and)34 b Fk(9DoF)h(IMU)p Fj(,)g(the)o(y)f(both)h(ha)n(v)o(e)f
(speci\002c)-150 2679 y(datasheet)29 b(that)g(can)g(be)f(found,)g(and)g
(their)h(prices)g(are)g(both)f(within)h(the)g(acceptable)f(range,)f(so)
j(by)e(looking)g(at)h(more)g(speci\002c)g(detail)g(of)-150
2779 y(their)24 b(hardw)o(are)f(performance,)e Fk(9DoF)j(IMU)k
Fj(has)d(wider)f(sensor)g(range)f(to)h(choose)g(for)g(its)h(output)e
(resolution,)g(which)h(is)h(more)e(functional)-150 2879
y(than)j(the)g Fk(MPU-9250)f(IMU)p Fj(.)h(Therefore,)e(the)j
Fk(9DoF)e(IMU)31 b Fj(model)25 b(w)o(ould)h(be)g(the)h(\002rst)g
(preference)d(for)i(selecting)g(the)g(represent)g(MEMS)-150
2978 y(IMU.)-150 3110 y
SDict begin H.S end
 -150 3110 a -150 3110 a
SDict begin 12 H.A end
 -150
3110 a -150 3110 a
SDict begin [/View [/XYZ H.V]/Dest (subsection.2.3) cvn /DEST pdfmark
end
 -150 3110 a 99 x Fk(C.)42 b(Har)m(dwar)m(e)28
b(selection)g(of)h(Communication)d(Pr)l(otocol)i(T)-6
b(ype)-150 3252 y
SDict begin H.S end
 -150 3252 a -150 3252 a
SDict begin 12 H.A end
 -150 3252 a
-150 3252 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.3.1) cvn /DEST
pdfmark end
 -150 3252 a -67 3334 a Fk(1\))41 b(Conte)n(xt:)f
Fj(There)25 b(are)h(man)o(y)f(dif)n(ferent)g(types)h(of)f(protocol)g
(for)h(hardw)o(are)e(component)g(de)n(vices)i(communicating)d(with)j
(each)g(other)-5 b(.)-150 3434 y(W)e(e)30 b(chose)e(three)g(dif)n
(ferent)f(protocol)f(types)j(that)f(are)h(the)f(most)h(common)d(types)j
(to)f(use,)h(as)g(well)g(as)g(doable)f(in)g(our)g(hardw)o(are)f
(system.)-150 3534 y
SDict begin H.S end
 -150 3534 a -150 3534 a
SDict begin 12 H.A end
 -150 3534
a -150 3534 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.3.2) cvn /DEST
pdfmark end
 -150 3534 a -67 3633 a Fk(2\))41 b(Options:)50
b(I2C)38 b(\(Inter)n(-Inte)m(gr)o(ated)c(Cir)m(cuit\))p
Fj(,)k Fk(SPI)f(\(Serial)g(P)-7 b(eripher)o(al)36 b(Interface\))h
Fj(and)g Fk(U)m(ART)g(\(Univer)o(sal)g(Async)o(hr)l(onous)f(Re-)-150
3733 y(ceiver/T)-5 b(r)o(ansmitter\))32 b Fj(are)f(three)g(possible)g
(communication)d(protocol)i(types)h(for)f(our)h(project,)f(each)h(of)g
(them)g(has)g(its)h(o)n(wn)f(adv)n(antages)-150 3833
y(and)d(lack.)g(In)g(re)o(gards)f(to)h(this)h(project,)f(we)h(will)g
(consider)e(the)i(follo)n(wing)d(criteria)j(for)e(choosing)g(the)i
(most)f(appropriate)e(protocol)h(type)-150 3932 y(for)h(our)g(hardw)o
(are)f(de)n(vices)h(communication)d([)p 0 1 0 TeXcolorrgb
1302 3933 a
SDict begin H.S end
 1302 3933 a 0 1 0 TeXcolorrgb -1 x Fj(7)p
0 1 0 TeXcolorrgb 1343 3877 a
SDict begin H.R end
 1343 3877 a 1343 3932 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (cite.protocol1) cvn H.B /ANN pdfmark end

1343 3932 a 0 TeXcolorgray Fj(].)-150 4032 y
SDict begin H.S end
 -150 4032
a -150 4032 a
SDict begin 12 H.A end
 -150 4032 a -150 4032 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.3.3) cvn /DEST
pdfmark end
 -150 4032 a -67
4131 a Fk(3\))41 b(Criteria:)-150 4163 y
SDict begin H.S end
 -150 4163 a
-150 4163 a
SDict begin 12 H.A end
 -150 4163 a -150 4163 a
SDict begin [/View [/XYZ H.V]/Dest (Item.13) cvn /DEST pdfmark end
 -150 4163 a 0 TeXcolorgray
-94 4248 a Fj(1\))p 0 TeXcolorgray 40 w Fg(High)31 b(T)-6
b(ransmission)32 b(Speed)p Fj(,)d(this)g(is)h(one)e(of)g(the)h(most)f
(critical)h(criteria)g(to)f(be)h(consider)m(,)e(since)i(our)f(hardw)o
(are)f(system)i(requires)16 4347 y(multi-de)n(vices)e(to)i(process)f
(near)g(synchronously)-5 b(,)24 b(a)29 b(f)o(ast)g(communication)d
(speed)i(between)g(hardw)o(are)f(de)n(vices)h(is)h(necessary)-5
b(.)-150 4365 y
SDict begin H.S end
 -150 4365 a -150 4365 a
SDict begin 12 H.A end
 -150 4365 a -150
4365 a
SDict begin [/View [/XYZ H.V]/Dest (Item.14) cvn /DEST pdfmark end
 -150 4365 a 0 TeXcolorgray -94 4447 a Fj(2\))p
0 TeXcolorgray 40 w Fg(T)f(ransmission)26 b(Distance)p
Fj(,)d(this)h(criterion)f(is)h(less)h(important)d(within)h(this)h
(system)g(since)g(we)g(consider)e(all)i(of)f(the)h(hardw)o(are)e(de)n
(vices)16 4547 y(will)35 b(be)f(implemented)f(as)i(a)f(whole)g(de)n
(vice,)f(that)h(means)g(transmission)g(distance)g(of)g(the)g(protocol)f
(type)g(w)o(ont)h(be)h(a)f(necessary)16 4646 y(criterion.)-150
4647 y
SDict begin H.S end
 -150 4647 a -150 4647 a
SDict begin 12 H.A end
 -150 4647 a -150 4647
a
SDict begin [/View [/XYZ H.V]/Dest (Item.15) cvn /DEST pdfmark end
 -150 4647 a 0 TeXcolorgray -94 4746 a Fj(3\))p 0 TeXcolorgray
40 w Fg(Multi-De)o(vices)j(Support)p Fj(,)c(since)h(we)g(may)g(use)g
(more)f(than)g(1)h(IMU)g(to)g(w)o(ork)f(together)f(in)i(order)f(to)h
(gathering)d(more)i(accurate)16 4845 y(data,)28 b(the)h(protocol)d(we)j
(choose)f(to)h(use)f(must)h(support)e(multi-de)n(vices)g
(communication.)-150 4863 y
SDict begin H.S end
 -150 4863 a -150 4863 a
SDict begin 12 H.A end
 -150
4863 a -150 4863 a
SDict begin [/View [/XYZ H.V]/Dest (Item.16) cvn /DEST pdfmark end
 -150 4863 a 0 TeXcolorgray -94 4945
a Fj(4\))p 0 TeXcolorgray 40 w Fg(Number)34 b(of)g(wir)o(e)f(needed)h
(to)g(connect)f(with)h(micr)o(ocontr)o(oller)p Fj(,)28
b(this)k(criterion)e(is)i(less)g(important)e(b)n(ut)h(less)h(number)d
(of)i(wires)16 5045 y(between)26 b(hardw)o(are)g(de)n(vice)g(pro)o
(vides)f(higher)h(portability)g(of)h(the)g(system,)g(and)f(it)i(also)f
(reduces)f(the)i(dif)n(\002culties)e(on)h(the)g(hardw)o(are)16
5144 y(set-up)h(process.)-150 5261 y
SDict begin H.S end
 -150 5261 a -150
5261 a
SDict begin 12 H.A end
 -150 5261 a -150 5261 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.3.4) cvn /DEST
pdfmark end
 -150 5261 a -67 5360 a
Fk(4\))41 b(T)-8 b(able)28 b(of)h(Detailed)f(Comparison:)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 5 6
TeXDict begin 5 5 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-158 -435 a
SDict begin H.S end
 -158 -435 a -158 -435 a
SDict begin H.R end
 -158 -435 a -158
-435 a
SDict begin [/View [/XYZ H.V]/Dest (page.5) cvn /DEST pdfmark end
 -158 -435 a 0 TeXcolorgray 0 TeXcolorgray 4021
-327 a Ff(5)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
49 -147 3803 4 v 49 53 4 200 v 385 -77 a Fg(Pr)o(otocol)447
23 y(T)-6 b(ype)p 1017 53 V 1357 -26 a Fk(I2C/IIC)p 1955
53 V 768 w(SPI)p 2934 53 V 782 w(U)m(ART)p 3848 53 V
49 56 3803 4 v 49 255 4 200 v 176 126 a Fg(T)g(ransmission)32
b(Speed)102 225 y(\(Standard)e(Speed)h(Mode\))p 1017
255 V 1311 176 a Fb(>)p Fj(1)e(Mbit/s)p 1955 255 V 585
w Fa(\030)p Fj(10)f(Mbit/s)p 2934 255 V 362 w(0.3)g(Kbit/s)h
Fa(\030)g Fj(1)f(M)h(bit/s)p 3848 255 V 49 258 3803 4
v 49 557 4 299 v 297 378 a Fg(T)-6 b(ransmission)382
478 y(Distance)p 1017 557 V 1255 328 a Fj(Short)28 b(\(W)m(ithin)1201
428 y(inte)o(grated)f(circuit)1273 527 y(components\))p
1955 557 V 2214 328 a(Short)h(\(W)m(ithin)2160 428 y(inte)o(grated)f
(circuit)2232 527 y(components\))p 2934 557 V 3127 429
a(Long)g(\(wireless\))p 3848 557 V 49 561 3803 4 v 49
760 4 200 v 288 630 a Fg(Multi-De)o(vices)389 730 y(Support)p
1017 760 V 1427 681 a Fj(Y)-8 b(es)p 1955 760 V 838 w(Y)g(es)p
2934 760 V 825 w(Y)g(es)p 3848 760 V 49 763 3803 4 v
49 962 4 200 v 337 833 a Fg(Number)31 b(of)299 933 y(W)o(ir)o(e)f
(Needed)p 1017 962 V 1467 884 a Fj(2)p 1955 962 V 499
w(3)f(+)g(1)f(for)g(each)g(signal)h(line)p 2934 962 V
427 w(none)p 3848 962 V 49 966 3803 4 v 49 1165 4 200
v 343 1086 a Fg(Adv)o(antage)p 1017 1165 V 441 w Fj(Easy)f(to)h
(implement)p 1955 1165 V 235 w(F)o(ast)g(transmission)f(speed)p
2934 1165 V 3050 1036 a(can)g(be)h(implemented)2987 1135
y(in)g(wireless)g(en)m(vironment)p 3848 1165 V 49 1168
3803 4 v 49 1368 4 200 v 375 1289 a Fg(Shortage)p 1017
1368 V 375 w Fj(Slo)n(w)f(transmission)g(speed)p 1955
1368 V 2215 1238 a(More)g(number)2175 1338 y(of)g(wires)h(needed)p
2934 1368 V 3071 1289 a(Hard)f(to)g(implement)p 3848
1368 V 49 1371 3803 4 v -150 1520 a
SDict begin H.S end
 -150 1520 a -150
1520 a
SDict begin 12 H.A end
 -150 1520 a -150 1520 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.3.5) cvn /DEST
pdfmark end
 -150 1520 a -67 1620 a
Fk(5\))41 b(Over)o(all)h(Discussion:)55 b Fj(By)42 b(comparing)e(the)i
(abo)o(v)o(e)e(criteria,)h(we)h(\002rst)h(may)f(eliminate)f(U)m(AR)-5
b(T)42 b(because)f(it)i(has)f(the)g(slo)n(west)-150 1720
y(transmission)36 b(speed)g(within)h(these)f(three)g(types,)h(so)g(its)
g(not)f(e)o(xpected)f(for)h(using)g(in)h(our)f(system.)h(SPI)g(has)g
(signi\002cant)f(f)o(ast)h(speed)-150 1819 y(ho)n(we)n(v)o(er)28
b(since)i(we)g(will)h(use)f(multiple)f(IMUs)i(connecting)c(together)i
(in)h(the)g(system,)g(SPI)g(doesnt)g(pro)o(vide)d(a)k(good)d
(portability)h(that)h(it)-150 1919 y(requires)23 b(1)i(more)e(physical)
g(wire)i(for)f(each)g(additional)f(de)n(vices.)g(Therefore,)f(I2C)i(is)
i(the)e(most)g(preferable)f(option,)g(it)i(has)f(relati)n(v)o(ely)f
(high)-150 2019 y(transmission)28 b(speed,)g(and)g(its)h(easy)g(to)f
(implemented)f(for)h(a)h(complicated)e(system.)-150 2167
y
SDict begin H.S end
 -150 2167 a -150 2167 a
SDict begin 12 H.A end
 -150 2167 a -150 2167 a
SDict begin [/View [/XYZ H.V]/Dest (subsection.2.4) cvn /DEST pdfmark
end
 -150
2167 a 82 x Fk(D.)41 b(User)30 b(Interface)d(T)-8 b(oolkit)-150
2292 y
SDict begin H.S end
 -150 2292 a -150 2292 a
SDict begin 12 H.A end
 -150 2292 a -150 2292
a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.4.1) cvn /DEST
pdfmark end
 -150 2292 a -67 2375 a Fk(1\))41 b(Conte)n(xt:)50 b
Fj(Graphical)35 b(user)i(interf)o(ace)f(will)h(be)f(a)h(crucial)f(of)h
(for)f(our)g(project)f(presentation)g(and)h(demonstration)e(system.)j
(The)-150 2474 y(algorithm)28 b(from)h(our)g(project)h(will)g(output)f
(a)h(ra)o(w)g(alignment)f(data)h(and)f(it)i(will)f(be)g(hard)f(to)h
(understand)e(the)i(output)f(without)g(the)h(help)-150
2574 y(of)d(graphical)f(user)h(interf)o(ace.)f(The)h(graphical)f(user)h
(interf)o(ace)g(will)h(put)f(conte)o(xts)f(to)i(the)f(data)g(and)g
(presents)g(the)h(correct)e(symbology)f(of)-150 2674
y(the)i(alignment)f(data)i(output.)e(User)h(interf)o(ace)g(toolkits)g
(is)h(needed)f(to)g(de)n(v)o(elop)f(our)g(project)h(user)g(interf)o
(ace.)f(W)-7 b(e)29 b(are)e(looking)f(for)h(a)h(user)-150
2773 y(interf)o(ace)g(toolkit)h(that)h(will)g(not)f(add)f(more)h
(comple)o(xity)e(to)i(the)h(project,)e(ha)n(v)o(e)h(minimal)f(impact)h
(on)g(the)g(de)n(v)o(elopment)e(process)i(of)g(the)-150
2873 y(project,)e(and)h(ha)n(v)o(e)g(a)h(useful)f(library)f(for)h(user)
h(interf)o(ace)e(functionality)-5 b(.)-150 2972 y
SDict begin H.S end
 -150
2972 a -150 2972 a
SDict begin 12 H.A end
 -150 2972 a -150 2972 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.4.2) cvn /DEST
pdfmark end
 -150 2972
a -67 3072 a Fk(2\))41 b(Options:)50 b Fj(There)36 b(are)h(three)f
(options)g(for)h(the)g(user)g(interf)o(ace)f(toolkit.)g(The)h(\002rst)g
(option)f(is)i(the)f(visual)g(studio)g(user)f(interf)o(ace)-150
3172 y(toolkit.)25 b(V)-5 b(isual)27 b(studio)f(user)g(interf)o(ace)f
(toolkit)h(is)h(a)g(b)n(uilt-in)e(toolkit)h(in)g(visual)h(studio)e
(that)i(used)f(for)f(programmer)f(to)i(create)g(a)h(windo)n(w)-150
3271 y(application)c(user)h(interf)o(ace.)g(The)g(second)g(option)f(is)
j(GTK+)e(toolkit.)g(GTK+)g(toolkit)g(is)i(an)e(open)g(source)g
(cross-platform)e(widget)i(toolkit)-150 3371 y(for)33
b(creating)g(graphical)g(user)h(interf)o(aces)f([)p 0 1 0
TeXcolorrgb 1184 3372 a
SDict begin H.S end
 1184 3372 a 0 1 0 TeXcolorrgb
-1 x Fj(8)p 0 1 0 TeXcolorrgb 1225 3314 a
SDict begin H.R end
 1225 3314 a
1225 3371 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (cite.gtk) cvn H.B /ANN pdfmark end
 1225 3371 a 0 TeXcolorgray Fj(].)h(The)g(last)h(option)e
(is)h(the)g(IUP)h(portable)d(user)i(interf)o(ace.)f(IUP)h(is)h(a)g
(computer)d(softw)o(are)-150 3471 y(de)n(v)o(elopment)26
b(kit)i(that)h(pro)o(vides)e(a)i(portable,)d(scriptable)i(toolkit)g(to)
h(b)n(uild)f(a)h(graphical)e(user)h(interf)o(ace)g([)p
0 1 0 TeXcolorrgb 3084 3473 a
SDict begin H.S end
 3084 3473 a 0 1 0 TeXcolorrgb
-2 x Fj(9)p 0 1 0 TeXcolorrgb 3125 3414 a
SDict begin H.R end
 3125 3414 a
3125 3471 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (cite.iup) cvn H.B /ANN pdfmark end
 3125 3471 a 0 TeXcolorgray Fj(].)-150 3570
y
SDict begin H.S end
 -150 3570 a -150 3570 a
SDict begin 12 H.A end
 -150 3570 a -150 3570 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.4.3) cvn /DEST
pdfmark end
 -150
3570 a -67 3670 a Fk(3\))41 b(Criteria:)-150 3701 y
SDict begin H.S end
 -150
3701 a -150 3701 a
SDict begin 12 H.A end
 -150 3701 a -150 3701 a
SDict begin [/View [/XYZ H.V]/Dest (Item.17) cvn /DEST pdfmark end
 -150 3701
a 0 TeXcolorgray -94 3786 a Fj(1\))p 0 TeXcolorgray 40
w Fg(Complexity)p Fj(,)35 b(Our)i(clients)g(encouraged)c(us)k(to)g
(spend)f(most)h(our)e(time)i(in)g(de)n(v)o(eloping)d(and)i(re\002ning)f
(the)i(dynamic)e(alignment)16 3886 y(algorithm.)27 b(Ha)n(ving)h(a)g
(less)i(comple)o(x)d(toolkit)h(will)h(gi)n(v)o(e)f(us)g(e)o(xtra)g
(time)h(to)g(w)o(ork)e(on)i(the)f(alignment)f(algorithm.)-150
3904 y
SDict begin H.S end
 -150 3904 a -150 3904 a
SDict begin 12 H.A end
 -150 3904 a -150 3904
a
SDict begin [/View [/XYZ H.V]/Dest (Item.18) cvn /DEST pdfmark end
 -150 3904 a 0 TeXcolorgray -94 3985 a Fj(2\))p 0 TeXcolorgray
40 w Fg(Accessibility)p Fj(,)g(T)-7 b(oolkit)26 b(and)g(library)g(that)
g(is)i(easily)f(accessible)g(is)g(desired)f(in)h(this)g(project.)f(A)h
(free)f(and)h(easy)f(to)h(access)h(toolkit)e(is)16 4085
y(desired.)-150 4086 y
SDict begin H.S end
 -150 4086 a -150 4086 a
SDict begin 12 H.A end
 -150 4086
a -150 4086 a
SDict begin [/View [/XYZ H.V]/Dest (Item.19) cvn /DEST pdfmark end
 -150 4086 a 0 TeXcolorgray -94 4185 a Fj(3\))p
0 TeXcolorgray 40 w Fg(Adoption)k(Rate)p Fj(,)e(T)-7
b(oolkit)27 b(that)i(well)g(adapted)e(in)h(the)h(programmer)c
(community)h(will)j(ha)n(v)o(e)f(more)f(resources)h(for)f(deb)n(ugging)
f(and)16 4284 y(re\002ning)h(our)h(user)g(interf)o(ace.)-150
4302 y
SDict begin H.S end
 -150 4302 a -150 4302 a
SDict begin 12 H.A end
 -150 4302 a -150 4302
a
SDict begin [/View [/XYZ H.V]/Dest (Item.20) cvn /DEST pdfmark end
 -150 4302 a 0 TeXcolorgray -94 4384 a Fj(4\))p 0 TeXcolorgray
40 w Fg(T)o(ime)34 b(Commitment)p Fj(,)c(Using)g(a)h(user)g(interf)o
(ace)f(toolkit)g(that)h(will)g(require)e(huge)h(learning)f(curv)o(e)g
(and)h(time)h(to)g(learn)f(it)i(will)f(not)16 4483 y(add)d(much)g
(bene\002ts)g(to)h(the)f(o)o(v)o(erall)f(project.)-150
4501 y
SDict begin H.S end
 -150 4501 a -150 4501 a
SDict begin 12 H.A end
 -150 4501 a -150 4501
a
SDict begin [/View [/XYZ H.V]/Dest (Item.21) cvn /DEST pdfmark end
 -150 4501 a 0 TeXcolorgray -94 4583 a Fj(5\))p 0 TeXcolorgray
40 w Fg(Library)p Fj(,)h(More)g(po)n(werful)f(library)g(will)i(ha)n(v)o
(e)f(more)g(tool)g(to)h(further)e(re\002ne)h(our)g(graphical)f(user)h
(interf)o(ace.)-150 4601 y
SDict begin H.S end
 -150 4601 a -150 4601 a
SDict begin 12 H.A end
 -150
4601 a -150 4601 a
SDict begin [/View [/XYZ H.V]/Dest (Item.22) cvn /DEST pdfmark end
 -150 4601 a 0 TeXcolorgray -94 4683
a Fj(6\))p 0 TeXcolorgray 40 w Fg(Ov)o(erall)i(cost)g(and)h(bene\002ts)
p Fj(,)e(K)n(e)o(y)f(strengths)g(and)g(weaknesses)g(of)h(using)f(a)g
(particular)g(user)g(interf)o(ace)g(toolkit.)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 6 7
TeXDict begin 6 6 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-158 -435 a
SDict begin H.S end
 -158 -435 a -158 -435 a
SDict begin H.R end
 -158 -435 a -158
-435 a
SDict begin [/View [/XYZ H.V]/Dest (page.6) cvn /DEST pdfmark end
 -158 -435 a 0 TeXcolorgray 0 TeXcolorgray 4021
-327 a Ff(6)p 0 TeXcolorgray -150 -150 a
SDict begin H.S end
 -150 -150 a
-150 -150 a
SDict begin 12 H.A end
 -150 -150 a -150 -150 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.4.4) cvn /DEST
pdfmark end
 -150 -150 a -67 -50
a Fk(4\))41 b(T)-8 b(able)28 b(of)h(Detailed)f(Comparison:)p
0 TeXcolorgray 0 TeXcolorgray -150 202 4308 4 v -150
302 4 100 v 111 272 a Fg(T)-8 b(oolkit)31 b(Name)p 857
302 V 440 w(V)m(isual)g(Studio)g(T)-8 b(oolkit)p 1988
302 V 604 w(GTK+)p 3065 302 V 896 w(IUP)p 4155 302 V
-150 305 4308 4 v -150 405 4 100 v 150 375 a(Complexity)p
857 405 V 616 w Fj(Least)28 b(comple)o(x)p 1988 405 V
622 w(Less)i(comple)o(x)p 3065 405 V 605 w(Most)f(comple)o(x)p
4155 405 V -150 408 4308 4 v -150 607 4 200 v 134 528
a Fg(Accessibility)p 857 607 V 944 478 a Fj(Accessible)g(for)e(free.)h
(Already)1014 577 y(ha)n(v)o(e)g(it)h(in)f(our)g(computer)-5
b(.)p 1988 607 V 2078 528 a(Accessible)28 b(for)g(free)g(online.)p
3065 607 V 181 w(Accessible)h(for)f(free)g(online.)p
4155 607 V -150 610 4308 4 v -150 810 4 200 v 91 731
a Fg(Adoption)i(Rate)p 857 810 V 1198 680 a Fj(Ha)n(v)o(e)e(a)h(lot)g
(of)910 780 y(tutorials)g(and)f(references)f(online)p
1988 810 V 2041 680 a(The)h(most)h(popular)e(toolkit)g(for)2120
780 y(graphical)g(user)i(interf)o(ace.)p 3065 810 V 3394
680 a(Less)g(popular)3283 780 y(than)f(GTK+)h(toolkit.)p
4155 810 V -150 813 4308 4 v -150 913 4 100 v 13 883
a Fg(T)o(ime)i(Commitment)p 857 913 V 583 w Fj(Minimal)p
1988 913 V 820 w(Medium)p 3065 913 V 857 w(High)p 4155
913 V -150 916 4308 4 v -150 1016 4 100 v 215 986 a Fg(Library)p
857 1016 V 674 w Fj(Least)e(po)n(werful)p 1988 1016 V
609 w(Less)g(po)n(werful)p 3065 1016 V 593 w(Most)g(po)n(werful)p
4155 1016 V -150 1019 4308 4 v -150 1417 4 399 v -97
1239 a Fg(Ov)o(erall)h(Cost)g(and)h(Bene\002t)p 857 1417
V 1027 1089 a Fj(Simple)e(and)f(easy)g(to)h(use)972 1188
y(toolkit.)f(The)g(least)i(po)n(werful)1217 1288 y(toolkit,)e(with)1016
1388 y(the)g(least)i(learning)d(curv)o(e.)p 1988 1417
V 2154 1139 a(More)h(po)n(werful)f(option)2217 1238 y(than)h(visual)g
(studio,)2231 1338 y(simpler)g(than)g(IUP)-9 b(.)p 3065
1417 V 3157 1089 a(The)28 b(most)h(po)n(werful)e(option.)3415
1188 y(A)i(complete)3143 1288 y(de)n(v)o(elopment)d(tool.)i(Ha)n(v)o(e)
g(the)3118 1388 y(most)h(cost)g(and)e(learning)h(curv)o(e)p
4155 1417 V -150 1421 4308 4 v -150 1570 a
SDict begin H.S end
 -150 1570
a -150 1570 a
SDict begin 12 H.A end
 -150 1570 a -150 1570 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.4.5) cvn /DEST
pdfmark end
 -150 1570 a -67
1670 a Fk(5\))41 b(Over)o(all)28 b(Discussion:)41 b Fj(By)28
b(comparing)e(criteria)i(visual)g(studio)f(toolkit)g(is)i(the)f
(simplest)h(and)e(ready)g(to)h(use)g(user)g(interf)o(ace)f(toolkit)-150
1769 y(option.)d(All)h(of)g(the)g(user)g(interf)o(ace)f(toolkit)h
(options)f(are)h(easily)g(accessible)h(and)e(a)n(v)n(ailable)h(for)f
(free)h(online.)f(Although,)f(IUP)i(is)h(the)g(most)-150
1869 y(po)n(werful)c(option)h(that)h(we)h(ha)n(v)o(e,)e(it)i(will)g
(also)f(bring)f(a)i(lot)f(of)g(comple)o(xity)e(to)i(our)g(project.)f
(IUP)h(is)h(a)g(de)n(v)o(elopment)c(tool)j(that)g(completely)-150
1969 y(dif)n(ferent)k(than)h(visual)g(studio,)g(using)f(IUP)i(will)g
(change)e(the)i(w)o(ork\003o)n(w)e(of)h(the)g(de)n(v)o(elopment)e
(process.)h(The)i(learning)d(curv)o(e)i(and)f(time)-150
2068 y(commitment)e(to)i(learn)f(IUP)h(is)g(huge)f(and)g(it)h(will)g
(reduce)f(our)f(time)i(to)g(w)o(ork)f(on)g(the)h(algorithm)e(of)h(the)h
(project.)e(Although)g(GTK+)h(has)-150 2168 y(the)h(best)h(o)o(v)o
(erall)e(cost)i(and)e(bene\002ts,)h(there)g(is)i(learning)d(curv)o(e)g
(associated)h(with)g(it)h(and)f(it)h(will)g(also)g(reduce)e(our)h(time)
g(to)h(w)o(ork)f(on)g(the)-150 2268 y(algorithm)f(of)h(the)h(project.)
-67 2367 y(Although)24 b(a)i(user)g(interf)o(ace)e(is)j(a)f(critical)g
(part)f(in)h(our)f(project)g(presentation,)e(this)k(functionality)c(is)
k(not)e(a)h(critical)g(part)f(of)h(the)f(project)-150
2467 y(as)34 b(a)g(whole.)f(Our)g(clients)h(strongly)e(emphasize)h(the)
g(quality)g(of)g(our)g(algorithm.)e(The)j(most)f(important)f(piece)h
(of)g(this)i(project)d(is)j(the)-150 2566 y(dynamic)25
b(alignment)g(algorithm)f(and)i(our)f(clients)i(encouraged)c(us)k(to)f
(spend)f(most)i(our)e(time)h(in)h(de)n(v)o(eloping)c(and)j(re\002ning)f
(the)h(dynamic)-150 2666 y(alignment)34 b(algorithm.)g(Thus,)h(using)h
(the)f(toolkit)g(with)h(the)g(least)h(learning)d(curv)o(e)g(is)j
(encouraged)c(for)i(our)g(project.)g(This)h(mak)o(es)f(us)-150
2766 y(decided)27 b(to)i(use)g(the)f(b)n(uilt-in)g(visual)g(studio)g
(toolkit)g(to)h(create)f(our)g(projects)g(graphical)f(user)h(interf)o
(ace.)-150 2914 y
SDict begin H.S end
 -150 2914 a -150 2914 a
SDict begin 12 H.A end
 -150 2914 a
-150 2914 a
SDict begin [/View [/XYZ H.V]/Dest (subsection.2.5) cvn /DEST pdfmark
end
 -150 2914 a 82 x Fk(E.)41 b(Pr)l(o)o(gr)o(amming)27
b(Langua)o(g)o(e)-150 3039 y
SDict begin H.S end
 -150 3039 a -150 3039 a
SDict begin 12 H.A end

-150 3039 a -150 3039 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.5.1) cvn /DEST
pdfmark end
 -150 3039 a -67 3122 a Fk(1\))41
b(Conte)n(xt:)f Fj(W)-7 b(e)29 b(are)e(looking)e(for)i(a)g(better)g
(programming)d(language)h(that)i(will)h(help)f(us)g(to)h(impro)o(v)o(e)
c(the)k(quality)e(of)h(our)f(project)g(in)-150 3222 y(terms)j(of)g
(comple)o(xity)-5 b(,)26 b(speed,)j(and)f(memory)g(allocation.)f(The)i
(goal)g(of)g(using)f(a)i(particular)d(programming)f(language)h(is)j(to)
g(reduce)e(the)-150 3321 y(comple)o(xity)g(of)i(writing)g(code)f(for)h
(our)f(project,)g(while)h(ha)n(ving)f(an)h(acceptable)f(speed)h(and)g
(spaces)g(memory)-5 b(.)28 b(Programming)f(language)-150
3421 y(that)i(has)f(compatibility)f(with)i(the)f(hardw)o(are)f(is)j
(also)f(desired.)-150 3520 y
SDict begin H.S end
 -150 3520 a -150 3520 a
SDict begin 12 H.A end

-150 3520 a -150 3520 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.5.2) cvn /DEST
pdfmark end
 -150 3520 a -67 3620 a Fk(2\))41
b(Options:)f Fj(Our)27 b(clients)g(gi)n(v)o(e)f(us)i(freedom)d(to)j
(choose)e(the)h(programming)d(language)h(that)i(we)h(w)o(ant)f(to)g
(use)h(to)f(create)g(this)h(project.)-150 3720 y(There)38
b(are)h(three)f(options)g(for)g(programming)d(language)i(that)i(we)g
(can)f(use)h(for)f(this)h(project.)f(The)g(options)g(for)g(the)h
(programming)-150 3819 y(languages)27 b(are)h(C,)i(C++,)f(and)e
(Assembly)i(language.)-150 3919 y
SDict begin H.S end
 -150 3919 a -150 3919
a
SDict begin 12 H.A end
 -150 3919 a -150 3919 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.5.3) cvn /DEST
pdfmark end
 -150 3919 a -67 4019 a Fk(3\))41
b(Criteria:)-150 4050 y
SDict begin H.S end
 -150 4050 a -150 4050 a
SDict begin 12 H.A end
 -150
4050 a -150 4050 a
SDict begin [/View [/XYZ H.V]/Dest (Item.23) cvn /DEST pdfmark end
 -150 4050 a 0 TeXcolorgray -94 4135
a Fj(1\))p 0 TeXcolorgray 40 w Fg(Language)22 b(Orientation)p
Fj(,)f(Language)f(orientation)g(will)j(change)e(the)h(w)o(ay)g(we)h
(implement)e(the)h(algorithm.)e(More)i(f)o(amiliar)f(language)16
4234 y(orientation)27 b(is)i(desired.)-150 4235 y
SDict begin H.S end
 -150
4235 a -150 4235 a
SDict begin 12 H.A end
 -150 4235 a -150 4235 a
SDict begin [/View [/XYZ H.V]/Dest (Item.24) cvn /DEST pdfmark end
 -150 4235
a 0 TeXcolorgray -94 4334 a Fj(2\))p 0 TeXcolorgray 40
w Fg(Language)34 b(Le)o(v)o(el)p Fj(,)e(Lo)n(w-le)n(v)o(el)f
(programming)e(language)h(is)j(a)g(programming)c(language)h(that)i(pro)
o(vides)f(little)i(or)f(no)g(abstraction)16 4434 y(from)27
b(a)i(computer')-5 b(s)27 b(instruction)h(set)h(architecture)e([)p
0 1 0 TeXcolorrgb 1625 4435 a
SDict begin H.S end
 1625 4435 a 0 1 0 TeXcolorrgb
-1 x Fj(10)p 0 1 0 TeXcolorrgb 1708 4377 a
SDict begin H.R end
 1708 4377
a 1708 4434 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (cite.low) cvn H.B /ANN pdfmark end
 1708 4434 a 0 TeXcolorgray Fj(].)-150 4452
y
SDict begin H.S end
 -150 4452 a -150 4452 a
SDict begin 12 H.A end
 -150 4452 a -150 4452 a
SDict begin [/View [/XYZ H.V]/Dest (Item.25) cvn /DEST pdfmark end
 -150
4452 a 0 TeXcolorgray -94 4533 a Fj(3\))p 0 TeXcolorgray
40 w Fg(Complexity)p Fj(,)38 b(This)i(criteria)e(will)i(determine)e
(the)i(dif)n(\002culty)e(and)g(comple)o(xity)g(of)h(implementing)e
(algorithms)h(in)h(a)h(particular)16 4633 y(programming)25
b(language.)i(Less)i(comple)o(x)e(programming)e(language)h(is)k
(desired.)-150 4651 y
SDict begin H.S end
 -150 4651 a -150 4651 a
SDict begin 12 H.A end
 -150 4651
a -150 4651 a
SDict begin [/View [/XYZ H.V]/Dest (Item.26) cvn /DEST pdfmark end
 -150 4651 a 0 TeXcolorgray -94 4733 a Fj(4\))p
0 TeXcolorgray 40 w Fg(Speed)p Fj(,)38 b(This)f(criteria)g(will)g
(determine)f(the)h(running)e(speed)h(of)h(a)h(compiled)d(softw)o(are)i
(written)g(in)g(a)g(particular)f(programming)16 4832
y(language.)27 b(A)i(f)o(ast)g(running)d(softw)o(are)i(is)i(desired)d
(for)h(this)h(project.)-150 4850 y
SDict begin H.S end
 -150 4850 a -150 4850
a
SDict begin 12 H.A end
 -150 4850 a -150 4850 a
SDict begin [/View [/XYZ H.V]/Dest (Item.27) cvn /DEST pdfmark end
 -150 4850 a 0 TeXcolorgray
-94 4932 a Fj(5\))p 0 TeXcolorgray 40 w Fg(Memory)d(Allocation)p
Fj(,)d(.)i(This)g(criteria)g(will)g(determine)e(the)i(memory)e
(allocation)h(required)f(to)h(store)h(a)g(compiled)f(softw)o(are)g
(written)16 5031 y(in)29 b(a)g(particular)e(programing)f(language.)g
(This)j(criteria)f(will)i(also)e(determine)g(the)g(memory)f(usage)h(of)
h(a)g(softw)o(are)f(during)f(running)16 5131 y(time.)h(More)g(ef)n
(\002cient)g(memory)f(allocation)h(is)h(desired)f(for)g(this)h
(project.)-150 5149 y
SDict begin H.S end
 -150 5149 a -150 5149 a
SDict begin 12 H.A end
 -150 5149
a -150 5149 a
SDict begin [/View [/XYZ H.V]/Dest (Item.28) cvn /DEST pdfmark end
 -150 5149 a 0 TeXcolorgray -94 5231 a Fj(6\))p
0 TeXcolorgray 40 w Fg(Hard)o(war)o(e)42 b(Compatibility)p
Fj(,This)c(criteria)i(will)g(determine)e(the)i(communication)d(ef)n
(\002cienc)o(y)h(between)h(the)h(softw)o(are)f(and)h(the)16
5330 y(hardw)o(are.)27 b(More)h(compatible)f(programming)e(language)i
(is)i(desired)f(for)g(this)h(project.)-150 5348 y
SDict begin H.S end
 -150
5348 a -150 5348 a
SDict begin 12 H.A end
 -150 5348 a -150 5348 a
SDict begin [/View [/XYZ H.V]/Dest (Item.29) cvn /DEST pdfmark end
 -150 5348
a 0 TeXcolorgray -94 5430 a Fj(7\))p 0 TeXcolorgray 40
w Fg(Ov)o(erall)h(Cost)g(and)h(Bene\002t)p Fj(,k)o(e)o(y)d(strengths)g
(and)g(weaknesses)g(of)g(writing)g(softw)o(are)g(in)h(a)g(particular)e
(programming)e(language.)p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 7 8
TeXDict begin 7 7 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-158 -435 a
SDict begin H.S end
 -158 -435 a -158 -435 a
SDict begin H.R end
 -158 -435 a -158
-435 a
SDict begin [/View [/XYZ H.V]/Dest (page.7) cvn /DEST pdfmark end
 -158 -435 a 0 TeXcolorgray 0 TeXcolorgray 4021
-327 a Ff(7)p 0 TeXcolorgray -150 -150 a
SDict begin H.S end
 -150 -150 a
-150 -150 a
SDict begin 12 H.A end
 -150 -150 a -150 -150 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.5.4) cvn /DEST
pdfmark end
 -150 -150 a -67 -50
a Fk(4\))41 b(T)-8 b(able)28 b(of)h(Detailed)f(Comparison:)p
0 TeXcolorgray 0 TeXcolorgray 60 101 3781 4 v 60 201
4 100 v 271 171 a Fg(Language)h(Name)p 1067 201 V 658
w(C)p 2026 201 V 782 w(C++)p 2844 201 V 658 w(Assembly)p
3837 201 V 60 204 3781 4 v 60 304 4 100 v 167 274 a(Language)g
(Orientation)p 1067 304 V 322 w Fj(Object)g(oriented)p
2026 304 V 364 w(Object)f(oriented)p 2844 304 V 397 w(No)h(orientation)
p 3837 304 V 60 307 3781 4 v 60 407 4 100 v 278 377 a
Fg(Language)h(Le)o(v)o(el)p 1067 407 V 355 w Fj(High)f(le)n(v)o(el)f
(language)p 2026 407 V 190 w(High)g(le)n(v)o(el)h(Language)p
2844 407 V 214 w(Lo)n(w)f(le)n(v)o(el)h(language)p 3837
407 V 60 410 3781 4 v 60 510 4 100 v 360 480 a Fg(Complexity)p
1067 510 V 636 w Fj(Medium)p 2026 510 V 605 w(Medium)p
2844 510 V 612 w(Comple)o(x)p 3837 510 V 60 513 3781
4 v 60 613 4 100 v 459 583 a Fg(Speed)p 1067 613 V 809
w Fj(F)o(ast)p 2026 613 V 752 w(F)o(ast)p 2844 613 V
722 w(F)o(astest)p 3837 613 V 60 616 3781 4 v 60 715
4 100 v 215 686 a Fg(Memory)i(Allocation)p 1067 715 V
392 w Fj(More)d(ef)n(\002cient)p 2026 715 V 413 w(Most)h(ef)n
(\002cient)p 2844 715 V 434 w(Most)g(ef)n(\002cient)p
3837 715 V 60 719 3781 4 v 60 818 4 100 v 122 789 a Fg(Hard)o(war)o(e)g
(Compatibility)p 1067 818 V 240 w Fj(More)f(Compatible)p
2026 818 V 395 w(Compatible)p 2844 818 V 417 w(Most)g(Compatible)p
3837 818 V 60 822 3781 4 v 60 1320 4 499 v 113 1092 a
Fg(Ov)o(erall)i(Cost)g(and)h(Bene\002t)p 1067 1320 V
1120 991 a Fj(The)d(best)h(high)f(le)n(v)o(el)1120 1091
y(programming)d(language)1120 1190 y(to)k(interact)f(with)h(hardw)o
(are)p 2026 1320 V 2080 991 a(The)f(less)h(hardw)o(are)2080
1091 y(compatibility)d(v)o(ersion)2080 1190 y(of)i(C)p
2844 1320 V 2898 891 a(The)g(most)g(comple)o(x)2898 991
y(programming)d(language)2898 1091 y(with)j(the)h(best)g(performance)
2898 1190 y(to)f(communicate)f(with)2898 1290 y(hardw)o(are)p
3837 1320 V 60 1323 3781 4 v -150 1471 a
SDict begin H.S end
 -150 1471 a
-150 1471 a
SDict begin 12 H.A end
 -150 1471 a -150 1471 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.5.5) cvn /DEST
pdfmark end
 -150 1471 a -67 1570
a Fk(5\))41 b(Over)o(all)31 b(Discussion:)46 b Fj(Based)32
b(from)e(the)i(criteria)g(abo)o(v)o(e,)e(it)i(is)h(clear)e(that)h
(assembly)f(language)f(has)i(the)g(best)g(performance)d(and)-150
1670 y(bene\002ts)g(in)g(writing)f(a)i(program)d(that)i(w)o(orks)f
(with)i(hardw)o(are.)d(Ho)n(we)n(v)o(er)m(,)g(the)i(lo)n(w)g(le)n(v)o
(el)f(language)g(of)g(assembly)h(mak)o(es)g(writing)f(code)-150
1770 y(in)39 b(assembly)f(really)h(comple)o(x.)e(W)m(ith)i(little)g(or)
g(no)f(abstraction)g(from)g(a)h(computer')-5 b(s)37 b(instruction)h
(set)h(architecture,)e(this)j(will)f(slo)n(w)-150 1869
y(our)33 b(de)n(v)o(elopment)e(time)k(for)e(the)h(algorithm)f(of)g
(this)i(project.)e(C++)i(is)g(a)f(great)g(programming)c(language)j
(that)h(is)h(adopted)d(greatly)h(in)-150 1969 y(the)g(programmer)d
(community)-5 b(.)30 b(Ho)n(we)n(v)o(er)m(,)h(in)i(terms)g(of)g(our)f
(project)g(requirement,)f(it)i(is)h(also)f(clear)g(that)g(C++)h(is)g
(the)f(less)h(hardw)o(are)-150 2068 y(compatibility)27
b(v)o(ersion)g(of)h(C.)h(C)g(is)h(ar)o(guably)c(one)h(of)i(the)f(best)h
(high)e(le)n(v)o(el)h(programming)d(language)i(to)h(interact)g(with)h
(hardw)o(are.)d(This)-150 2168 y(mak)o(es)i(us)h(decide)f(to)h(use)f(C)
i(as)f(our)f(programming)d(language)h(for)i(this)h(project.)-150
2307 y
SDict begin H.S end
 -150 2307 a -150 2307 a
SDict begin 12 H.A end
 -150 2307 a -150 2307
a
SDict begin [/View [/XYZ H.V]/Dest (subsection.2.6) cvn /DEST pdfmark
end
 -150 2307 a 81 x Fk(F)-11 b(.)41 b(Statistical)28 b(Analysis)g
(Method)-150 2432 y
SDict begin H.S end
 -150 2432 a -150 2432 a
SDict begin 12 H.A end
 -150 2432
a -150 2432 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.6.1) cvn /DEST
pdfmark end
 -150 2432 a -67 2513 a Fk(1\))41 b(Conte)n(xt:)j
Fj(The)31 b(goal)f(of)h(using)f(a)h(statistical)h(analysis)f(method)f
(is)h(to)g(\002nd)g(the)g(credibility)f(of)g(the)h(output)f(that)h(we)g
(get)g(from)f(the)-150 2613 y(algorithm.)e(There)g(are)i(a)g(lot)g(of)f
(options)g(of)g(using)g(statistical)i(method)d(to)i(further)e(re\002ne)
h(our)g(alignment)f(data.)h(W)-7 b(e)31 b(are)e(looking)f(for)h(a)-150
2713 y(statistical)h(analysis)e(method)f(that)i(will)g(allo)n(w)g(us)g
(to)f(\002nd)g(the)h(credibility)e(on)h(our)g(alignment)f(data)i(or)f
(error)f(tolerance.)-150 2811 y
SDict begin H.S end
 -150 2811 a -150 2811
a
SDict begin 12 H.A end
 -150 2811 a -150 2811 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.6.2) cvn /DEST
pdfmark end
 -150 2811 a -67 2911 a Fk(2\))41
b(Options:)g Fj(Con\002dence)27 b(interv)n(al,)g(credible)g(interv)n
(al,)g(and)g(tolerance)g(interv)n(al)h(are)g(three)f(possible)h
(options)f(of)h(statistical)i(analysis)-150 3010 y(method)23
b(that)h(we)g(can)g(use)g(to)g(gain)f(credibility)g(of)h(our)f
(alignment)g(data.)g(Con\002dence)g(interv)n(al)g(will)i(measure)e(the)
h(frequenc)o(y)d(of)j(repeated)-150 3110 y(e)n(v)o(ents)j([)p
0 1 0 TeXcolorrgb 115 3110 a
SDict begin H.S end
 115 3110 a 0 1 0 TeXcolorrgb
Fj(11)p 0 1 0 TeXcolorrgb 198 3053 a
SDict begin H.R end
 198 3053 a 198 3110
a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (cite.stat) cvn H.B /ANN pdfmark end
 198 3110 a 0 TeXcolorgray Fj(].)g(Ho)n(w)h(much)e(true)h(v)n(alue)g
(that)h(we)g(get)f(from)g(running)e(the)j(test)g(repeatedly)-5
b(.)25 b(Credible)j(interv)n(al)e(will)i(gi)n(v)o(e)f(us)h(the)g(de)o
(gree)e(of)-150 3209 y(certainty)f(about)g(a)i(v)n(alues,)e(gi)n(v)o
(en)g(the)h(observ)o(ed)e(data,)i(there)f(is)i(a)g(probability)d(that)i
(the)g(true)f(v)n(alue)h(of)g(f)o(alls)g(within)g(the)g(credible)f(re)o
(gion)-150 3309 y([)p 0 1 0 TeXcolorrgb -122 3309 a
SDict begin H.S end
 -122
3309 a 0 1 0 TeXcolorrgb Fj(11)p 0 1 0 TeXcolorrgb -39
3252 a
SDict begin H.R end
 -39 3252 a -39 3309 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (cite.stat) cvn H.B /ANN pdfmark end
 -39 3309 a 0 TeXcolorgray
Fj(].)j(T)-7 b(olerance)27 b(interv)n(al)h(will)h(gi)n(v)o(e)f(us)h
(the)f(spread)g(of)g(error)g(in)g(our)g(alignment)f(data.)-150
3408 y
SDict begin H.S end
 -150 3408 a -150 3408 a
SDict begin 12 H.A end
 -150 3408 a -150 3408
a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.6.3) cvn /DEST
pdfmark end
 -150 3408 a -67 3507 a Fk(3\))41 b(Criteria:)-150 3537
y
SDict begin H.S end
 -150 3537 a -150 3537 a
SDict begin 12 H.A end
 -150 3537 a -150 3537 a
SDict begin [/View [/XYZ H.V]/Dest (Item.30) cvn /DEST pdfmark end
 -150
3537 a 0 TeXcolorgray -94 3621 a Fj(1\))p 0 TeXcolorgray
40 w Fg(T)-6 b(ype)39 b(of)f(statistics)p Fj(,)d(each)g(statistics)i
(ha)n(v)o(e)e(their)g(o)n(wn)g(philosophy)d(of)j(\002nding)f
(credibility)g(of)h(their)h(data.)e(W)-7 b(e)37 b(will)f(determine)16
3721 y(which)28 b(type)g(of)g(statistics)i(is)g(most)e(suitable)h(for)e
(the)i(project.)-150 3739 y
SDict begin H.S end
 -150 3739 a -150 3739 a
SDict begin 12 H.A end
 -150
3739 a -150 3739 a
SDict begin [/View [/XYZ H.V]/Dest (Item.31) cvn /DEST pdfmark end
 -150 3739 a 0 TeXcolorgray -94 3820
a Fj(2\))p 0 TeXcolorgray 40 w Fg(P)o(arameters)p Fj(,)e(In)i(our)e
(project)h(case,)h(the)f(parameter)f(will)i(be)g(the)f(e)o(xpected)f(v)
n(alue)h(of)g(alignment)f(data.)-150 3838 y
SDict begin H.S end
 -150 3838
a -150 3838 a
SDict begin 12 H.A end
 -150 3838 a -150 3838 a
SDict begin [/View [/XYZ H.V]/Dest (Item.32) cvn /DEST pdfmark end
 -150 3838 a 0 TeXcolorgray
-94 3920 a Fj(3\))p 0 TeXcolorgray 40 w Fg(Data)p Fj(,)g(The)i(data)f
(will)h(be)g(the)f(alignment)f(data)i(outputs)e(that)i(we)g(get)f(from)
g(the)g(algorithm.)-150 3938 y
SDict begin H.S end
 -150 3938 a -150 3938
a
SDict begin 12 H.A end
 -150 3938 a -150 3938 a
SDict begin [/View [/XYZ H.V]/Dest (Item.33) cvn /DEST pdfmark end
 -150 3938 a 0 TeXcolorgray
-94 4020 a Fj(4\))p 0 TeXcolorgray 40 w Fg(Bound)p Fj(,)34
b(W)-7 b(e)35 b(are)f(looking)e(to)i(achie)n(v)o(e)e(error)h(within)g
(an)h(acceptable)f(bound)e(for)i(con\002dence)f(and)h(credible)g
(interv)n(al.)g(T)-7 b(olerance)16 4119 y(interv)n(al)28
b(will)h(gi)n(v)o(e)f(us)g(bound)f(v)n(alues)h(of)g(the)h(sample)f
(after)g(the)h(calculation.)-150 4137 y
SDict begin H.S end
 -150 4137 a -150
4137 a
SDict begin 12 H.A end
 -150 4137 a -150 4137 a
SDict begin [/View [/XYZ H.V]/Dest (Item.34) cvn /DEST pdfmark end
 -150 4137 a 0 TeXcolorgray
-94 4219 a Fj(5\))p 0 TeXcolorgray 40 w Fg(Result)p Fj(,)g(The)f
(result)h(will)g(v)n(ary)e(for)h(each)g(method.)f(W)-7
b(e)30 b(will)f(determine)e(which)h(result)h(will)g(be)f(the)h(most)f
(appropriate.)-150 4334 y
SDict begin H.S end
 -150 4334 a -150 4334 a
SDict begin 12 H.A end
 -150
4334 a -150 4334 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.6.4) cvn /DEST
pdfmark end
 -150 4334 a -67 4433 a Fk(4\))41 b(T)-8
b(able)28 b(of)h(Detailed)f(Comparison:)p 0 TeXcolorgray
0 TeXcolorgray 374 4584 3153 4 v 374 4684 4 100 v 481
4654 a Fg(Method)j(Name)p 1100 4684 V 156 w(Con\002dence)g(Inter)o(v)o
(al)p 1915 4684 V 160 w(Cr)o(edible)g(Inter)o(v)o(al)p
2757 4684 V 160 w(T)-8 b(olerance)31 b(Inter)o(v)o(al)p
3523 4684 V 374 4687 3153 4 v 374 4787 4 100 v 427 4757
a(T)-6 b(ype)31 b(of)f(Statistics)p 1100 4787 V 271 w
Fj(Frequentist)p 1915 4787 V 489 w(Bayesian)p 2757 4787
V 442 w(Can)f(be)f(both)p 3523 4787 V 374 4790 3153 4
v 374 4890 4 100 v 534 4860 a Fg(P)o(arameters)p 1100
4890 V 509 w Fj(Fix)p 1915 4890 V 632 w(Random)p 2757
4890 V 606 w(Fix)p 3523 4890 V 374 4893 3153 4 v 374
4993 4 100 v 653 4963 a Fg(Data)p 1100 4993 V 544 w Fj(Random)p
1915 4993 V 545 w(Random)p 2757 4993 V 606 w(Fix)p 3523
4993 V 374 4996 3153 4 v 374 5096 4 100 v 621 5066 a
Fg(Bound)p 1100 5096 V 598 w Fj(Fix)p 1915 5096 V 717
w(Fix)p 2757 5096 V 608 w(Random)p 3523 5096 V 374 5099
3153 4 v 374 5398 4 299 v 626 5269 a Fg(Result)p 1100
5398 V 1206 5219 a Fj(Frequenc)o(y)f(of)h(true)1300 5318
y(v)n(alue)f(output)p 1915 5398 V 1968 5219 a(De)o(gree)h(of)g
(uncertainty)2109 5318 y(about)g(a)h(v)n(alue)p 2757
5398 V 2943 5169 a(Statistics)h(of)2967 5268 y(acceptable)2894
5368 y(error)e(tolerance)p 3523 5398 V 374 5401 3153
4 v 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 8 9
TeXDict begin 8 8 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-158 -435 a
SDict begin H.S end
 -158 -435 a -158 -435 a
SDict begin H.R end
 -158 -435 a -158
-435 a
SDict begin [/View [/XYZ H.V]/Dest (page.8) cvn /DEST pdfmark end
 -158 -435 a 0 TeXcolorgray 0 TeXcolorgray 4021
-327 a Ff(8)p 0 TeXcolorgray -150 -150 a
SDict begin H.S end
 -150 -150 a
-150 -150 a
SDict begin 12 H.A end
 -150 -150 a -150 -150 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.6.5) cvn /DEST
pdfmark end
 -150 -150 a -67 -50
a Fk(5\))41 b(Over)o(all)32 b(Discussion:)45 b Fj(The)32
b(con\002dence)e(interv)n(al)h(will)i(gi)n(v)o(e)e(us)h(the)g(frequenc)
o(y)d(of)j(the)g(true)g(v)n(alue)f(output)g(being)g(generated)f(by)-150
49 y(the)j(algorithm)e(o)o(v)o(er)g(a)i(time)g(period.)e(While)j(being)
d(run)h(repeatedly)-5 b(,)31 b(our)h(algorithm)f(will)i(produce)e(the)i
(same)g(result,)f(which)h(implies)-150 149 y(the)28 b(consistenc)o(y)e
(and)h(the)h(credibility)e(of)i(our)f(algorithm)f(data.)h(Ho)n(we)n(v)o
(er)m(,)f(until)h(the)h(time)g(of)f(calculation,)f(we)i(are)g(not)f
(sure)h(what)f(kind)-150 249 y(of)34 b(v)n(alue)g(that)h(we)g(will)g
(get)g(from)f(the)g(algorithm.)f(Hence,)h(lea)n(ving)g(us)h(with)g(no)f
(parameter)f(to)i(w)o(ork)f(on)h(con\002dence)d(interv)n(al.)i(The)-150
348 y(tolerance)e(interv)n(al)g(will)i(gi)n(v)o(e)e(us)i(the)f(spread)f
(of)h(error)f(in)h(alignment)f(data)h(being)f(generated)f(by)i(the)g
(algorithm.)f(T)-7 b(olerance)31 b(interv)n(al)-150 448
y(can)f(be)g(a)h(great)f(w)o(ay)g(for)g(us)h(to)f(mak)o(e)g(sure)g
(that)h(we)f(ha)n(v)o(e)g(ful\002l)g(the)h(error)e(tolerance)g
(requirement)f(for)i(this)h(project.)e(This)h(statistical)-150
547 y(method)j(can)g(also)i(be)e(useful)h(for)f(us)i(to)f(further)e
(re\002ne)i(our)f(algorithm.)f(W)-7 b(e)35 b(can)f(adjust)g(the)g
(alignment)e(data)i(by)g(the)g(error)e(interv)n(al)-150
647 y(that)g(tolerance)e(interv)n(al)h(ga)n(v)o(e)g(us)h(to)g(mak)o(e)f
(our)g(alignment)f(data)i(more)e(accurate.)h(Credible)g(interv)n(al)g
(will)h(gi)n(v)o(e)f(us)h(the)g(credibility)e(to)-150
747 y(state)g(the)g(certainty)f(of)g(a)h(true)g(v)n(alue)f(within)g(an)
h(interv)n(al)e(of)i(data.)f(This)h(method)e(will)j(gi)n(v)o(e)e(us)h
(the)f(true)h(v)n(alue)f(that)g(might)g(be)h(a)g(great)-150
846 y(representation)23 b(of)j(our)e(alignment)g(data.)h(W)-7
b(e)27 b(think)e(that)g(credible)g(interv)n(al)f(method)h(\002ts)h(the)
g(most)f(with)h(our)f(project.)f(Thus,)h(this)h(mak)o(es)-150
946 y(us)j(decide)f(to)g(do)g(credible)g(interv)n(al)f(for)h(our)g
(statistical)i(analysis)e(method.)-150 1076 y
SDict begin H.S end
 -150 1076
a -150 1076 a
SDict begin 12 H.A end
 -150 1076 a -150 1076 a
SDict begin [/View [/XYZ H.V]/Dest (section.3) cvn /DEST pdfmark end
 -150 1076 a 1631
1158 a Fj(I)t(I)t(I)t(.)45 b(C)t Fe(O)t(N)t(C)t(L)t(U)t(S)t(I)t(O)t(N)
-67 1283 y Fj(T)o(ODO\(D\))p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 9 10
TeXDict begin 9 9 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-158 -435 a
SDict begin H.S end
 -158 -435 a -158 -435 a
SDict begin H.R end
 -158 -435 a -158
-435 a
SDict begin [/View [/XYZ H.V]/Dest (page.9) cvn /DEST pdfmark end
 -158 -435 a 0 TeXcolorgray 0 TeXcolorgray 4021
-327 a Ff(9)p 0 TeXcolorgray 1715 -50 a
SDict begin H.S end
 1715 -50 a 1715
-50 a
SDict begin 12 H.A end
 1715 -50 a 1715 -50 a
SDict begin [/View [/XYZ H.V]/Dest (section*.1) cvn /DEST pdfmark end
 1715 -50 a 2 w Fj(R)t Fe(E)t(F)t(E)t(R)t(E)
t(N)t(C)t(E)t(S)-150 -1 y
SDict begin H.S end
 -150 -1 a -150 -1 a
SDict begin 9 H.A end
 -150 -1
a -150 -1 a
SDict begin [/View [/XYZ H.V]/Dest (cite.arduino) cvn /DEST pdfmark
end
 -150 -1 a 0 TeXcolorgray -117 73 a Fe([1])p
0 TeXcolorgray 42 w(\223)-5 b(Arduino)25 b(pro)f(mini)g(328)g(-)f
(3.3v/8mhz,)-5 b(\224)25 b(Sparkfun)g(Electronics.)g([Online].)g(A)-5
b(v)n(ailable:)p 0 TeXcolorgray 2207 87 a
SDict begin H.S end
 2207 87 a 0
TeXcolorgray -14 x Fe(https://www)l(.sparkfun.com/products/11114)p
0 TeXcolorgray 3342 28 a
SDict begin H.R end
 3342 28 a 3342 73 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(https://www.sparkfun.com/products/11114)>>/Subtype
/Link H.B /ANN pdfmark end
 3342 73
a 0 TeXcolorgray -150 87 a
SDict begin H.S end
 -150 87 a -150 87 a
SDict begin 9 H.A end
 -150 87
a -150 87 a
SDict begin [/View [/XYZ H.V]/Dest (cite.trinket) cvn /DEST pdfmark
end
 -150 87 a 0 TeXcolorgray -117 148 a Fe([2])p
0 TeXcolorgray 42 w(\223)g(Adafruit)26 b(pro)d(trink)o(et)j(-)e(3v)f
(12mhz,)-5 b(\224)25 b(Adafruit.)g([Online].)g(A)-5 b(v)n(ailable:)p
0 TeXcolorgray 1786 162 a
SDict begin H.S end
 1786 162 a 0 TeXcolorgray -14
x Fe(https://www)l(.adafruit.com/product)q(/201)q(0)p
0 TeXcolorgray 2837 102 a
SDict begin H.R end
 2837 102 a 2837 148 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(https://www.adafruit.com/product/2010)>>/Subtype
/Link H.B /ANN pdfmark end
 2837
148 a 0 TeXcolorgray -150 162 a
SDict begin H.S end
 -150 162 a -150 162 a
SDict begin 9 H.A end

-150 162 a -150 162 a
SDict begin [/View [/XYZ H.V]/Dest (cite.MPU9250SDK) cvn /DEST pdfmark
end
 -150 162 a 0 TeXcolorgray -117
222 a Fe([3])p 0 TeXcolorgray 42 w(\223In)m(v)o(ensesense)136
b(mpu-9250)e(ca-sdk)h(reference)h(board)e(user)f(guide,)-5
b(\224)135 b(In)m(v)o(enSense)h(Inc,)d(2012.)g([Online].)i(A)-5
b(v)n(ailable:)p 0 TeXcolorgray 2 311 a
SDict begin H.S end
 2 311 a 0 TeXcolorgray
-14 x Fe(https://store.in)m(v)o(ensense.co)q(m/dat)q(ashe)q(et)q(s/i)q
(n)m(v)o(e)q(nsen)q(se/MPU-)5 b(9250C)q(A-)t(SDK.pdf)p
0 TeXcolorgray 2027 252 a
SDict begin H.R end
 2027 252 a 2027 297 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(https://store.invensense.com/datasheets/invensense/MPU-9250CA-SDK.pdf)>>/Subtype
/Link H.B /ANN pdfmark end
 2027
297 a 0 TeXcolorgray -150 311 a
SDict begin H.S end
 -150 311 a -150 311 a
SDict begin 9 H.A end

-150 311 a -150 311 a
SDict begin [/View [/XYZ H.V]/Dest (cite.sensorStick) cvn /DEST pdfmark
end
 -150 311 a 0 TeXcolorgray -117
372 a Fe([4])p 0 TeXcolorgray 42 w(\223https://www)l
(.sparkfun.com/products/1)q(0724,)-5 b(\224)30 b(Sparkfun)25
b(Electronics.)h([Online].)e(A)-5 b(v)n(ailable:)p 0
TeXcolorgray 2396 386 a
SDict begin H.S end
 2396 386 a 0 TeXcolorgray -14
x Fe(SparkFun9De)o(greesofFreedom-)t(SensorStic)q(k)p
0 TeXcolorgray 3539 326 a
SDict begin H.R end
 3539 326 a 3539 372 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(SparkFun\0409\040Degrees\040of\040Freedom\040-\040Sensor\040Stick)>>/Subtype
/Link H.B /ANN pdfmark end
 3539
372 a 0 TeXcolorgray -150 386 a
SDict begin H.S end
 -150 386 a -150 386 a
SDict begin 9 H.A end

-150 386 a -150 386 a
SDict begin [/View [/XYZ H.V]/Dest (cite.mpu9250) cvn /DEST pdfmark
end
 -150 386 a 0 TeXcolorgray -117
447 a Fe([5])p 0 TeXcolorgray 42 w(\223Sparkfun)25 b(imu)f(break)o(out)
i(-)d(mpu-9250,)-5 b(\224)25 b(Sparkfun)g(Electronics.)g([Online].)g(A)
-5 b(v)n(ailable:)p 0 TeXcolorgray 2227 461 a
SDict begin H.S end
 2227 461
a 0 TeXcolorgray -14 x Fe(https://www)l(.sparkfun.com/products/13762)p
0 TeXcolorgray 3362 401 a
SDict begin H.R end
 3362 401 a 3362 447 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(https://www.sparkfun.com/products/13762)>>/Subtype
/Link H.B /ANN pdfmark end
 3362
447 a 0 TeXcolorgray -150 461 a
SDict begin H.S end
 -150 461 a -150 461 a
SDict begin 9 H.A end

-150 461 a -150 461 a
SDict begin [/View [/XYZ H.V]/Dest (cite.9dof) cvn /DEST pdfmark end
 -150 461 a 0 TeXcolorgray -117
521 a Fe([6])p 0 TeXcolorgray 42 w(\223Sparkfun)25 b(9dof)f(imu)g
(break)o(out)i(-)d(lsm9ds1,)-5 b(\224)24 b(Sparkfun)h(Electronics.)h
([Online].)f(A)-5 b(v)n(ailable:)p 0 TeXcolorgray 2320
535 a
SDict begin H.S end
 2320 535 a 0 TeXcolorgray -14 x Fe(https://www)l
(.sparkfun.com/products/1328)q(4)p 0 TeXcolorgray 3456
476 a
SDict begin H.R end
 3456 476 a 3456 521 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(https://www.sparkfun.com/products/13284)>>/Subtype
/Link H.B /ANN pdfmark end
 3456 521 a 0 TeXcolorgray
-150 535 a
SDict begin H.S end
 -150 535 a -150 535 a
SDict begin 9 H.A end
 -150 535 a -150 535
a
SDict begin [/View [/XYZ H.V]/Dest (cite.protocol1) cvn /DEST pdfmark
end
 -150 535 a 0 TeXcolorgray -117 596 a Fe([7])p 0 TeXcolorgray
42 w(\223Introduction)27 b(to)d(ic)g(and)h(spi)e(protocols.)-5
b(\224)26 b([Online].)f(A)-5 b(v)n(ailable:)p 0 TeXcolorgray
1619 610 a
SDict begin H.S end
 1619 610 a 0 TeXcolorgray -14 x Fe(http://www)l
(.byteparadigm.com/ap)q(pli)q(ca)q(ti)q(ons/i)q(nt)q(roduc)q(ti)q(on-)t
(t)q(o-)t(i)q(2c)q(-)t(and)q(-)t(spi-)5 b(prot)q(oco)q(ls/)p
0 TeXcolorgray 3816 551 a
SDict begin H.R end
 3816 551 a 3816 596 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(http://www.byteparadigm.com/applications/introduction-to-i2c-and-spi-protocols/)>>/Subtype
/Link H.B /ANN pdfmark end
 3816
596 a 0 TeXcolorgray -150 610 a
SDict begin H.S end
 -150 610 a -150 610 a
SDict begin 9 H.A end

-150 610 a -150 610 a
SDict begin [/View [/XYZ H.V]/Dest (cite.gtk) cvn /DEST pdfmark end
 -150 610 a 0 TeXcolorgray -117
671 a Fe([8])p 0 TeXcolorgray 42 w(\223Gtk+,)-5 b(\224)25
b(W)m(ikipedia.)h([Online].)f(A)-5 b(v)n(ailable:)p 0
TeXcolorgray 1106 685 a
SDict begin H.S end
 1106 685 a 0 TeXcolorgray -14
x Fe(https://en.wikipedia.or)o(g/wiki)q(/GTK\0452B)p
0 TeXcolorgray 2160 625 a
SDict begin H.R end
 2160 625 a 2160 671 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(https://en.wikipedia.org/wiki/GTK%2B)>>/Subtype
/Link H.B /ANN pdfmark end
 2160
671 a 0 TeXcolorgray -150 685 a
SDict begin H.S end
 -150 685 a -150 685 a
SDict begin 9 H.A end

-150 685 a -150 685 a
SDict begin [/View [/XYZ H.V]/Dest (cite.iup) cvn /DEST pdfmark end
 -150 685 a 0 TeXcolorgray -117
745 a Fe([9])p 0 TeXcolorgray 42 w(\223Iup)24 b(\(softw)o(are\),)-5
b(\224)26 b(W)m(ikipedia.)g([Online].)f(A)-5 b(v)n(ailable:)p
0 TeXcolorgray 1352 759 a
SDict begin H.S end
 1352 759 a 0 TeXcolorgray -14
x Fe(https://en.wikipedia.or)o(g/)q(wiki)q(/IUP)p 2238
754 34 5 v 39 w(\(softw)o(are\))p 0 TeXcolorgray 2550
700 a
SDict begin H.R end
 2550 700 a 2550 745 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(https://en.wikipedia.org/wiki/IUP_\(software\))>>/Subtype
/Link H.B /ANN pdfmark end
 2550 745 a 0 TeXcolorgray
-150 759 a
SDict begin H.S end
 -150 759 a -150 759 a
SDict begin 9 H.A end
 -150 759 a -150 759
a
SDict begin [/View [/XYZ H.V]/Dest (cite.low) cvn /DEST pdfmark end
 -150 759 a 0 TeXcolorgray 61 x Fe([10])p 0 TeXcolorgray
42 w(\223Lo)n(w-le)n(v)o(el)27 b(programming)d(language,)-5
b(\224)27 b(W)m(ikipedia.)f([Online].)f(A)-5 b(v)n(ailable:)p
0 TeXcolorgray 1885 834 a
SDict begin H.S end
 1885 834 a 0 TeXcolorgray -14
x Fe(https://en.wikipedia.or)o(g/wi)q(ki/)q(Lo)n(w-)t(l)q(e)n(vel)p
2937 829 34 5 v 40 w(programming)p 3336 829 V 35 w(language)p
0 TeXcolorgray 3610 775 a
SDict begin H.R end
 3610 775 a 3610 820 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(https://en.wikipedia.org/wiki/Low-level_programming_language)>>/Subtype
/Link H.B /ANN pdfmark end
 3610
820 a 0 TeXcolorgray -150 834 a
SDict begin H.S end
 -150 834 a -150 834 a
SDict begin 9 H.A end

-150 834 a -150 834 a
SDict begin [/View [/XYZ H.V]/Dest (cite.stat) cvn /DEST pdfmark end
 -150 834 a 0 TeXcolorgray 61 x
Fe([11])p 0 TeXcolorgray 42 w(\223Con\002dence)26 b(vs.)d(credibility)
28 b(interv)n(als.)-5 b(\224)26 b([Online].)f(A)-5 b(v)n(ailable:)p
0 TeXcolorgray 1603 909 a
SDict begin H.S end
 1603 909 a 0 TeXcolorgray -14
x Fe(http://freak)o(onometrics.hypot)q(he)q(ses.or)o(g/18)q(117)p
0 TeXcolorgray 2792 850 a
SDict begin H.R end
 2792 850 a 2792 895 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(http://freakonometrics.hypotheses.org/18117)>>/Subtype
/Link H.B /ANN pdfmark end
 2792
895 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop
end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
