%!PS-Adobe-2.0
%%Creator: dvips(k) 5.996 Copyright 2016 Radical Eye Software
%%Title: main.dvi
%%CreationDate: Wed Nov 16 00:37:13 2016
%%Pages: 7
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: NimbusRomNo9L-Regu NimbusRomNo9L-Medi
%%+ NimbusRomNo9L-ReguItal NimbusRomNo9L-MediItal CMSY7 CMMI10 CMSY10
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -t letter main.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2016.11.16:0037
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 919 2014-05-19 18:42:47Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.24, 2016/04/22
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 919 2014-05-19 18:42:47Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not aload!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def/BorderArrayPatch{[exch{dup
dup type/integertype eq exch type/realtype eq or{BPToDvips}if}forall]}def/HyperBorder
{1 PDFToDvips} def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx
pdf@lly pdf@urx pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly
exch def dup DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx
exch def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 24 /similar put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70EB02A
60651FC2E263002D3986B7B20CC2AA08330B9FC2E26765CD52266969A86EE30E
71E0B41B6C1C6DA423D3A7E1553D2FAF26EF40DC183099322D362E4965695C52
9FC3E5BD7ABD743CDCB717DB10372A722A39CE53FABB454EADE2179C4CBFC016
A8E893C28EF549CA1692C8D8ADFC471DCCDE266FB4E97A1F3035801F3F034D44
AE6ADA0192657E8078A1D27420093FEBA111333314658021B90DA4E7A8D4B829
F1795501020D5FF0AD25584C1D57D4B3E8291F6E2FAACE63532B48948C4B25D8
D6CC9887B25F499C9A1B8C206C6BAAD4959AB961020E226C2782891C033C6F28
59A913B6FF25968405EE63DD5963A3434A80D3B7C71E0C84EE4F720BA253777C
6CCFFBB732B65BA58CF9F228F61E0B5644CE409D5D271504A957469961D49415
90B1C9B3C0E2076C5D0A694BCFC61B1E8F3D3F1181D5D2168595F386741FCB4A
EE412F1E602E70B8B4E90BFD171D0AF37CB556C5EAC84ECF3216F44A0052E41B
6C09F56714FAAB7F0EE25E467DE2E3D093F09AB8C1CC5A2288105494486FB7DB
E9516D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 62 /greater put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A9081E7BF64155A2CE3C0DF7
88D00671AD65654709589BAD7EA65BBA811387ABA5CA0BC3F66D3D48597A0D1D
2C268375DF47CCF62166262AE4840AB03BF49BE67A05EF66328EC729F03CA5FF
AD3937FC053E223303565DC771ACF32E63DFB96D5030E787961D72D02C195C66
B48E9AF0309DC169CFE8D16E2818DA94693A18F027DEA0D916672480464F7E22
CA6E431FE38D3FC019BDD229E064B72C545C61C6EA55984565CCA88ACB01F744
3B4593CC8953C83DFB6FF3C5F9113898F45B76D98F7F118FE4D1E6BE669545C3
92676FA583E3D3B272D5BFB24153AF62BF53BA0C81BF5AA2012FD33DD7640BDD
5CE8BA566FC85FC277B1EF69622D720569405B04D49FAA4C9FB2D4E3983D5C90
6B9A4327AB712D655D33EBE0C95E1325576B034525DC7BEE4BE00928DFD23FC7
42F317916B81D6B189FAD3045D66E40AED0B64F709989F419019BD5CAD255631
C91E48735BF1A70917B17928088769ECA64EA6FF215A445CBCB6D6D784022768
BAE9BE186FBC80269392EC8C86
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY7
%!PS-AdobeFont-1.0: CMSY7 003.002
%%Title: CMSY7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY7 known{/CMSY7 findfont dup/UniqueID known{dup
/UniqueID get 5096648 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY7 def
/FontBBox {-15 -951 1251 782 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY7.) readonly def
/FullName (CMSY7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 15 /bullet put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D9DAFF1B3EA76067
C5493B69F73B89C8B61804A34FCEC826343337CCDFFCE17BF343EA8034BF95AA
14C56862C2C052569AFB236E1F1795F05150C8F28DFEF6BF4BCBACB678D00036
30EE84FEB44B1A8438185EB45654E6853C1159B073E54292D135F0961A64E8A5
AAE49C4BA9C44156C123426212120F99F3E8B7425752A5FE384AAEF755A8464B
51F015F9E2967477D57B22627D75CEF8AAAF0AEBD504EB46D0289DFC8D86C972
F042BD88A90A53613DD93D8A7A8460E63D85F6C15C000C0AAEE4BD5130B6E668
8C9B3F3FFD804745DA1D5EC0AB85C96E1724FA67F9324C59275415182AB48D57
9722DCF602396AD4B5C075A5A89A5D005C9FE11273E5FBDDD1800F11BBDF6AEC
6711C5633A73AC5DF038BA521AC492E138F7FFC7C5438FFD32FEAA1128C66E83
0D3AA40665F05E62D7EF00B1B0596162C402A34B6BAE6300D43F3DFCC84860F5
C0F0F1CE28FC60642BBFE9BC9102E80146774CDC88F9C250DE762D24A3484BCD
1D26B6D9FE981CA5AAB2A4BEDC528115043DC18D7105735D7528C2C5DD89A812
75B5D7B2E5A586FBB0C061E708F92C1552F64A296490BD0F20243986A4707FF9
8AB3C917B8DB92F19DCA6B9D4A1DB57515E51DD85D5C9D2CAF7A036AA3F9E9B1
5B5E099CC05A9126AB274C17D75CB4FAF78052366D2F21EDAADF84B22A2D645A
3E65C4BC0F540B5D9609D88DD0E4CBEEF87C16447D43A5F98528FD45ADD10DE6
41AEC411FD6929308F0E4F48A8D9C9EE386E920D41C1CC98A52073011DF5BD28
5683F280B5CF7F27DC50930C81D344FF5A8A9258A207D2531AC21A735B14155B
C22C752DD22AA33C52D6D4D053B3E46FD4C9129068DFF52695A3A9184D04E8EC
93696A3FEC3AEB3814D9015EC14C22EC3ABD5070E8C28A3B42F5596D948212B4
AFB9978A0A361135C9E18CBDC98E0D1E8BDC17E25DDB3D52E86127E5AAECC55D
FEE61693190E378978EF1BBD4D1AF005D511C7607CCFA4BCBD3EC427CAD82809
B725B25AE8A03EE88F80A7732A571A2317E0B6A0D072EE8CE2EB9E033CDCC899
B64CF4FA1C708A885442062F08D3D8DAF44C066EE278714D1486EB709D327865
A483F62709E89D08291F044325208EBA758DD459481334F5D9AE3BB61B3020F2
A4538CFC2C94BE84C920BE80806FDCEE394230730E049333A7E16509207514FD
695B5E0AEA9E4A9737311AA0B33B15F6769FF865D1ACB63DC6201C3F1062A3FD
1B446C1857460745917A36289DD57C94FE6240F4A40FBDFC10E91B91B79029D9
9F1B9C74E8E5AA011A0ECBEC660230AD5929F01D0325D15FDC0040406F124021
02AE176F4C98BAC1706F03C2B5B40F325A50CA4683B2BB4605E68E72D0CBDC2D
96B3BBCDD01201B650A7E7744D58D1E36D81FBF72E0A875FF29B4C109A1950FC
9621B18D58806392EEE9841794DFD39E3C4E20D45384FE07F9D445F143B922D1
AB350AA6DFC51FCF767B141A392D6A8B633AACBCEC9F56A0CF40AB08020EE63E
08CC0BE01B40E86388A65F5869F2F4D022DD4B912031CB8CEDEDFC2473772569
5B28F66AB74CD7902A0061AA3547D13C7F0C6EEEA7B0BD316694A94E4D672520
EA044AB28D8D01076C486CE456EDA1811F7ACA75D27473080D27D3E681E35FC6
447046120C6CC4C17674F0F051570A79DCA74848F3F300B58B19018430D99858
CA5504084D6BB74CFDB635B6866974A9AF05DF201C69352B2663B0623E7828B9
5EC5FFA8D8F10A7C28000F8C679B180067D5481D6315BF1C4194EB171C8F3CE2
4CE319975B9E948D907F9F7EEAF07089844391555F329E331D52FF114668B8A4
80704B3C6AC0CCAA2F5D043CE44E65EDA89A0CA854CFDCB11D549B7FA72EDB90
D35353C34A771B1FAF96F83FCA5258AAB65384BAFFCE448690C1432A1F749C20
5817205185F973FA098BA856584753E75EBEBF387FC155202885F5B67117DD7E
70D1CD887183C5573B6FB607D4F6CC9F8B94B09B3F3AEC2EF1E6A320CF6D0112
63046321941D1FB3F2140B59370AA9387E24D579D389A166A10C989497FE9549
34E1AC2E546CC06C5308460DBEF3E1AEEB6CBB0FFDAC458E61DE3391480CF5CD
34A647D4DE15B81131B7D1F9EED4C6837A32E89B0EAAD6A05F5F67518655E5DB
224D4833CEC60D5DBBDB8A03FB1A9730589BB4F0FF56191D17E73B9562E0C356
B188882B36F9505F6F42EB2644FEE125C2A7D12227ABC8ADB924E88B0A9E8DC2
79762523B0B88DBBE6AC7968A46BD9E9F0C3F03F5F64724CA07782195F01F130
30DBE895C212E0EE20162D863F46A674D85232FA0DEE69A8DF019794AF6873AD
9CC2A5EEEF9393313CA519BF95C08ADF7A75B6F53EDCDC39851D20E58B97CA57
A7523717AA1821DEA94C8A9F8B82346B16D92D15AEDC16F0011A45A44B09DE47
08CBA46E8511D0C5CC83F952EEFA4ACFA7F3D7FA5E113EF6B70E5ABA6F1AD3B1
E4D3B15AC6D5C3BC70A3946F411A7D965D6FA9D7B6C6ECE19B2C29A2FF476251
EBF0CF3BF658A1D896323706172746F58B2DE49F8B7E431E20304A42694CCF73
11C4E9E96260CC442E2938A1E27EE6744C7CAB01634C8210CE40488B9CBD757C
4277B5E3E43C7560291D945F9128AF1F85924003418F96458ADDC5BB8EC431D5
AC9093D20DEA69B92454613BC1A82DAD4FBF8E56084494D9D2FFABD82A7C9847
171FE36B265B546F3072B0923840E6C6BB12CA53E05A99F0E8FD4F5109782746
7CAB9B35B68050230736AE624B7862D1244C7D9BE4D1CAAE21B123D1E8372377
F1FEF269A9A2EDF02CE0CC8BF92FD7EF09556987B8A3BF6D8C0A663DB6B9742B
E9AC61A449106AF1EA7ACAD40AC6F59427CC51865E6A90CF2AEED8D6037BA70E
4ADDAF622CDE877C98C3B2006B4721FC9BA18E30F0752BD4ACE36221F5CD1497
8FEDA5D643BE2EE007970A68E53D85975116E6CC09F0039A09EBAF0CA4B0EED6
A485CC0B69E526033FD1C1190BC5686739CE13D1AE8EBCABC01FCFF26141867C
44ED291196E546369129B9F759FDD7DC21BAF0A528FC34BA9FA8937813953644
C539F9DA4E55E83DB3D6DA309C562DA1330B157957B18F7618544AB738E25F16
F0517CD13C1F11BB8EA056BDC575D77CDC526EF497639DD89C2098660C5C45B2
D7CF715AC5E76847E0D3178360DAC1BAF6ACAEE72453B845B9F86621C166857B
029CEF5AFE29D1EDB4CA3AD7D008B7550A779E0066D7312DD6C7AFE1C0BFFF25
7B062B0DF30032EA2A2FE3CC46C96A3A0BA1888D1D2B05424A59ABE3EE928ED8
B67F507EFA78AE128F58B54634C7F534B3D0F4AFC23E38FB56EB39CFA425FD37
848545EAD03EDC5A9E796CEFB345F527615C785963F536972EBD9CFC4A6A4A07
5A31A508CA147FBB762ADD198CE36DF86730FCE2B643D1E7DF0BDE800DE7AF89
44A36B04193E44231E08919EE91A8B559646DC4DFAFF0AD891890A0A88FFA8EF
B066BCB7AFCA409C51889E7FEB33F19A3CB1268BD0EA74AF29C1401BABD16F87
ACF7DD65A8513DA9995C5092C36A774BC4260113360D29AF7ADF5D22B5B58E7E
A9BEFC33B9A91D2C397B27A81087376CB623318A8362C3FA9CBE3026675723C2
E711910DDB328E0EE3FCE219F44FE528B70E58B8E6CDB4AAB48237DD933D9639
E9D4F9EADAA8D46537D964D75C27F210B0C2473CB60D65F61BBD91ADE01576BF
77C49E31936138B0FBA066BE910DE1B1F0E4FFB5E81038E8656ABFF08DFD923E
6BA2AFEDCE6998BBF7045393C34811501586A4846E5B942C8E99D4C481D3AE60
2796ADBB5242D59F1116EBB828014BD903EF58B223DFD18BFBAAE4D348876B06
CAC10B7AF0DC270E6702A3F75D4DCEF872F2CDB9470AC9A1DC1ABCB55636D26F
9CB6BF27A0DAEB1F62AFEC12F55F78C9B59AC6DA9DB4B45444B0C582DB4DB8A4
B31EF4AFB77988E92FC0B257374B4408406490D9AFCC495316D6C08BEC9A76C7
12371E14417711EF802FB7151B3F6A2580C97527C9C3A0FAAB8D62FD992AA18F
EBEB36F7910186CD5F70A55DFE932757C299D9D2289796769A00A0C6ABD18F82
E0D4E95D6477E67B4C012DBBD098FE20E2F15C412DD2AD5471A65EACE05B3A1A
0C9C430BAEF4887F2CCE668116B87FFD9DAB4B9B3605CD26E6B12488058AFA30
8843791A95BB322DF5C47387F3EC72343855D6B23D72144EB5EB5157B8B238FD
6C71DDDA64C9539F66A7DD569FFF43DBE4A8F0608A3CBD354DD9BAB5E3C756DD
92C3C1B3E169D86A2230299432488BC04A87E08A80809F9968676DF9157B1C91
27C664ABCCBA9997FAD8966F766B325086899D1FE44581FE07C97688B3E15B0C
234A22646C32BB965B9BFD2CD34854D1488AAF021E169BF9CA9665CF040E25A8
16156C80A2F47397CD370AAEDA731E0D14FBEE1E51A17DB972D96DBCCE33F937
5CDBF1A650BF1D3536BA4CB7A1CACFD5CB457E2368A660A62AC26E64A631B2BA
6B08EBE42E02D9B1B2E95BF9F0A6B59C96A122968FD46A4D17BA3D018CCBA0F9
80BA3C1E6C683111AFF79303CF64F1D2CCBD7571C6E09DD9B27B8E101BE219F0
E075880A0E367885AC94143E777DAE455B990383100EADF786300602C2CE28F2
4F44662FDF03BD39A5181912D8F1243C36FF88882CFC4B34C1D4EBBC01D96A7D
9CE5303042D1B21042E4FEAA455F22A01333FCAD7E4AACA5D3A5386331985F6B
9B247EC6310BB07507321BEF3E4ECFC3B915AAA6E029B3999644C987640863B0
5DCF58CE479497AFAD1208FEFD1796E74467E9F7867C313A3412E6923F4C9144
C69EFA17965056DF043DB465BF2F1E191706D3AAB47E6AD5C9767E4A73B29F2D
E2E579D0262237568F82B360ADB6D0219B7535EFD02DD0688CDD23D84FC4F308
5D2D0010B1A9F4F0321A00C154672D21708B66B91ADCF98BAC7A2F94848E9A4E
86CC82EDD0399BD9F13E43359E71F80086B9B0C3B6D08831D4479ED83E7892C4
90C477BD1F06DFEBBF60F26516EECDEFE4787EEA8683754F2B257D0BAA607DBA
35EC6D1618C2FDF3881827F92D793ECF152D761F2423A96210F582DC9B90120F
26A33025414716A5E6F56D712E31BABE5047EC4855B767AC63D793995C9E074B
6E35C7E5255FBF4C3F17E7AD7B2A6C5F7459794FC94306B581536910F244BF5A
3158E821CE75F4B0565EBE985DF24DAA92F9C1D848EEC6B88E21FB6C51125872
1752F7352291960E5BD36F78AABBCF6DAA4D07AF56E4B6058AAB13D41BCDAA14
C0D63C6807FCD0E2B4B9CC892F224843173A75DC53A8F0FA396959C2E2CFE3F5
9B1C8B62797F34E7A0BFCF0787C73FEF98442234A617CF161829498035D30B29
ADFEAABD0B496E8A2E764D22DB7737F950FC5982F1C5F4FD414C1B0202F40FBA
62C81B8F0E836CD73D79366FD62388B437B81FC673442EE34BF27454F72A08F3
389E60CE28A050601A42FB4491C60DC02EC008E6B9DD2495522BBEC7293E2923
120584E88412DA7137397B41A28706B1CC6BB0C80709A2A4BA79822D245757A4
3EE454198942ED2316FAEB981F7615E642167620EBDDC5B271E273216EB119C6
4F2F0412F0BA6E3BA396217597575C6739194E1F839232FF088FDDFD3695A5CB
9A0E220389938596D8BDB183138E1F73F64512E4FAB5E1328F9B42364E3113B8
004BE2CA0B074EE271BBE0260D31CE555D535C16EBB528747EBAFFF253E659DA
3A377CBE0B296276AACF0294CF90FDAADB4EAD5E2F600E5B2A018DEFB86FF61C
84296480A425687CCE37D671472537E897AFD4B8C6A6175E1ADDF9AD24DFC5C3
A73E18AC2D9B28BDA2F17D51DB3521945850DAF0EE48B0FAC271544C1B4F3B2D
53BFC8DE32BA366FB1FEC0DD6C0B1FEA374CBE2B96F5B235A1D83A240DB442C7
1460980A3E5B96AE3D5784DE2C2DFFA671E0A856DB2FF4130E5905F3D5338856
C11A468D867D0C6EC585F1AD3E7164B8598BB59973B9A952FAE819F052A6554D
EDC342BCCB0525905D1D27ECB9EE43847B69AE116F494CB2DBBAFB2773F1A3E1
C75FBDF8D66FA5AB4005757D631A0D9424FCDA91A1D2AC6FCE7CC7A23E84C65B
3E92BC684F23467DCF8521E0E27CF1441C487EC6E3BCA0AB54BB137E83776009
833D772FD225E88A8BD992FD69819B3BA90BAAD1DDF16E4326190CC4BF9C30F2
AF7CA1FB38E6387D9745FC5E176B248B1581BF7A4CA2FCA8E423DF340EAE29AA
7E07A25FF838F67378F9A6A9A0B404E01E86E64FEF71DD3D540D4711AEB1974D
E2E0D485DAFFC74BA6B8E9AFDA245BC8997BB39BB6BD52B496A09C68F7A8E900
8DB3007643416040FCEC85B407EA0A946827771FBBEE49A3DA5542CC5173A31A
0280AB8E922C23C1BDD88D70627EF124633C318E7C9ACBC14AE216BFD41C0B6B
3A0161757913CA1F7B6626963C09936A52E73DD9B3D86DEEE73C0293A646FCF1
21D4C33DFF1671DA7A53E77E20233EDE51571549AACB7968602CD03EE67ACACA
B231661CA9DA2BEC5795A83DFAF675E9B052C8BDD51490F7874C91EF5ED2E0A6
BE9CBABB98A950F7E55DDA3823036437C11F614E27DA5BB8BC6D955FFE54B825
0201275C2C49A3908BEF1DB3D87792DDFFED23DE7FD9CFC284F6255C77E54A39
C2FDBCD28F2938E4CC135829AC1867CAA5705674062C9639FEEFBE49D6108091
7C58585B80464F7E69966D7933C7019BF336B88B9E0E7073A85EAF297B71B303
31EEE9121347A482D28CCE942AF53E94F88A97EF2F1860A92CE29A14495D67B7
D37E207D42F3891E0423F5BCFFCAAC057FEC683696ED6FEEFA65C8FB6F1312C5
24A1130192B4179F3B08DA1C951D988894E7FE7CFC28C56992A1CA82BF8BDBDA
E021F16E630FF67201BA4DF5F3F4D6AA65B8347FC1575C142C6C1868E8472BD2
CF191137AE1B36F32FD84DCAD50644AD55EBA2694C93BDF984A5C9E7C92B73A0
26769F00831537266FD2E711AB3F8AFC5F3FDA3C9E6439FFC48C3D1B5527FC56
1FEDE991E66E8465C0E395EAD0A22A2FDC001E449AB9C5E0EF187A1DE9B74696
BEB6A525DBF3A60DA2FBF1579150DEE1C5D1B6F55FF2708CE23289803CE123BD
C81E25DB96551A13AD713D5C7BFDD3F2E1D5C12463A195442B51909CC1724E50
A1F6F4EADB3B7355908F36F88521F333C4E7C70B094209D1F883B961DFAC32BC
8C5A2CAF77CA5E6AAB714CC0AF2B42FFF6F73301FC71AFFA9B33A2153F55C2DB
C1C111874DEC37CB746BEC9A3A9A37A2DD098CE7C66B0FE38460ACD77A47D53C
1550F857FFB733B5A8D02FB56790A09190B29CCB4F4A3058B1C82F0CC5E1B2EB
2F8E06F2DE531E1EB81326A8EF0F82843A4AC59D267EEE45730895752820BA93
A129C22A78C1AB28BCF67AD5DF372FECC9EE6719A02E499FD5CA866688E86089
7EE8E5912087E0C4588DE38428114785E0CFEDB1E2EE24CC067D107DFDF1E2BD
B1C4F9C6B740F3DEA0BD315581004E851ED5A9F66C4F9E95DE97D355DB06F482
A43B565F1255A85710B15A281E2F034B1C23FEE6CDF3A043780CB6AB18A016F1
9EAFE545CA5A5B5AAE2459D69D2151E99D029FB5C1649B9DA784BFDF7D177385
4D8B16B9922D149FFF6B4F99311D52BEC9A9FC098E7192180DBB38767DA9B9C6
E8CFC98615219EF3AD4A8157D14C72BA3F91C8B78381383E0BCA1A5319749B8D
07C9A8BBB76C74F0F05157151B418C385F2ECADE863C977BC1D0592216FF2843
DC1BB8509D9BB8356D008D7449147F456517EDB169678E28B2C0EDBD271BEC30
6E181064988515BD2B3AACC6D45DADEBD4DECAD9AC58CA06A6C9014B780C53D4
67D0FE46560B44CA4FF989A4D77F1B8828BB42507B524B622F10AC8781B19CE8
AA275F9FEDFB3036079F4F10ADC8CA8FAF5F5DA7088996FB632CEBD691C1F29A
FD52CB18BD258ADFB0B4B8B80F857B543BC64BE31FC83D5ED0A4866444501B5C
C98E1CF0A452E886EF57A241A093B769BB09B19B125F334D9D374A9C1B6CFFD6
FFED42F77C7624F8094CA624F45801B960F6E145D9623ADCB90F36C0C273C5B0
6E0AA4E0C95CDA1561529F446FE5489523B6E793FFF58C9DE064BC47635CCA71
AA72328472FF6822BD62A82B7765A73CA0239A9E28179AE7740477196602ABF4
2EE916B80AAFB638D00C1FB2A1EAFDC4516C7EE3EE4F5D3039E70EF3B07915B8
7C9C128C2ED3C27FE48D27D39B41E1ECEC46CD2209D760D75E743AD13AF1E761
A8B7F996ABCAEA43645546F42C87F6909258CC74419B96A39D6DA3233834894C
C60B03F867B6ADAA2C18F60040A9D8E70BAB12221217095DFC57117CDEB536FD
A09E11787D4F7B448F88
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusRomNo9L-MediItal
%!PS-AdobeFont-1.0: NimbusRomNo9L-MediItal 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Medium Italic) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Bold) readonly def
/ItalicAngle -15.3 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-MediItal def
/PaintType 0 def
/WMode 0 def
/FontBBox {-200 -324 996 964} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E1D5D732CFAD353E3B2D8
C2EB95195919264C4622E31A19D91AACFCBE5948640C6FF2ED865A61A34D5621
EC8F97345E25F89A2E3CDC64953A73D32C60044ED8C5175D7C40116E16BD025B
405736F8A4BD8D4070948E532BB7864341D6A02CAC612A639B6C94EC233CA648
C252709BD9C80F0E8CE48CF2F94766DF957F078F6AF4A7E5204102810F649186
3B67F9B7D04E783DD36176EBB99E92785F84225B659973AB97B63EC6FEC3D6AF
6C347303452A654C465952A3F0AFC0A74C9276CA0F262DF3ECE72D0E56057A6A
DDF6B9B6D3F64BC46336C8F8AB296E0A502A1B878052317E8F659881D1912278
082486870DC26891FF364E75D72547966C4B7E6C131EA1F71CD02B64104F7513
BA1157E65EFC56F23EB9E296D425562037559648C23DE28D468F61843F23F63C
10081F3DEEE3EBBD10B8E7B4B1B317B6B2116698542675F81AE47CF56F910DFB
878926D16FD18854090DB163B6C3E719A33B542AA70855DC846B98CD83DAB916
91691E259F7AEEE5B3F25435146E8EE16B5E46EC7F62E5B4298AD064A0D66991
3290D798C4CFB5499D96004311B4707DF64CF43724242FB88A88C5E2B53D2976
7F749D893DFC2D5A4280C4992FD60CC672FA505469184B21C6411C916339E7D9
64BCD55D6974362B0939449BD1355F7B99F07D6F3EE674328D1C485299EEDF90
5D5A5284EAD4B9606E8A9E381D623E38C74FD6F93EFBA70FBBCFA73565884CE2
39A5B4864E4852B6EEA8D2EAD8A396C424B4D318BAEC8AAC9CDE1863337C98C2
109A91C2EF30C929EE3F3BBB33E361EFF2812778CCBFCD2E7FFFC7F1F4406F15
BA868C0A90877010683689700681F7EFA9C6A377022865638E3B3CE101B3AF4C
FC4A583B396FC778023F828FCDA979E25395FD87AAFD437C2043CE2D2CE8E377
29A8A22744C233F003CF9B1F0AC9F14D7A1AD3F171C8D632ED0F3E6E2CA99429
1FE510C1CD4BD3F70BD308055BFED7FE4591DD58809003B0D12632E65AB753B3
FD08D95F9EB0F80914F68E9B5A5BEC215FD698B7FF33693DCA492BCBB376229C
4BA9575DCCB9C26B9FF9D40813F722DD86A572F602F300C3D409420B491B74D9
56A9A0270655811051028B571E39D1A96CCB0115898F910F38FD25CE03F740C9
69FCD8FC6082077DDB844137AB35E862CECB9761D4FD3514C706080ACE7A8462
EA4D0A2E3CE3EDA1EC59EE43FA55A2967E453EA6AC9AA63C2672EF797C6B569D
71D8514C89CDA3C719DA2D9AFB16D8A9B9AFD9BF39032AA828C424B94677EA2E
35AED029A5EF3D3C9FCE23F3733659F7942BD75F3D839477B4EFD118CAAF668B
B30226AAF44834DA5F3BCC3029DB39095E006F462DD9EFBDD34A443F263B41A3
B2076595CE2A7DAAA94E8D635DD650F404BA14C3E9D3D5937698573BFAC64BC5
1DAC341FB68C0D3A056F03D998770A0D22B1CA757FCBD3460F9E803E409065E1
58DA49560DBF9060489B2ACDC9BA9D2A1B213B20B0EBBF2BC4A0E37DE2DF8B75
EA2A55A5187666E9D9BD19EC0057F585DA96CF13D51EE1D8B35EC2E6B2BB0314
FD0E2835FB97FF48B963630A2422AB980B7CF013681E4A51760842271FB48294
FD8B63FD7216EA3D9D9CC7A830D54468CD68C23B59FA2A4A18D74B187587ABDE
7A3C8949663444EFC158564985AA22FC24BB9221F7ECB4B4E1094F27A3128A45
1D97B58D7549ED6EFCBB88788761B3C6150D55D1861582536AE9727A6021119C
751D4453EE0D6C01C63D3B42EBD8FBCAF24358C496F7F6C35804826374146861
F96E7EE3EBD6B0012895B74440C1E90EC44836EB4CDDF3288FB3926DCF77BE20
2AE82E35CFBA65227F9170D06B0C4169ADF35E74F2E10EFA7D7CC3107D4C8D0D
44DDC2CC1D1259EFA1F489DC229E9D659C8735442CEDDD4EAE1E5E9D914DDFDE
FA36EDF85949E50F1CDC69E178C52B5FB46AB460EFE17923AC0439E0FDAF8955
FBC699FC847F077A81047021DF46F69D76660C06E7682033B4376512D85F65AD
30E430DCA3586E888C0E9E815A6B3AE059838DB2EEF382D5AD4A22593487BDD4
CD96EEEAA809372D0F7C78CACBB5C8AA85ACC4F23E2C0F9279CD59961D5036B4
7F98527178B420EBB0B19C1AD3D1F5B8685D1874C7454D9ADD2F2E07884EE0A5
128AE2D8D5A8649CDEFA8D0F98E7E0155DBA5E300663BFF1B1FE9F4AE5867118
7FC42A47555CA6335EA80DA1C53CFAF7F52C23D3D6770CD6C6FA37A28699D9C0
F3EE94AA32E3C58F8D7F803B5F86AEC66CEA7569C46F793B54259DF6C99069F1
62BFB73C2D6F5E4A4B898478E82A3DD10055B80BAD84A8AA5ECB115DF97CF787
A7573C23EADD24CBAE9832EB5E2ECDC7317D6A8D4BF728F12F0F85E5554E9E55
EBBEA71E40D60CB4A26A706440672638AC068665A66F8412E65E9AB1292756DF
706310DB40FF45631902B92C516F678EE5308EE5471579E1740247679D2CF5D2
945585B2705BEDB17F179ACC88AC5A55B59D51DCEC1F7B6EADE5A944B8301581
323FF93A2E861E70EB06E1CC87E1F94ABD775CB6C5CE872670218FC0D11F1A0F
F001B1EC30A380962C2F527A135B5EEF4EFEBEDFDC5D7DCC163B3BC7F13281EE
4F77FC0B85B1099AC9797236388915F39ED1E485EA188E51E6A5DAFD97118D49
D35A0D801EAB3A54B90340EE129822028061F5D5E82A3C734D02A5817427BAE8
BBFC432A5F3DC8E90C8543C852C84769D1E4176F64EF3C2D266ED2B909E37B45
26D5861D0184F4956DB9D9BEEF25BF02427892C1A13835B688B79D566F17C754
C58BF1775D61115DD2D54476DD446BEA201F714664CE83D20AD69E65CE65E926
E72751B7B73886C1C0394F1A561EA185C51BD3BC8E9167970E1D356361BFAE3F
7F5DF22D8F98CF962B51280BE9A7F7253F7F8A49CCD3C1B4F9F918967746B40B
A6EEA726EBA19D288B0275495A5FDA55125F7C15388CC763B7B0E6C116B3C87E
992DE617DE4F0687351BEFEAE26D641D49B7A3490F09BF16B8D178346617B3C7
5F93CD8D9565305EF1001F84DE922D6D2359CA218F0E68D0FFC9CC45041B488C
C7AB76EE13554185E66A3A161EED1F99B8496A9FCFAC13492DFAF7D5864FDFF2
C4A2EC29E03625E8C97DE2E0C666C180EB8EED1A6E828175BFB5CC662779BF92
73B7F4B4664B2D7D147930659C508705FBA1FEA06D05A00D637AA1DA9CE60DA2
2A7223D92D63E43CB4F24D2D7A34E11BF60162B6BC76C73ECA10CAF2FDA981B5
7BA3A1D9C6FDED6F5EF405D8F3031740705A8202D06E4F2D2A84AFBB39C843F5
95213111E4F37599A5DBBA306860A20349B4F0AD0F4D7C5DCDA0AF1BA47DA65D
9435A2EC8E9A202425C3B61212039562D3F4928E99FA2DE2A50627B1FB143F4F
CB53BD99E69F256E24329BB7EECDD29BC62743F758B67B6E7974004BF64FEB5A
965DADDDB4CB27D2D50E1375DC1FA05DA81AB2FFBA2F6862D8B67673C3484389
787BEE5B95A70B22BC1FD60725E18E2BEC8D007BAFAE6AFBD7842578CC087559
287044261BD14654E9AE4F2EC340616C830CD66D46E6847D05F71CD140B7E531
B6A6ED12DB5F6E902CECEA846C37519A175F751594844475694CE4ED78B6F411
5381A8CC4026F70446B5693B6EE7D07B31175B35FC4DB8140FD188B6BCBE72D6
B2C78CF499C76AD0F57AD1B1786E79165B66C2E803B3947CE1BD2DFCD7D2AACF
6E08F7BBC7BB1EB59E29E3F98C374C0D683F13655463796A6BEB653DFC97C3B2
C87C4E2CC69013214D51C2F03FF1DE5A80C4C8B98FD3831EDB4F97F8D526EB04
6230DE50FDC07151723A30020DD3039902C4D462A8936D00AEB4CF601F6FB459
C0FB1C9A4B3C2FD96A239A93B9E8C5FE755C4C8C82CC2897C588A09FDB14647F
570BBEE55DC7F2AED67B0657DE2C6AE6027D1CC0B252FF9ED5F0D2EBB74A9F06
B7571AAAED118CE796246940463E2D044358AC88D31FD731D0DE9DB8BD454CAB
D34EEAFCA393AB87F780E30C865DC98E53B30FC4E51D0C7138D32D57A20D0684
F5EFCA127055FB69CEB9AE3082F13883F9D3427E3200E0E79FF355914F445B8F
63509B634A40D44F59E4E75BA397998E519B70C3670D8B0B89C65A9EBBE16BEA
B2EF6A77F16BBB6E90FDD676A2215FF11D933881D5E3552A086DCF9316839747
4BFC8C2081F2D82D8036D8F84AA6C643DB5351F70F30E7F138E98DCE28BE33EC
A3A2B2AD548B7E1E83558E524B7828061DA49643D3BC86FD2042ABADEB88DC35
0B40D54A4F160CEEE87C7D00F5808BA5E646A76D4780E686330B1E8EDF702B9A
F26A0324C760CCB6BDBC0C6C731CB95F018D5F92E2D374D5A72BE08AE40A9536
F403CF7EFB3B92F951EB011FE7F40C44D42FDF3DE2CCDA6CF533DAC3F6757917
66EAF4718FCF0CD0246E250D20D12E4108FB815ED1D54A3661DACC545C7C06D6
F2864EE61213F8168F3DFF482FB7C9109DF46D02E2D34F606C1C21120E490E3C
D97683EEEFCF837941C0D9578EA53FA2D0813AB238367A14F0ED1EAC26E444B6
B7FCFAABD370D5384B34D68CB4E10E0625681DEB0AAA813F59AB6528318A5DC7
648A46AFE9EAA17E79A2BA636A96BFF33DCF1124A4E0DF06126E587E8F5ED4F8
8B6633B8E67BB0EAB7E9CB648FB756B08F3A9EEE25ACAE0F66B2652B9E71D3AF
022B675E9A48B8C3E7693162202487944A1FC201C6C5263EDD2A7CC63B5B7D0E
B3AE6B0FAF7F415B3CCDE7DFFE06753869F9CC7C97C1B8345B135ADA4A7D7804
6F9615511CC53F344B5B3F2A805F8F6CB5F281082C35DFCDE7FBE9D07FA0B52F
23621D506D481F1496C163478A1369DAC4A33EEAEF00C51F744C427BBB682E28
28682D0C441DF566978132AC7A54BE6AB7F8DB91CA34F981D89339F051529646
10B3B785A453E4B3CD9D217B6D091C0A6701288ECFFDCAF439138776E7DBABC3
145199DF6DB27C986190055A178DCA86642048F2BBBD80E2D99DC404F4E6F1D2
C81BF72582EF89CC6E0AE6767F5C30365A241AFA181C54F274A2ABC153986338
4B7272F3571958BB8AAA48F1F3C5425753CDEB149DEB6D47DADE96BE71BDC161
873827640B4ABA46A9CB3F22C1404BE8A196AC89067C8D93E63AC7D55F69E01C
6229DA6CD94A28E1BD5A431B278087496FBA1B5B586E2C8AB308C9EBEBAFB489
48F5212C2422256661331C2866372C5C1531F0097FF6FF6CB9BD765A408A1358
B956C8ABB177C6607F01428E411457A81F08D85B1BA361CFDBD81AB95CCF0D09
5771B4BD12278E3F98CF4557AFD054A607962CCEFD0BC54923077B6C99F24A16
B01BFF053D20BDC0C5C6F773C091B5E6C2D4000C676C272C063DA79A4F5453DE
7BD7CF4997E8A2A51D46EF944F54DA0F3FCB7B0A3272654C9CD997EF2C3ECBEE
2143A5844BB1CBF1E7EC99536B4E43CA5F851BB2AC0C98C88C74EA422EF397FA
01B6BAA58A4C093DEF4ACE2AEA3833D76F2B1409252045351685F42C24C6CF0D
12D9D2E781E8F639FB5D0B3210CDF1EA276FB33EE5192DC102CEB1C512C2337C
E2C3828D95F0E16704682061BBD5130816C79774124E4EA644BEC5279E2D6664
BB5CF88F44436E36EF8FDB117309947AEAD6D9670DD996AA9FE4D4268A3FDBF8
F1A735342208D76F67B00F6B9DE822EE15680E972DC7B27F4492035D2304EC4F
9083716CA7906B80486BB5C7908FCFF73EE7957AA138B65BF369F7716494BF36
A317DFD2F4B237DD92E2CF8880A9D1B1CD692CDE92F674CC67D6CBFB9C690F0D
2E596A55C23ACA3848CCEE9A057DCAA4F10C7BF49B002ECE22FD0A5EA52434FC
CEC2157AFC8FDA2D39E2DF849039B5673F1930BEB20EC8ED1B9F873E7AD27461
33DB708E37926B0728702BA2EB5CC054219A606ADBFCE47CF5F756C0D2803619
AC60F553B15C7C1FA3F304BE6C36E5118C1B106CD67460FEBFCCD6F2DAB8F94D
C51BA4C2F8319D7ADD89BF6C6D03EC2708D74BE64FB74FAB8FD781D9B1A305FC
B073B36053E2185E94F0232F731816A6E38CE82CCF0182A25953CBB2375D67CB
38E29BD8A41135A9E950B4200C54AB893B43303B14350BB1C8804A120EE29FAC
26C26102E59F854866C31ADF42955E7964E4DD9C30504A414099BA8E0F01A0F4
A94340BD31A9BDA29B8D76D50F9047C8C9A1789139C4D2A58F98B8566EE2BB22
9D402881F7A3B37208C675B566A0D99631F904482DE3ED7C536F3EB3DA25E089
996B0975CD2741182E2199B7C27BD071FAA64FA194504137309DB85FB746166A
1324123762C28FE555160CF11A301CEC8B0607464F1C61BC884203219903AAB9
16E92C7354DDC4E736CCA22A08C53436AFF4E299178F373C02986CC31A7508E1
7C81A5199AD77E3793D8500FA007A524E4F3BEB896DBC13C03FF185E41F8C636
25AA7EB6E3088526CAA1A1CC2AFD08A8A66E4903D72E1C17ECCA3BAB5A8D4A44
6DBD9087F5D82055990533535DC04CC53C86FB7A09C5CD84148718B9B61E8DFD
7CC62C888881BE5D68A59C8B5ADCFB019D97B581FDBDB37470C1F429DE136CB5
163087DE1AF9F1C64AE9850B3673E970F95003948D0381474D00406AC83E4925
9530FDFCE1163D43118ED30D3D9075F5AC9A9744766064FD6905EF98B72A81E2
3ADECDE18C9FA6A5976B20CDFF321ADFD514B2DF7ECDC06921D7AAB051C03588
37C94006C25F2DB434890CA625EB27D1F0983C006E5B71CA887EB02CAAD614C9
260D489DE828AB2BABC7BDA80D9A3BD17FBC6A043C6C8BF36DF0C9875B4E477A
8BFE4DD5496E5B1FA6CD5FDF033C0B143C3ACA99547E2A0BE60D34FE5E044D0E
4B33EE501FC3BAEA9DCB8E3614B1324A185E51732A67962B5C27DB33FBDC57CD
092B35EFCAA6A79B9F49B4B605A6BBABAB617EDA35B2569AD53B59A059DA3C19
6B7DFE837D30F0A10FF0AA866D296B53E506D67A9A82BE2AA6D7C24DC708CBAD
17ABD8F8813796BBD3BEA22E12E9C4197D0F3835C0942AD6487F55366E6C1228
B9B2F296281350C23CEE1D869C4B895057A804DA692386F263A75C1F6ED625B9
9CC9C3E03F133F0C064DB7B2CE3368C46FA4EE69FED5C9ED874D51401961AE04
6587EA1350C84F0ADDDB4FE35701CDDDA2CE6B69E86D2CFE3CE783D1708C7B09
F9A92B658455FB81B09C5DC1DE472490624397A1A8DCF4530A89DF33968A0A76
193C714D8CBE776E96125014FB2360FFDC5659ED8E719BC4C278C92026322125
4213129D577BD8E0D6A709EB32426F3112E17476602F3D7B5AA66AC712573010
6E7C624D0CAB75DC0396E0802ACCEF1ABA9A1CD9797E07C3E9DAB83C34AC97C6
6C21F4CE4812FA0F007C12820B257F820686C412BFC78C427E8E051B99E95D20
5AD9D64962C7E233BF57DEA5FD7A0EEC6074F1B7334E238D984A28992B8DB550
D7488B296E21A0757882B1F0FD65BB5F020AF18760DE738F9AA02A86EF23D5F2
8C1F1C53B2B5B265EADD6E0378A1F7D1A254FAD9F125B2599B59ADE0E8408B2B
3F92ECCD384633B1CFBE950D0C420E2AA97FA2E5F21D647E2546E5E8702729D1
144DD5A9AE100CAD874CA50F5E1CE54AE464C493C65CEDA434824D694FFEDC9F
C8C589974C55513AE70589392CB5599C78917D314EB20A9D6DB74B82604E0C15
EF74736E17066AB079A292A4A06CC6D3429CB2E286B738BE2719E23968D459C0
6DFB0DF8B76F97E3AE0BE60A41AABACED09631FEE351A7A8CCB0C007F4C50242
E48324E9A31040AE138A801141B72D59E2898450699BE5ACA02DB1536D99057E
3597610E00CE29C4EFA9548CB450E12BC8B4BEE5E7F2248B74C41E3A930F7D96
A3F7CBBAAD1697059C16BEC49C76F4C6B2F1CDBAC5CBB4AF4E5AB320A83EF5F8
EA5481D2EC79CE0056462EB8C45A01A48ACCA88838D7474AD4CEEB2C38C13592
573F32EC6ED4A3B04382A50FD5F5176B91457ECD8637E6E454010B6CD6E5EA51
D640B16226B9A621AF1343E5403003C28CF53047A07DC8A48FD12C2F397E9481
DCE423ED67D8077EC4429E9F6FE39D6CC4DB92A9CCEFD6B629FA661440C361DD
E7817154052436A36BB9F0E51C0C1FBF1F6C230C1C99974CEC3D5F27E9BBB713
7AB09D0EAB3B1214182E7DB08E59E004E2255DBDC15F863186227C6499DC4E6D
E17A43D33DB3BE958098AEC3449AC8C8299532C59403567379760EF3C4CFBB9A
1261C5AB38E1D71D781BD8282FD2969975CDB303737E0B9B0E661AF17841FDBD
5D61718DE52EB4F11723D1D6426645C32AAF8918DC5AF8A1FFD1E491426C7251
9022732E8079AD6DFC8C619CE8FE1EEE3B9FE2203DC6C75B23CC2F701C915003
C885E577E9097CE4186BE217A2F3DF381FED5B682696A02EA21A9C6FC7C1CF76
7FB3E937DC4520B30E54DFFE770165D1759D82A5542CFC4A772D8F498CB0177E
6DC6B89FD204E5235E57CC6849A365F9AB477D1089559C972F241B85C3465B3C
551DA0888924FE6A44FA1C161BAFBF18900D500C4CE3599A4B186761649BC4EB
4E8174C2AA327DB9601268D2C877ED5AFAC1C065FA2367569CC2354D7B725C2E
2B38D20E81C0700BFFB9132DF181129DEDB9A655EE349F0956DB6D6268C6CF0A
6E7B9815E5C1D06AF1859F45140A382AD6E699337686B4EA0A5CE7E682B6A859
D852D22ADDC8B4AAE9F2257724D15317738826E365EA2E5831E662E3F99243D2
099F67A4E4059B6595005CC1A38855F8A61C29C1229C4C749C933A7CFC60FB3D
EBD2430D668B3D174C7CD696301EB6AEEAE9CF1701F6DF625DB40083C9FDB651
0619821B0CF1E6CDD22E976972C71EBE598D9439D0630840A08B78819C788E94
863F741958E4F19FFAD57C8A6FC768C74CE0DCC2782AE6B40151E46536376C42
9C1260DEF83D6D2A4C5D5D691554A65A14D15C261A3AEB182DDEFC54CD3E052F
6E44616542DBB5F90E7AE5170B78A031A8ED3AF8897BD1384C54FE9B6065F039
77D2CF7A92FC90740EB18BFD4531709EE422448B1A74FD31CECC456D2C7371C8
F6A29C933149B79857CD0B9BE1751FFC15C6BB7BB12E4BEDF4663355BC7FC2E9
DDCED1E8FB11656748300CF14A7A6487F86AFD0911D12937699CC968108095BB
B7C8820EFBF3D282E0D6E72309A63C110A21868EFE4D48DD2A4498D7FA5B5C3B
2370554F4A52E868E8FC22254B538D22BA16A354D87393CEE1F72764CC07A120
8440AE5D72F80F1BB6FFCBBA496CB3F793D4ECDF9B17D1B3AEA404328AE35813
4402F410B8DD71E5BE506E8343FB703A7EF38F9C612617CDD348699BC24D74E9
92712EC3BB7EC5DE08BC53D9B8820A39858C5F2040786CAAD5E5EDB63636278C
F5B50574C768065FBB24A71B15D09CB70476878D5B0558E10BED85CBCA7691B7
F02F42FA3CFB2241CA1AE9D54F1E376521B5982858FBFB71C230840470F557C1
3B242A5D5CB24FB7589456364DE6EB58E60BF16B7B78809E81CD51811E37A110
A381115FCF220E7726BF9BD70E7637F792D8E0F04BDA5B99F519E3B4019947A6
617605F9A2D0724257CD2A2DD3C35A5F273425735B75A41ED2300E2611522578
C6220EE3A7E9277685FA89F452BC99FC8B6BFB6920F6A22C4614150845100CDD
D34ECB507C53B518E9CC33F816D679D54B2C235173A6D1A9F901ADC629A3657C
955D13F3F158C37C85343225F047388165D6F1DF97BB737530AF7AD3525630E5
A5A6D3A844538959E456108BE20DDEAE3220ADFD2B93094E1D5DD5913259D7B3
0205DF9D0C2CFAD002954AA37A3A27AB31EE375F1C6FF81CAB9712AE99083CCD
0801BDF97EC5FC1D9EE67FB9CB2A382D980893E3E91373EED06DF3EC12EB8EB2
F4C7691FE0BF64DE923F75B75E246BA522976DA2B15EEC10CCE15071983F94BF
AB55819D89E66DC46B4327CFD5BF8309EBEB6E9CDC3D994E5374A6936E7040E6
A01311849B1A2FB3A1265248748B97E0D6A60B2EFD5C3B07489D8393950E1F7E
818D2CDCF685502359F1F43954568F015109A720450F20D927ED37B4105AE855
29DA10692709977B567E693433229A726CC10209A98CFD7FAF4715AB6ACFF86C
5B05EF5992CD3A020DFFA7C4471E9E275F63D186239722F1918575C067421DC1
0FD0FBE7313BBE93E8F8CDC356E0739FEBEF25A3C08EAAA69605CC08F88E06B8
1DA873445FBFE8A775DA65C67D294FCCFCA7B45F90A111ACBEA85242A79C9B09
77B391EAAA9E101705CCE20E7BE1A55567EAAB8263D64BD3DAED4E5289B9D598
B7BBEEE2A892FF254E44164994EFEFD7BB5A4E986EFBF6EA6C78E9B177DF9D17
116FC818DCAF7F7EED3124355C5D3344760485338027EF268230883494E63494
82A93DE23ECD3D2D01F431878C62405C05C857DD9D5CBFAA9C75A768D76413F5
2DA1CD61DD1E1F67385F9F1B1AE8F7AC777EAECAB12C4A27BC4CF21C99ACFE15
F309204FCF9893D489372285663DBE3050BB920D1BD969E3B7D38DDA99B5E0AC
FED79B718E8E06F09E58F67B770EB074EB45859E954800B8A9AB61FC7F5CD81E
74F1647E7583DBD8CFBB1379D0B49E75DD5EF27F04D5F0387B1042AD9959F488
18DD76A3F20E208AC89461F94AC073156936F1A808CDFCD9A9F5BEA8C6C5BB93
F97385D4ADCDE0DE64FB47AF0F738982D76462450E55758FDB5903D722FFF6BD
7FAA1A68B577FA75CEF46CDDD4BE299C3F642E7BC8391BE9E1D31D34A743DE8A
3045682DCE8542BC491761AB77C1C20CA75C38E8FFA02D35FAA0F808FDC65A26
C6AC667B068DFA0EE4CE4A3741DB2594450B99E5E011610F3A4DA2776CCB0DEB
D795FAC329D4BE40A636B57F02611DB295E1C3F6340E7A773B7AA7DD520F28AB
7B8B6E20D0E7CA5FB04E1F350E100D6ECAA1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusRomNo9L-Regu
%!PS-AdobeFont-1.0: NimbusRomNo9L-Regu 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Regular) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-Regu def
/PaintType 0 def
/WMode 0 def
/FontBBox {-168 -281 1000 924} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E152A40E590419249F2E4
C36159F8E54B532468E36965A38646781AB0B7F6A3E851FD10CAA49ADFC1E546
2FD2EC6150DC6E19523050F6148348A561AD8D2E2721EFF8A570CB33460A745B
926C889304C09753C2D78FB0CA95DC6DE5B8C524752C83601E7E9F73DF660674
F05AD83A166DA9BE89F22FEABD4B2665960F6FB5BC32928E1230C212E5D69CEE
0B3311A1738A11747AE263106916D8E95F25B25B4BC6AFB03B79ABB95DDA518B
41A49458111D2A1433C043627EF9460D324FFE22935F4F6DA88B8B91AE95B34E
08408A34EC8EAC3F65B6AE3E3E2524867EE9D29068F81E4372F4470BEEB4D6BE
EE4DF956BECC0CB77F8490117B22B2FB75C938ED0A5E208D88BC38B2AB8B9CFB
F1D53084B6F43DF336481ECA0AA2D5317BC83FC0E1D4DB01D0B7707EEF217E94
A7F985102DED27D8E8B009F7EF6DB91B91E78BFAE7BD688E10B3DC9AC77CDEE8
47AA4DC8EC78241E593D26EC7A60696151A2AE5325D736E99E01BDCBDE69579F
92EEEC224B6757EEDC64A75455BB665DF42A0E4CE7B99BF3E7D66F8FFC8C13F9
D7A1FF7A9D5FF7AC43396779F11C9B008C33A2043D48B61B88B03104B1425F09
675B559CA4302C001EE80D2B739CC0FD1023BF4F1FF9C01E892E59CCA7C26011
B8E0B6D29CC29FC72792FDA5E7D5D88EF98F9DBA960C96534C399C54865EAB86
0FA2E0D6C7C44B553EAC1574D55E7970744D4792FFFBDCE6FB4365BDBC2965BB
2E9EDAD9E0EBF0B620DB415AD98297F5AE83D9C710436657E74D26E83957C745
89834337035A7501803947F6880B70E56A3A404C62D57B849D28804CBE0F5884
435A0E12DCC9BA414ABB732BFBAE237001F557DEA5E972BA0838A3C7C9EB75AA
4A050DA0A529BDFFBF9011C360564FD17A02C18860AF6B86EFD4E2C125686C9A
5E114E95C71FC89A5DE9C589BFE5AC0480CFF716345265D2435EDAE67CFC4801
5BC08E7A48D683ACDB91E05F469C0C8919D73A5D07A1CCB173E30E76680ACB09
02A40A3E11916198BD69F1A26E88330F50692D0D5917E99E7A01B327413E24AA
E98EA484E45897E6AE4D6997B6E8BBF61C9406E916D56985CB2BD297E8ACFC6E
CF2D2281AD84696B7C6CB584BD85CC20BA14ADD3BC3E25DB91124C0ACF22E902
3CFBF04CC40DE331991E9075D22AB5EE0E849B340050E6C417C664A782D05549
DB2EF572F193B1C12B4635C2B358747046DE585E93CDED901EE8B566E969C0D0
EC80D172940BA3ECFA1C2AD06186907A91B3C71C70AD476F8D6E6EC6D1476CA9
9DDEBB0897B97D21ADAEC5AC1FA34CEF83450F3CF96B23EFDB0B46E25392CD6F
43D5C842F87B6D8F433F9402B18339DEE85CE619109DC5B0A512D05CF9D7D567
453EFAC6B42EA67174348066E173C5D0B04A7DA04505AE8A67CD805EC55122BB
58CD67DDE0217905ED118A54FCEFBD129D6310995B58DF6D920A30C805741994
1A114E40863B737B002A6CA958B8C2397A96B4924A0C7D7AF0112FF1A1DFDCAE
E8B1B75A2BBF37F423BC88E6BDD06F2AF61301FD6091FDF2C662612531A23666
64EE40299590BDDE05228EC140AFB5D7E24E2B18FA0D5A7BAAB82D3297C9CEDC
20F9601CA9FEAAD87981D6DA72961783F252E49C5574786F45DE88FBF2D6B94F
12E4EA3A9BDB285BED832B3D6CCE7DA625F13D9C504668753AA079E9B24F0C3B
5C930C245C7C4B18D30A7046A27AA007D54F2A1B2596FBFA1E5C6668641E4C15
421F6D812255D98D2E89EE3BB7AB14D465CB0E4F622144E415EA54E08AF5899F
D8E30152DD5AF9200F8AC8B8FA39413858E8AAD7831B58CDCD3666FA965479B2
A5F85AFA549BEE2E8B72DEC59D297CC24DB89EC76930D071A679EDCE7A30FD98
2D182E86B3CB63C968430895741B98CC3150361B8901E76B80E3B89A01CFB003
D77233A407AEB2B43C524664AE0AB89DF0865E14A2374BC9C5097DA8A9EAC525
6F54531F9515FA7A9458A630D71D56B733A086394C076F82EC251D595E4EE9F9
BE26A986206B75F6E1151D7A6D811C66C3EE048CB2DB05D0E50A525C31CED2F8
389F5004865EE88ED4DE986F6029A4C0BCA95791D20C323193B70D462E6527E6
C2214EE691177F70C00E3CCA1E36E5111D74ECE14CE6896ED7628FCFC441C30F
108F0159505E014A35C21FCB5478A1CEE42E144601E47E3C44EF2B9C5ECE1915
13362AD091F6FFAAB185DDF759DC26288A27F32BBBB4087D2B948DED6C44828F
BFBF98843FD61AAC4452EE1E999CC3901A7FB96C757689A5935BEEA90CCB0F65
8995029D088B980C1BFE78F9D07C79345CAA69F4DB314DC2EEAC844E3320EE6F
8E895A70F5E23C13FDF9A7724A5FE71F2D7C6A9106D0E42E184317DF4428A4E3
D4A3C29F9EAB7F88C96F904A61C147BE8A77CFC638E18403A6E9FF8767233017
9114653F3E146573CB07E954A869F1BB6FED5048613BF39CA8CB9113D9FCD0CD
3CD5E120D17FE4D1553265DB5FBCC07B1ED23BF5A2D925263F0642D7F9D0C274
AAC6D549981CD8A5A23F0BE5153792894E2EC1D323677E92AEEC7F87B974227E
87E49BF062A0768D650B6AACA3735000E477AECFF9C99670502B08373AEC3A5B
F90CC47BA7E64C532EAF889F14897C9DEDC7FA6A9A458600D94973E8E9C2ED99
9BF8DA8733528484627BC648CF7562D5D69CBB241B5FE542AED77488779362D1
86F069C5BAF6F1D488AAC19F6AFDBA7D2F9B0C79E463DAC9531E164AEA39D39C
8BE741364E315E7A1E4C54C87A44ABC9F2A6F66D76D0E3CA4C1729D61AFB79F0
AF65F7263D94DB7D90B5F0EB05D672139182B73887AEF649B7E572B218E736F3
ED7CE2198FA4819FEF76221162163E0E6030CBAB2F5DEC8540F7894F04FCE9F5
85789F401D98B421491A006B52AD6A3528046683C9BC1658DCE2E31AE8196F8F
6636B82C823CE8FE2ADED8C8EFC9ECE13975B73F417DADB522141D21710B9D1F
B63542C8AC4157640D52E8A42AFCC7E10C35F3688B13BD129AA699D04482E9B6
0B908C01494A6E3DBD2F5E24463742B088247AA031B16F50DAA186DD0C099E81
618AF2A19313E987E209E1D792D8A5451711BCF103F760B3DCB112EFA57AC6E7
964CD6B38742F325B080ADF0C9EC376B8B6CDFB86A6693CC2CB60D4004DAE5FA
B0AE8E0E04E2A90A30E488F7BFC9308C93B748B3A350343ED8CCEC5F4A502090
96F46D9CD4831AF0DB23B343601C76450B50E0F5BF3AE85F088C8EA777191609
979AFA19329ED93F01B02EAC7F83EC916555287E238C700A9DAD172D005487D8
1FCD7EED6DA0AF85AA2FEBDD9838DEDC52BAE400A2E89ACBAD934122A6518D66
83C4D7F48A0A94D2B63CC5849424FD0A6B0F8CA07C3E84EBD2B4B6FE4E93B8F4
CEBA2E66131C9991A6010809DA8292F21814EA7DFFC70F609B38E66AB0708C37
B58104B07E78FB4D48BFC86792426D65752AA5EC954DB469270B5C04CF7C29BE
51A9B40FA4A4AB4BB2CEC3DAAA678B23A7EBCAF98097861710D733B5510790EB
12FFFE9D642464F431CD4C5AA463BA71CE104B525874F9D3B5509288ECDB5633
6D015846230D6CBDCD1D7DA837A40CA0A4929782F67156F05FF785FE50E8724E
529DAE3946A0C3A1DC023320A0166FE149667DB0CADB3DB95CE2C74D300AFC15
844C6DE56949F31D5077D0D23A9F679573B02EDE5223B38D2B734D802BB36576
5D1D092407A2870FD52C24D1EE2CFF632AEC235556FDF36D734438ECC21931A0
FC96813D697A04B2B3F3B0817DDA6B84F38C9D6589CCEBC4FE1A2A0B8923F689
5957387686FA472B0C469D8D97C290149FBAD1A52548E29D4DF19FB9DC0BCF64
B60BCC727F9015A060C09502E182EAB0E7D0D01ABC1E310F7D2A2E68F3F1587F
476AD6E7850D0ECB9BA3BBFD9A5E1B96FACC944BDF8C87B00481144E1428E550
30F5DB1C8F9E3C8D8B59C972627399F53074495D51EFD4976ACCE231CB8A6744
AB00B028B9FEF09C60EC7EA62551E76D6FB2D12A6604E56F26766AB98A44261B
400B19CFA88B959953691362BBB1FF3CE9758C0C3DC52B3D7F98424284CD9A28
0EC4310D52D83966B6E87E274F737A4AD179AED13C55F5B2395EE381841E8980
62D65F691C9337CFC51240CB91FBB1F267C4F40723EC60491463F4C49E4054DE
782E2383D7A66CA87E169501CE5DA6803DD88538D8DD38E22689D398BDAD5C14
5B1CFAF1E6F7EBF70A0D6A872A0A9B9874F1327A0333D0EC5A835B1352397BC5
4B113BF9DF8F1DEFF432ABF3634C8A4ED49F55EC482057D17B020572B3A812A5
36EAAC36AE82FDB8048CFC554962D553BE5AFA06E86BD82AF43D51C0EA3E6090
CB145B94451BE0B68FCA43840B1236C9EFA717434C2A95D55F2CB445CF6D9FF0
4EC2312D219664ADEA2F03FA22E81726885DAA0773914440DA3C0787FB5C84C2
4367DD6C3156B4B5722E1E4F5B61922DC4A068F35B9E7EB17E895A9862CA1C88
61169E68CA74E4BB24CA63C80C5ACACBBA97D1003181605A1CE8F509585C0ACA
D8E57397F9B7BE089A6C9DEED55254798FFFBFE2C853FF605E31FBCA635DD07B
98A6C76FEBEF8651DDA919811856CA6D1296CA1A7BE84FE3BBBBB9315EA6D786
9633F5E9B79231AFA4555DB50C7568911F6BABF3E498F4996B1F2A18D763DA62
36DDD7250442825D7CBF851259B0F872D5392470A172C6B48B8FCC44ED1673FE
D8B164E338A7C1DAC3FEF6CB5E603B1900F9FB86718A00A4209FB0E69E3054BE
A30E37578F21DBE61071F02FFF48DA781EC323CE9F04A6940F9B3C12E2B7B235
D514B13BF3E33CA454879E06105E7D7D313EB77105A65EB94AF059C5BF3FC1C1
9A7F085D9DEC3446B7D38E746F9E30FF31BFC9CB72C04132239D415741E550C1
1B96F6CAE997608D08B5EF26C1C7317D6A8D4BF72887D480235BFBA5FE221F82
FAE8B119141D7B41CFD13556569E88C05183A6B338DD38AB88D39F5E6E251D91
D5353F9560C83A3304973B70E1A4CD198838FAC38B735B33627ED8F43A4AB37A
B6E02AFB8BBAFF629CFE81D098BFE50548926CFFF4C00C1E197DD46DFA6CB091
44D952186962C49450BE0A667820B7B366133602D52539A4C2831017A01909F0
12AB89B1A81E894F0EAD4570BD037B8DA07FF36A4879B92AD6F73CD4B2C393B7
AB69E6FCBEC915F18F0170C5C214D83E06D819D57FC59A35B20F39A901067B1D
A8BFE99A676FB9A026489EC583315A0ED505141924A434CD7FB049A99E548232
17DAA510464E27EDE46F568791CFA42223FE124E12F6D74C2B699ECCC1820F9D
053B6B15049418E59C5418E699B68967704D31695637109405150D9B3A9D82BE
78BA903CFE41A030BAED3FD73752C693BB69DD309851430179B57D2AC8E9DDC6
1C0E9BEE7AD5DD407E9C24B5C70672D5613B831E9FA76E8616968E6930E10860
868D05AC944B7B713B63DE9465D57A2992CC43893291BD393C3107BD10F058F6
1B109606A45F4452068BC04A6F55241DCB44496CCC13711EC628A4A677DBCAC5
B938C7ED83799F0A16B3A8239F76E1D3B34CE214709FDFF7F0C20B11FDB0F552
29455C24CF54B6CBFDCCD8537C510BEEB69D403D267D5ADDBEB1A48B1597EF3E
34036AD1E20DCDB36324822CF1C8E8C4B2768EA2843A256BE75DCA9392D9F6E6
4F47C889C7BF19449A11807963BD02C6E586FF9A74ED949D368FCA6CD06906CC
A4D5FE82E13E99FE5A07AA6127A870FF2B0FBFC1F2B4733850A3D613C536616B
1AFE92479384A60160D456FFB8E396FA1EC77D82963B29BB0ED1195074A729AC
1D46459A36D8F643413C54F0384C24BBBC7F83A3DD56F92EBAED840C4918ABF1
9BD44E890380CEA0B0E0CD7A342D560BF8BFEA6EE0A240100F8D5A617EE61CC3
BFAAF1B415329AFE5324BF98B920FF47C0265A721F93E53FAA61998C854A0AD6
7320C14EAF892088DE7FBE38740DCEBA79CD5F19620451BDCF64D88C040B1856
3BD2321E4FE1EC6A122F4A2B51C20F5947D2CADC897778EAED1C49F8035E5137
1E4F340A53F0909571CD4F5B063605BDB361E68674B1A563B6D8D882C0919DD0
EA60A354B42C8975742F04651DD48F38B253074F4E65CDE317FEF0F84E99DDB5
45D23D46D26E00AE0C09D7BE5A4C4EFD8FC5F75E0D07053D05800F104ADD953C
EA7ADD006EA6AB378B42BA645DD935D8F0F5EE370EFCABD1B9A9D2DFEF1988B2
ACA4C132F1F0507C8C9CE2FA9637DD6898F67884BD71EA0645F89E12CBD97463
09D198B7D05743D17711B8E138E42C9E9B2D32880DAF510C5EF83D1C082F1869
429B0A2626B6321ED7D16343DBE02536E476BADB55EE925B6BC8A98251EB8DFE
D087BAFFC6C93AF8FEB34BDDF7C50CB242AC73CBBB5600EA629EE2DDACEB3918
A4AF0A5DE005D9C8D1E651D781A05147B99FDCBBEC822F5B370D856A26074B83
E436B2EEA7EF047AFA7EF668C8A08E585B75AF16BC4AB4E7787E5B53F44DC2FB
3C6C5369D7EFEDA9118D03C899F907261FB9E8A4D171E75C331BE140D523F415
D0231AD3927D3EF1E1CF28C8A6E9FC48FE39D31AC88ADF56C6D67C9033DAAD3E
E1B54D6414A5C1B36976083C59FC2EC488C5E55EF9462D61F15531E735F3537F
99EFDF48B097477DF8C6C3AEAED009FFE827C27FF2EA1CDEF25893846CCC8A07
CEDE7341C8C4C3AB23EBE6039BABF344A7E0FC28D72E62F0A947C136340CD545
EE7CA1E18924329C470DA39B8E66C46BBC887B5180907993043B65E1238AC2B2
3AAFE365C098A20D5BCBECB3377A98DCBFA7F134456D229607730606CFA7786B
D10087678F7F3C2B15E13CEAC6451866F37B75ADB486847049910C570E6B6EF9
C0DB2313CCF9508C2DFA542B0C02B9A196F35CC25463E14857D9D8EBC087E131
47BB18136D9F5689DB181D21EE58A1ECA1FDF83A4BCB302090B54871FFAC0A65
48D6ABD1EA0A321B8DA72AA0FFD3DE07CC4150BF4BB4D4BF7C4ACCB8703AD940
1ED121A56C23EEE7694A608DDDD1962F677E163455A87CD90B90F55046976F2C
0F794C26B869681EBC120A4A232C02A86D095DC010EBBEE3F61A1A2774E68864
D7F26D92B52C881153E8228D33EFB93F057E5969C4861F0DE79E3532F81D774A
D4D86F2122C52BBFBFD38B90A55077C7300F05F1B24073ED052F37A31831EC84
DB558D875B609A4EE86A1212B92B903556C5B40728C128882F638E1120200E21
33D43D184760557E75764E076EEE81285FBB3CCD86DBC5251D2D38483DF25549
506F9B6EF43641F2DAF9BB3C19BE207736A6C72FDC63940F7AF6A1D65E11DDA4
0CA0A4929782FB7A9CE546547C9B492CF6160BF12036F45D7B3EAF02FD5E8BE3
A69D94C97D5FA7F1C90D70B5187331B375E213D71837FB78CD002E65B96BFDE4
A362D5BD17CB75D75F43C6AAB7520FD896CEAA4303C754CDB848E4C457F3881F
60996CAC3A8DE48A068D1C93F641BA743CCE5F96174DE5818862B948215A40A8
7CFE2F88168398A433D6F3C4B442E014E3E5A5E82E52DB5332AD8563526A133B
8800E5D9734B24E017A2E354045A20128D63F320A5D28216384F61DB0CD008AB
7A26A46FF9C82D580346CD9F59A3E70196ED37E6BE3262D1AFBA823B3143B8B2
0CB45AFFCA8482A6D3EB385DEA5CE44B265D0BC8CA8AEE53295494C3C8ECEB4B
047C30DC0E40C2D8A6BF18544E99A9FD9394E3C42D9BC59BE825273FB104452C
417080BF848422D67608F8EA415AF2E3A06BF5F04209BA4DBDF508D380DBED7F
75DBE4576D475F848DEBCEE19135DB2685B5A275BBA4552794E50F73D24F0B4A
8233C59028BF2C8521AB6B8FC85ABE689B800B8365F09F8AD95B2DDF4B5AB8E1
B0DC311FD77D52210EB2073CEB06E68B348DD3E9AB50A684882F5AFAED85E3C1
507666ED5DAE96CA74AEAFF7CEB9C70A0E50B4D1E46638DAAE61BB4D223C1CC6
A866AF0B3F214FCE8BA72D9465FD012CB965F66007C5C292ADA8359B0E91B2AC
89B366B2A6C4DA9D1133D20FCC04F3CA8B2293C0764D9F5BCAD0581D4043FE4B
AFE3B177877D11E271F381990FFEE92F1F9CAB533B9C3FEB1348E0AF57522B18
D03B8DF25A3F8761888A1338FC863624FF83D34349C55C54AC8DFCB09C9B2F0C
AB14F75E0BCF31E3CBE92822256BDAE8A4C5CBB5E43A05C5849178718824AB8E
417CBBF6433BB9F2BF304D1FC05B5AEEC1AC7674DCF9F304AFB204D1DCD22A6B
44A32C596A102C0F60A9D44BF8B637D185FD059814C123CA6247D5428AE10B56
4273A031B1E8E85BC05E553DF79F7077C2A0F30B553F6EDC2A2E3023C2E62064
2FA246C81ED9D80D2B147DD56CB7A7CE6C068B61814D05AC8A8F8107672FD7B1
3109E2EC8645EB7E2BBD8ADA0E825C6AB8EFF454D647D4543528934A36580E9B
582F75D5CAB7B1B0B530C8CC5C411A0F6BF9558208CCE6038D184DC74E2EE88C
97D24188B829DB465B7E71060A5BEB977E77AD6B413013F23F48583AE68D2CDD
59871A304EBC1847D093FEF0BDB775895C474655286ACF62FAC71B93FBA73B4F
1EDA27E19E507053BA4E1475D79446E05BC57055F7C037429483E7FD14F879CD
BB4E991EC009A1AA4C8002CDA9073600635F44CE536D8BDAC4AAF828E7EA3F18
6A641CB8148A8106FB55FE53FF5EE0DEB85B45EFCD015A66FC5ED1ED10C9BCB6
AE369DE576845C3D5938916FEBB98415E929CED05E79882F008220A6798BA44B
41372C7AB6545BC2D8070C131C842F60D62339CC143DC4096B639112292090BB
8AC15C873716B43DC44B4BE7DC7E992B6CF66783ED5EA5AA229C26B1E372C61E
3A5930652DD0F80BEFFF89A5599AA476BECE74636E26F2455E3ED9FCA0037C5A
A7B354A4F1A88681D2ECB82FBED648C292D1AAFF87AF82D8258EF28042808B58
72580E379881BE02909D7E57B80AD9F009C2775F81A3B79DE04D5E3E9E29621A
6150C1A97A337F0805ABEC5249C2E32CD5AB27AEFF1F1FA4FF438AAD412E9D33
5F7795CA85B35535A9588EB120EDC3052CB5ABB2066EBBEF22F8D7A5B5ADB3F1
E647E30EB37D134FF654978EB4E9A98904C670CBFF1BC3FC26664862CBDC8CAB
B9120CB67E2CA8CBB1B40DBBC1C609E8B41EB84019E1C78B8C7653E799B32A75
CD5183A6B338DD38AB927169E76E9680299FA4EA2E9AFC7987A6E80CCCA880F0
42EE6E70402FC405934E9D94D620345557BA27CB74D36D49C054D6700D8C9109
FB93CF9F375A0056632E546F4067E7FA87EE1746886736F0C6924197D641C47A
0A86ABF247A03B1A1C0CEC57184C24657C687237C450949DFAB7D83E21762325
8B4A00740F4757930F50E4622150AF52D44472E1E78B86E81FB0223686019C1B
7160849635FF109BB34EE02A83786BDCCBA6280DD71C4D5DFCCCEAF73532524B
3EAC4AF0B22AC463CE09A4AF690F4ABC3CD324DCDDB0773FDC22697CF36A9C92
E35E406D7C7E991605898330137C720A17D44F3AD1C76D424DABA50B232A8254
B034F051838810E00112AFE7C86504CA41D3562F89437CA7CE8267C80C7AC68D
EF58169110617913129E86AFE03A3FE086900EE3A9B4280591B53CBD3D2B934B
001B454A9877E9E4121D68FBC635C1D4BDF02DB16BB306DE577699EC4F8FDC96
BB1F48A319EAA6BEFAD348F4E327284B7D2D5EC9AF9869671F37F461CEF14417
645E43B29AD9150B290D4317C93BEF33B7CB070702264C5D046B445330797582
791DD904F539FDA69C81621E5B77638B2E3F3602323512D5D98EDAD2AB686AD4
DF72974B91DD155A92A4F88A8131602F434D6983A90194B818C87D972A542D38
9336DF1551CBCFE26ADF277251A46A054E3A42F2632233A9B31EC7C2C99EDCFB
7BCE9F2DB295944CD75533B511878F1E0C860D73ABE46F2B028F5043378F2C64
309386CCF03AD81DC0E3A1D9F8E127D250AC3F036BF57A88427131AD4F8B1F75
7AF2BCBF17ED2892BBF936BE4C7FCCDDC07DB70D5F7573DC6112CC237EDD279C
FE314EDF1EEEBB7088A67C001DA712DDE1BCBD3EE7567B96B866450212AF58BE
4DCB66EC6674C112683010486E02D85332D6ADE66F386509773771E24CC341D0
D9F5D7254E2D5D5560476A19689117793702F8C9CA2393A0A072169BFE02C6E7
CB151A83AE71EB3A065289BE6D3A5EEEF3F0A1424467E199F9B62B428E24079A
D0693C27C0C665E2C2ECA811C2AF6A85000808971FC44F0FF1C2D569AC48A0E6
E0162331A334F93DC5EB2E65CBDF1EFB707AC25F7C9EC4EFA5119DBEEBDDBE29
741201F3B326C4058F2438D94C9A0DA68BDD5EBA3971CA14F1F0E8A455774262
E18B50EEF72F2D14AC1AE6B11AB2D7B1099140CE83BD3212C156A0C13DC12712
D719D38E452C6038C70A372CA658D6D67AED8ABCFDE9A58163F8D66A425E637D
D4790CC8A485CD0B52744014195463EDFAF7DF63DEBEBF603B631AB2F750D818
BFF2877C698E0DC00CC722B6AF6C024827E9794515CF01DF07E771E6A1D218C9
3BA7FC25A663FF7D4278CC27241170A7DE3FAE02E12BA803C598D1E2D8CA0C8F
12C9C91C2098EC4BD1C6BEA07E93C31D65EEF51ABE225299E73EBA4B0692B482
B731A68582CF3075C81454B7F728980ECFB1E999F469BF8A384B169AAA18268C
7AC15B9A3B0CAF7FE67993DA29DE530E8A6887BD14D5D5D95152A953414C4338
06D12211BE2FE74AB37870D97E58C2B9354F994EAD2EDA8F1282086FBB05CD46
B7FB796E132111DD36D2F8EC32025A8D38520D3D74014C7B0EEA22B07559FDE6
CBE80C58A1FAF8755443E51EA27298697109B53734BA6B3967F915091D530C38
76C067BA03EC69FBE4DBFB62966BD1C113A2A3EF11E4BC5189BFAAA5FC3B713F
6E22D1AD6D3FC9EB3FAC0963E96D04B6E9D31A5B5F39262BA6C5FF3F0ADE1EB4
2E33C9F336C8B123789E5393D7207888EF79FDEC0A94ADFEACACD89B2CF4993F
F2737DAD16647A150471880E2C727BF554E956AFCC01D839655E012B55AE27EC
EE6BBB47A941AFBF5DFF648A29A2AF374D8FB6F4C25E19FE83DB8AAFAB881ABB
C082A347F00CC4C1DB916BE5D0CA4CD7CAD0240C7E07DB4C67DD89532495144F
F3BD8432B24214F3C046A1F66D7C7523A62C741198AF6A356DC8299FCD78C487
613BC7F49876EF58587C027C54921944E8205963AD8481028C5D2180863AE8E5
F4D4C608A666DA6B7FF0CEFFE8ECE2CD35442856DE851586A8A29E7AC7FB21A4
FC61D6B296B6B608E8ED1ECFAFD9477E760B5202739AD91C5A09F08AB018A1F6
DFBE0C02B704915A319019D8735735EB151B3C3C3C80C46745E7E27119C2E2C5
6EA5C8F822C51BDDC55735068EA241136BB15DCFE08B3574C625174D1987D232
3AC844A204BD1B778D1BB4A87E3A3BAD8D21CB2B0A4AA5E59A52402A55C161FF
15F22DE6C9243DA60C22FAE39BF912B46F42BC71189749B5BF67E2A7A267E75E
3E72C373CBD75602C93BCF08406EEB67E4FC98973E4E9FB1DCAC3D1B7E589784
07B84458A1D041678AE7EB5C2A9450E8AC588C80C4C5E75D19BCB2311BA5139F
2DDF56846BE31093D82A3D81ACDF45E9DD67030C3F0A688DB50783E9643A9FC2
FDBDABF137AB39530988382B9F62953B0EF0BCE9B23331D45A14721C735F4881
F430470BAEDE0988E8E60525B37ADAE9FEC6581B615530D6B683528296D8827B
8E9B04F8C6D112762B8527CBE3381953B0908617A28D2D6EAFB9D59483918B15
7CA4719B2B4480B5E84069E3BBBBD7C2FBF83097DC4238C6FCFD62A33AC222A6
5152809DDF2F5E13A3ED367DDDAC1E27A90ABB751C1687BB8C208C8AD90C05C0
A221D58F729A353CE8901F7A28A76641FA47D6A88F276DC410C5BA58504055C0
902D5CE8F05551182A616A66585F789C0B9108C6CDBD14F9587B6634462F467A
CA13376CB9655A77862494752331B579DA6D805564AAE81D1A384DC2598D406E
D7E8A0B7911EB8CA10679DA64BAD913D13176255AB6BE8C4D15DB3DE48D8C34D
8F3CCB5E1B957B5F7AA4CAB6FEF118F9CDD6500F64A5B1264DB872989A9F5DB7
5FD346019D2B86EB21FC2BC6F585B621FC39F60AA49973A308FC31A15F849F42
5C90DF7BEB2428FC66274C833BA22D2A9012287D8BA8C4CB4307A1188ACC084E
0E00F7C975FF818253E68DF4F605F5D980FDEA5760840269E5C9D6102F1D3AE8
12694F637A69A84A66320FA9F283422F93DB1A210C6917BB6A04E89C45507BE1
B66E3A6E715D9F1637C31B755EA31D26BEAEB70F458904670185422DD886BB8C
53B28E48E232FE7D29562B3B0A387FD5D1AE50A44DAD397382EB984802BF9BFF
A80902C38ACDDD2FD96D9E404038CB57A801878980B52AFEEBEBF65F1CE39196
6857000AEC1C53E0C94AC457D222E566C8C4F0B8614D7DFF502C408BCE95B2A4
842915C784191EAE36081AF285C06C5AE447C992C23750237DE085205665F388
08D8D08F92A7DB4358C4152FF06896F798A5C13D434667F089B4B876A7E61D6D
890713607A2C91134AD241D90F205A885E02C452F3B4C312D2954DD2D521CE6A
1DDD6A801BCFE9AF58098C9750A49855BB79DD2214C6A6A3B96BC51784F74D7C
167556D1B0B4FB63461ED764B530D23497A6B03355DB9719B1525A1E39620FC0
EA0500A1E37FA4E98ABC7B33EEA500102E39521252EEB16E909E16D694B2EE9A
3AEF311F51451DD607AF73DADE659B2893B59E81369BBBD53B8EE2FBDE9A4DAB
584DF48B1106A38CE2C4E7C3E63CF78BCC3D61C52DE00DEAC5AE0452C97C3D2C
4215C7C2D600DF66D287B3D8E97A544A146ADEA4A239878A1C056D80B361F6C2
D8C97C2D2A77E09104B5A2641BFA38A9DCB0FB0BDF53F2801FEAACF75D29536C
FBB1A5BE1DDB72B79483DE686E68A33CE20C97AA3D34B25AE8B6F83E59EC7A1A
F42EE975797830468685029B26D5FAEBF2CC7849276A1AAA5F1598EC7A9A573A
79CCD3DBC278DC7D453F813638EFA565CADF3958184CF236F97B5C2F519849EE
CC61B4FFA86ABF086446AA18D71F35A780C30EA9BCF8ABEE772BF8AB008463B0
9B4CD634C69BD926C8204270CCE76467E3A1F8D5BAFDFD3DAC5A6D5C97414F74
57EB664B2262987249C560A78F87D3790E017C2959A1DA04A777B592888D38ED
E68FFB3EFE8387014913475DB2A5F3876C929B0A05304A6430A70EC98C2B16BD
77A2137AD9E2DE4CA0AC1E9AC3B8B92A16F5945798863D59B566F57018D82B15
291BF997261DDB161B7102FEF90EFD757B75C6CC68CEAEE80B1BD60D80C0D951
EF5123584D5A35080EAEF9DCCA500F1F2FC2FC75C371B9DD86A99DDB2E1FFE7A
614379295D8C23AA46BF02AF43ABC8C1F1CADE5CC9BC7740507F470E29A76141
D7A018B18DF793FCCBE963052FAC7E57A390332403AF373E622E11F561969A41
4192447E458A884F750697D68EFCF582E7018204A466DFCD252A4BF7F8D36F0E
2F0204859A9D92C134FE9B572295D7FDF91A1998D57350CEDE8D8720A80DB951
D1D9FAC8ED3EF4D4B2921E0742C63D2919166684309A799D3BFF11CD94CFFDB2
9B4A69EF54FEF08241C7BD0291A1F80AEA1F884939C3382F74668E0E69CCF8F2
90683546915E0678897FC4E1B65E600F1C9F40AFDFDFE2E7C19B6D1E0F9382BE
A982809A5264EE7B1DBF351FD9F074C98C6D159862B0A8DD2D1DC8E05DB6D173
A1213F53DFFDCC9A06088B42C80E4F808B5872580E379881BE02909D7E57B80A
D9F00AF1F9C858F16956ACB667389428AAD79DB681D8B7432286B60FB92820F8
4DC9A924C2AEB7F805F5C62E9FC8B9E84B07B339570B8B77FB16A96A43A9CF29
9E1C9523B5B9B145BDBE4A7B53759A53B327A58590CF7C5C68F35EBD38144987
18B16AC95599776889FDC6E22BDC1E924E1C6F28DDFC296C5E86F0126AB25A5C
A2875B48C61CB8112A4CFF51291206FAE8F5F752A36C01D95CB3DB66B0161829
40F344353330E30EA714B955D213D7101BBD6095F0B3D2E25931E59CA6CB76F7
0DE80A66BB2E49E7152535E781B50DCECEA6F9EF4C130173AD6BEB78663AABDA
B52EF2E3DC5ACF100DAFD2C967B17E1E0B3EDC32290833D0498F242059D4F357
ED65D81F2D7CB0657B9613BB8D81A407239D36D31E5808B80183B78631EC10C8
1D49B48F2009CF5500DCA48E4802C8E3286AD62D05AFDCDCE4E33091132D471E
DCAE386078D362BE89617CC9B46FBF2F7279FD6A1A1A68C4191BBF1F9F7D9E50
1D27DAD12D2932F016DCE03DB940B2714D1A37F03E39BD49697D30B8BCE8B934
1D2DAA72F7FDE0C839AC04374FC83E8FA88B00D0AC7B10B67EBC2E6782664A1C
37D159D01BFF4511CDC412A885258111779F36A69DC3BB5F4FEECA2A8F28EF29
35387E3210CF1A247ED66AB36442E4A57BDB39F02F68E3E7493E3449D2E2FC5B
D3720DAF7FB7F77692F226175A38CF69B612B1D9406B342A763E7724F400933C
ECAE417DD81142320E3F8C7C00EDD59B4D374EE71D3B4127C06741F0F200DAB0
05FC6E8BE11546D448B0FF3F704C206501B5C710D215C7C4BC2FB81A7D0F2E62
8A36466DAE934AAE1C8B84B9B799B74A0759DA2C495989BA9C17A3C8C1D51E25
936153DB527576FD9518321736251328FBDA76AC3AED690BCEC83DF10A319F17
E45B1795786F843A93BF102BAAFEAF854C1BD9FE404699FEE82A2782EDA9C846
CF14ED9925014243C50778EDDB5E0A211B93E376E0C83142A7A44E5D6FBFDFB9
ADB85027CE2E7B98268BA8823E8C5C5C3190BD14A877AB6F612CE47DEF66FC01
904C3E187A100DD8F74CAB4548273611A033DBEC91C5F97B1B4B25BD03261CBE
6AAC3A849E823E2487FA39F5203500C72DF7007FDDA8D32652E361DD6E66EB02
94E039407880CA6EC3E248385857D02F1DFCCD587FB2C9665F0F64CE52752505
45BF860CA49A561DCA2222E4C0CAA140269DD38D7C84A372E0AE74BD9144C14C
7761E17EE2086F10409130E3D5FF524894F50A1BAE78BB797262048C6586CBAB
0CFCB25AF98EF04FD9A48A19AFF4562EB407B58BF87B2343A1E2A2A2DD7E5A4D
36495811D8DE590476BC09E1B208783EC0ED65E1E3C92E1FB57A9ADDB9280C0E
01296A4C3BD94630FA22E117A7C760397C7A28C5E751C9927D3D2EC3C61AFE1C
7FD58404502E223CD442B1CB9670D79DF97AA466F1742595B2427469C92E4216
8F1BFBF4CEDEB18FEFABE1A2AB2CC5400F6130BB09B8F6F8084D2C53C196F1BC
7A4AED528FA5F412121DD29A39BEA584D1F8C9270424AA2B500BB04B5ADAF648
585586C7993C4AC85F2EC38441F38342A9E940EB8E7D43A0DB0F421591504076
1879E4AB2AA27DA04D2DC9F34BAFC0FD1B43ADD3DA09CAF30B691D7178D115B2
064C6D8A55356ABAAF656D14F1ABD33338704DCEE2968CB73B4822E616FC18C5
1D383A6C9D059992CFD8A2E6EE1605BC7C3B139BA7033D8E5DC07C9FDD1EB3F5
125EC3D25787C228DD0778B3BCA52F1B24409B5116C3CCA07CE40164B33CDE89
0CD3758A157DCC9CB9AF0C426A08CAE29549C8C97C3B1CE2D6BAA9FA4836A7D7
59CAC9353DD61AF1F057DB0309A8A290905FB4B267F66A43AE9E49E29C51F8D2
A5247267D2068F9EA2192F7F56347B3C0C194A8DDA2D58C0C3E1A010DBEFDA8A
2A12F30F7AE019AA122C81214080A8FE1CA2C10F79F669FA41AA8AC4F8FFA3C5
B35B65E75BD54CFD0D1326AFBA67AA9E2427F24C4F75CB65D98D965E91EED3FD
C02EA1379F2784B6B09CE3BE3BA018EDE70E33665D5D5C8D9474D611522E4243
288C4850937C07D34F2C1284050468D3E822356A66A98CA9E1CB491AD747CBCC
25A1045A9E4D08A5ECFBA6B9375D7C9B5C40FCA53CA98D5F395ABF21E8A25299
543FC09104A39481128A02F05675920CC84E10ADB15F158031D2B260EB8F649A
284DCF0732EE9EA3A06685EC01A02A4CF8C2A34F631FF1C413D5FE0C4A7808FC
409B790F1A0A24AC9FBFF0147C23FE79B7CDAC9B5364E3C60AECBBF06FE3C625
200740206B21F24B97AA940E9A0A39BCDEE6D8C12ED57A6625CD5B3294C7B9CA
647E44F7C894836F762FE26227EE140052C2C5BD7F341FF5AA784ADCB4B3957E
1B8ADF7C2284A00E05B3D792FF1277973E013AC2D49501F64E0507B2814046F5
F281A0F19B5B44EEDDC6D26234259D19D242193EDF1CC26E38BD5AC3F6DFBCA8
548260DF67B27AD5796DDC7BC594212494839B0F3257E901DA5D4C86F297FD44
BF67CD44D56F68109E6D7BFC4195335FAB747F14CC8864DB7503BCDC7B0987F5
DB89D4ACDA94644672A3B9BD17C9A472AB3B7C4A96A3C3DB6CF52721AAC0D757
8B37AA516F1276C49B2A8E194D143BA44AFA7F4D7D1E598C710996D5E85EA99A
A9225CDEFE692BF9416BE29326C32CD984D7846E3A516B4F2345AC4C1A6E5477
E8045F2DD7E1BD7191B011C64D7FFDA2D888F27A015B8574D7D2AA9B67F67651
8E1573C064FF190D732897BCC7490CCBB986D19D6A506E10868307F3FD9F72E5
DDE270D8741BDC99FB04893E5CCF2276FA65C8F425BF95E03B9AB0E90FA46377
452E4261D99CA110169AE6B7BAF8AB4BABF363084E7C9A86FA44FAB0A35CE547
1EE0FE843E394EE43D1AC03D03FD3E08DCA18B76F49F0A699E2A216E2D7C7129
B6C7ACE38018AEDCB353A977FC3021B68544841E812DA057B5E8A41CF821209A
A6ACF5835891750870F9FBEA97DA04FB77B0863B93A84AF72A6587AED5325949
EEEB184C75CF308DC20F6C6B95C0CAE1224658ACDD1E7DACE489D145857797D4
07FCC1687585E0AAD3A215685A821C29F12F421EF45B5B885253E3E4C3F91DC2
6A23F60D78A5707F4665DA8F087972EC7F8A94078E52E4916B4226C4CD72F0A6
02188878876F386067F48BC04EC3E72A8EE0447DCB9C9DC7D182D4CF7B00356D
AAC977512FBC70063089E2DD1B7E4D54C671C3A2C5BCDDB901F485FC8A2D96FE
16DA2F5217FCF91CA1B2D3783CB36CE59F4A4C85D7051429F3CC1A9F014F1DB9
D189006CB9B4B283F331FC4755868902D030E73D327F86F2F87BC134382CECF8
DED7E9B69DFAB2DBABD2D6EDD01BF7C3EBF1BC4862844250A2B136580A6A1DC9
21E42A52A0326D6717A9850994DF7CCC7E75203264A3CCA22C28FA3D159068F0
B7B5EDAEFFBEDE80D99660D603C1FBA68C187BC83596ED8AFA9532ED33E53A76
E29B3AB846EEE42906C1DAC9D932F270788C2EFBE754AB22CBF622701B80EB29
0E12FA3CC5CF3E4C15B8E2972F31529502A1B62AB1E722EB81F703132D4CA148
ECC44533385926281BAE59E19F1CF828E1A71166AB0A1C71481187A0EA31CDC9
1C8BE4E1801D1E9DB1C48686C7AFDA7284D529BDF343D1C520AF79C0985D07BD
1EFE9C33A5C4CFFF137EA9CE95418B23BABDC2852DD0BE6BF327C76D84CBA35A
515CA58D66627F363FD3658C313D68AD7DBB2F6DDB5F06978E1C95690058E930
3C2A8CA0DCB8A2A16644A7146D643432F79AAD579DD6BEB9AF098CD921D9E35F
6DF91842598058E83E8971D7BCB5F3FBF8EC2ABA549DCC0F696BBC70D56FB7AC
5169EEA49FA886CEF6A6126230B7B931A58AC694DF2E22B65AEF39949D80CF45
39EDFEAAA1821E48802F50EAC6B88416ECB9C0F4B88E9D7B3044DC4F50CA7BB5
66EE7A58A4AC721FA274CBFDDADE65E47E903F144EC97F8EF8C1CC03AB466F44
D17C0F660F1EE26E52BE5FD65BF9BAED0D918584BF9F27559E5D5E95347F3FFB
284ABC1E8616A013D7DE94E99C32B2FFC3AB0BC11886295A8D7650C89680E853
07847599B02E5ABD3CF34030A56CEDA4DE5E4480E8C933FAD35E5954B5A07083
0EA0C3BC5E2056B5A862A0B9B512A78B70F3639D9C9C0A712263DFA3B1B2F74E
CE5DA824DF79FC46C6FE7F7CB3676317D65A65453DB511134E69CC34119311B9
888D0BE9FE4F91A96AC539A42E20BDD6FD8514A42F0709E7247FAD0E7113321D
31A2864ECCDABFD1463756D73334E31BA5C0DA73D5059ABA803CED200D7A575B
93C222DB98B121B0C7DA5E83132564DB2FA5802C21789F18A552B76A2E623A4C
925AC511623181C4F173F051F92DC0C7C49D61529D8056CBEF9979BCEFD3DC11
40C4241E30D5F370089095DDEF22F74406D62B7F754D0A8440666F2102283902
84F3C6DA6841E4D0F09DFEA1201E994D86490EF1CF5ADA87BEFC526A8E036594
753164749FA485F20D45D8E76C8157463F19C4BE0A52FAAD1E2DB6B411073690
C562554CDB4E0887F5EED4E9AA134CD56A7444F10DDE7283AC972026BCFFAA82
03921DF8A60A35FC7C8D83E8A3DA3E89DFECCBECD46D60ACE45106CEE8D8944F
92CDD89EFC185A793F2C4CF3F6F024EDA854D4E210DA13B276E709580CBDADDB
420D1397FA3C197CEAB0E2D2AFD05DD845D340943EA41458D6F25A7128C8CCCE
0C92B3BD6D1C4C1FE98678AC70DE858210AA262677BF2A8E12B7AD6D0B8A876C
09C3F96E38B191386532A5260DF0F74866843E9F8883592A80D9211D4F6FFDC0
3A8B50404B4DF2A9901447986A95E45A8947618AAE1C3699243AFDA421AA69F1
4E491EA1195AD44BC6EE1D541C21AD4EDDC6120CED436A314A0FDC90D0A5EBB8
CFFC46C55F7C5F0EDA9817952B74625141C3586248A070B425B65B423E0D77EB
5FBCE6EE555D124C54AD51D19073E59F94BF27A961525DB49C5F3EE62DA128A2
642E6BB4446ED5415127F574145098C5365DD22D58C0001A4B9614D75AD152EC
6CBBAB15219F78863E3AC6FD3192E5A6B405C224CEB93112F98A74F7503BBD61
641D7A7AEDFDBBD22BAC44ED6A3327CBDA98DA80BC0CB93F8522057ABD69DD5B
7CE1B2A5887CB4A08F719102D3AF84CBE52D71945D3114809F3BAC9AA144AAB6
1250CE8AFBD0474CDDB7229C7A6C0D61344E401366C4C11CC7472988999A498C
C68EE6DA0069DA132CCF943D3E03AEA2AFF5D76BD846AB80149244D073F0E979
76E06875E8ED640769A562604CD9E955A44A98656EA5B02017AB950F3E70006E
9B64C4F083ACE2EE1C75783548604D8CEAA6989FC9DCADEC90B0DB11444C7D22
E549A40C6A2E1224C8E9D968E1FCBE5998B44C5BA4700CDB7A3D59618023AA65
4E7762A0C21AB371E9314B400D010F0ABBBDB44BE61D17E45F49AFB2D3E9A655
D6B48596AD20A9EF2C035C8C19166B767F0F973019105B41F92F125E3B487457
D36E103E912CE3BB84CD0D3EC217BE8B62B635FB482064A6F6DF70985F864D80
CDD5868E3E57DFBBE03AA618B142E9A0E134297516BD96CC861B33FCEBC4037F
FBFDA07F00849B8D075C6C796B15131F8D5DE879216A7E08B92788B00B510E46
BDB7C4A8C2A94933A038D8A85C7ED17D3334BEACA2E48ED105F29EE3214B292D
7826115A0D9DB001C4DEDE1B2E7D177F93116D74FF1339FB9A6583EBC673E916
6CF94F3F5423CC5DDCAFBFF1B2C9290F491AB229E1AF107809FD39B4341967F5
ED986B69A4665E8DB369894E7991CF1C8C7DB442C6BB03E64CAE4AFBE05D188E
A4A818AADB6DB67502361BE7DA58A339823DF91B969E857D7A6FF830DE04F70F
B5718D0BFC8F9F4DEB36C560755DACA0AE097EB41197C69D5ECF34A73450B534
6B95F8DE25E01DE30E6CBD24F54F752F3B31E7082D01C2C271E26E4CA5DC65A7
33320C423B9370F54AD9AA17F490B9BE2CD4A48CF79B4B972AE6F7A927E9F551
C967FBB66344E44A985FF1E018E57E80C3630F023AADD86B025F5009442A5141
BF8D5B7919C30451B2226D10E6DDDACAD8C1EE4945CBDCBE85A8E6DDFAC033F2
EF2695499F58DB90454DB741741680DDA50B97F020956A61C93E5E83C24AF328
EF70D07C34E65499B57267BCE1950D7CC92FF26906D52456D8D4A4A314510A4D
4A93C50CB886E3CF6667D8E1E9AAA514FD87B65682E2A04E2D6B2034B11C008A
29027C94E80A4552C22CEC24BF194650BE79A751E9C89B2812319F268CB3F31E
32087B2059B2A7166408DC6146A3EEA387AE3AD480526A905524C1AECA51987F
AB373661C2402A4258B9278E913F0C60D1DBE420CFCDC65ED6025C499ADAAA5C
5D82CFB6E9FD26CF50527F5FC939413DA14E5FD8A14B19EDABCE3718D5FC0480
8E4A5F3250DA58FE68DD5082BCEC42409EE9BB5F365721AEA808C628723B594B
745DE96DF7B44F8AAA4FF903E29CBDFFD8EE1F71BED4A1E3E63C7439F809FDF7
F4788E5E016AF4B9A670D9288883278F9C7D6B7EB1BC3F14FE7F9511AC24EAAB
6B1B7E71E088657FEE79C9D621A49AB9E9F53D9872297A03920CDF1730FADC58
6197EAEB8DF705D41942889A85A13B16D0581217EF1767F6FF1EB0750C9A4D8A
1500E5894E289F32856626E3D5B1E8B3FD4F4B688D98E3A56FCD821EDBE3D0AE
F11B2A693F200E3B6AE984D283A655B1B4565DB44DBDDF54E6CDD1232BCD4D6B
93CF198C2B5529FB2B91B56567C0D609702E425BCA96E15D4FE811C65E5B3EE8
81DF78E160FFD76A13F875380E6EED10A2BE8D0DD7C241FD0CCF2D63FFF02979
64938D816BD87879B9D5C74E0D0D81747AAA9D326A817D2A92CF33EEA203B3A2
480DA075AA920EF2048F746D37FBC91CFA1CA35EA2CC875C659144685119BF25
EBE3882B8351DFAF8AC2CE9A3859883DF0B450F77B54AFE8355F8103F9208A95
27FE267051934E36CE9AE3A3D01DA7437ED7F1FC853EF48794219B8E60A2345A
84B671148D734E710FA8BA2407D489C7372C5F33E5858D8E0265558D7FB4B8A8
7D70F441D957B495EC7294F05A9C02EA1F083A5854043DE7F5652F7B14D392E2
0C0BA771C1695A09C06A2741DE5C70523D50BCCDAC99570E90A63E29E043EC76
00945F52C2F17B40E13E6294270DB771F58DCC2D09B90DC720D1F66D5A67A8DD
362BC22E7C389A02BB2D646213304BF7EA6706643C08EAB96F403852D86FABC0
2345CEE76FC27630D8562319CE3EE3CA8285567D5E99A288D9B9E2C870545A94
C85E068F2FEDB85E8FAF2A6AE4384412C2885A87963F1DD1CB2B7E425518C0C0
44494CC25C8924DD7BF5AF8E88FEBB08C57CEA3A0B8BE1E373FA2CD9758CCD48
1AC3A91E96C613FC361CE7A9D02A07493302A5492BEAA38BE0D48BECABD3A2A1
86198D22AF69C045E3BEA377ACEF8F3B9AA7815229CF34202387B87E6206F132
9E6CEFCEAFA4D906BD29720143E91C446A8CC577015980B1E3475278C3B9C32F
23084368334562E0A9954C4C3DF079C383C63A18DA18F14DB79366C3B6180C4E
9891DC97220A5EEC79FE5C0BF33BE149CBCD2EA0946214FC0A29A6C214171C35
80F096AE2351125316F457726EFFB624F1BCEFB1C0C5B622961CE3934CDDFA80
8AE7EB653DF34349B017F065FFCC5A822A55A2CAE77838C331CCE1173DAD5E15
060F799BB70BE58CDCD5C10B5F1F789B7F18BF1B55D6C00CF11225E5BBDAA335
2494D9272B6B2C2DE6916B1AD16AC4BF833FF98E2DDF73809EE979A6A5E9E683
D4EC65B6C6C0FB5F01C1C30F96C86A85CCACFFFAED9646935341BD381B50DB17
FAE545135DEB08BFB8E880CEEBE8F3BBDED7FEAF1D66CE43B879F17EA645E1DC
F229A597287A907131F31F784D85A88AD266EC7C063A2F7DB5B6EEF7DD8E75E6
7DC8A016AD44400A0BD6E28B8DC18073067F361DF333A71119C04E7CC70DAC37
D90D4BA80FFC59E943255ED3A88B5A34AF63E7960DFBD653E153B5ABE8940256
7A8D73852FA1FC2627138AC8581F952A2F08043FAA7B417A7211DEA0EFAC6976
97D4329FE50056B7291B1EF0AAB6E36583A896A780A670D8B958F66A9EAC3144
DFCFC999507CE84B4BF965F48BADF37A3F21176209BBBE7EF5A1F8595D4F3A56
B6FE9C341D64C081CE611199C2379265DB0AFA1E08FF5177BBD476A1BEF248F7
4FF64C69650680A1B8C6870D41382049975686F34FF662B3AD13F854707C7DF7
48B6EF722DB7185B85F9A025B5B5E8F48EEC52D4173B4D2ACFA667E8F829E478
DC096D3A00BFF263AA41B13EB77556023364579C2318BB64BB0BB1E57EF6337C
6652654841FC4F39E908B27A21AB71B8020025137DEB2B62BEFCFE0C4959B054
3960938801E76B80E3B89A015B7CB3EC83EFFFE3DE21E0D9E0B86635B9073103
13D9F6DC6771A8486543779608D46C75981F89D9DA4505B66C390FB0E70480A1
C86945AA47E08058D107C9DC7A2ED1CC6EF05EB333738D144CEB0020BA594F7A
CD6F7A450D7CA4CA8B2C0DF9FBC899296639F8C46F4C2AC34B26FF7B3273EA36
79DBE1A44C3E0F8C99A0E11439EDB020DBE2D8F8848A7831531CE1DC2FCF0330
9E952D45934EFE153FE4C4A2080026CCAB1BDE9C46A909C273E44732A397CFF9
A3B034654EE86924F1D3930A93D3261B947B583845178E3AAF05DAE63662F0D3
5010F3788EC5221005DDDA6FF544D84FE439CD25DB539D8BED802D679177C35C
CEDEF16C8D4D648C43B19BCEFD9F22FA3560475C708A9449703E0475487ABE24
D1A4F970607C89B8B1A85375A637FAB1585EF03F4DC9B1FE5F872AE3BD6E977D
470EF4A13566CDAF839EA51ADD5EFC80247BFB2892A5DE06733C98AB7EA60F6B
7C27F7052877CDC1097815C64FB268D8439BDC865C886DDE268F6E5F143F5774
C5C66809FE37EB5738D730D8101ED47F36A3678FE8DD9D3FFCFCA6E068D2F141
C8BA6409E9FD42458132CA44757381E205C9DB0C1C07916CBB8636E56D652313
859870D55DD78BE1B271E0BDD4250A23C6BF1714AFACD51EA412E31C701D0D2E
0A7BF10E4A114EAB14692B4E4D2D7DCA91DEC708F2DF464A17A26CAD8B098A39
E3EC8ED279082481DEC248E1CEC0A9DE53F77B5B5AD7E02CCAAEF41416DF30B9
F8FBBA4D37F63E6236017E1DA6E47743F263B80CB39413525CF43BD6F26591E1
22345C8C9758A0AAA78B9E22775A4E387849DA84D2231DD858C8AB6B8E913430
8DE740124C7B1E1777C49E3D8CC261B408E053816899DC43ED3E1F905B910849
12704115EADD41D9008EDE242F3B0352712192DFF543532C1C4E76E1C0E4D5AE
B94D5B3798123AA3076C206E48DE88C7EC63C8418B8CB57B5AE7F9BB58926E9C
BC92061F7CA8FBBD376F09D0F68CD9481D5BDC0E125346571CE0E37AE0EF36A3
404CBCBC497CB636D52B9671B5ABFC3E480B9E3B8850F904737FB8EA1F6430F3
1C84297C38CF63963449B77B319E782ECA5EEAF9D1FDDF91379D928A25156D00
00FE78E8966F1B1AD24F28CF561771FAAB445358668DE34EEFB33D132830A2DC
4045D6C15058CC1696489EE499BC2EDF13E68D043E2B72CBF587351A0F324703
5181A3BDCA350B1A1342ED81E6BE919D51F11A648EAC1774065137AD5A93CF19
9228A4DE7C4B5333D3D4C8FABD71B8709D32C99DD939DA6E374219B0CED7F9CF
8A02F664E8D3D05B0020A427FDE75BAC9E265F104F2095AB043BAFB84296FFB3
25B40470B3D870EEB5E235160ACDA80F57B409CBFC373D06899663147B03C02A
7DB40701522E5A75D642D02F3C40884DB2DA22B96508A13BD061F096E6481DD8
B18D3FCFB9743E4FB2E23AE38EB5CF9A3793773FC18CC4C4F5AE1D519D30D3AF
2CE66CEC88697196AF226E00F9D3A57416543CE88EAFD99560BC8A46F28BC94B
85A39E27E32FA999782A0EA49B0BFAD5CB9987ACF93D541651CD027DF96D5784
A815897FA6DDCB2162D2CF2DF8CB754462320793E650931F925AD063E36F1C06
3CEB4A70DD0639273D956CBC42AED236B2E2689A68111C3189DCCB02648536D1
FC783A38841F5BBF820CC53CC53ABA1A824E2599ED0D25476B60B1E7033C94FB
21D6636BD65822A55D9862A9528362A3C076EDFBFDCAA167E6BC67D053CA41E0
407CC22244FA26B58D3FE3EE5DC01A9FA9D3DCC7DC3FF365C3DDBFB445181DD8
21CC4DFEB7420D2913F9426EF7EB987BD2E7955FBFE779DF6B435CA7087A5FF9
B3BA131A89745742C3DDA638EB11395AA5ACB4BF86CA054E816459F7731FD2F7
2FA5FABB6F15BF0106EE5410F8117AC1949206DB58CD7709D9056CD846C39418
F71B3BEB8B9155131E85930A7E8B4804FB24F152F6EA9D61BC1B5B9BB670F40B
BFCCB4ACF5A65B1B1C0DE0447D9A24D4359B360E338DAA4599542BCB00BA194B
AF6D3F242A9232C0FA8AAA7563D721F201166F975A80CA7D460672E0039CAD6E
1675394D64BE53D3893C521E80F5A40F0AE3297F2C538A2A3EEE804C093B6B1B
E15CB055828E70D7103DD76D051D46BDF5C5F646A1E880D51F1D68BC05E03071
E46527C23F1DC211CCE75AD38FFFBC180DDFD2C2F705A7E28EB7014D4047A68D
CF5C05A6F708FCE159A44D5A82CD714662C4B5C4244FBA905901CE4E046353C2
314428A03816C08B047148E29D66ED71023DCC4ECC8207DFFC49E0F243142735
9159826E2E541AA6EB060BD1DCCB95D2BA019530B2ABB66031D20C1FBD775CED
D511CD8A595ACFD76FF8F8177034236C62CA193F40DA52EAD90E460238F818FC
8817BA4C3F557ABFD86264BCFBE6558AAA21C046DBC84633CEEA1F2456CE9F9B
64DE83CEC65351A58CA38D9924433FA7BD80B5888D3B101486A6E1B764E51107
604AF50BD0C7C0DB4E1D888E619D545F86A82BABA7E2FD3D59F49511C8D330F0
AD6E3920FAD09C0EDEA358DE4E5B37B5DBDE6CBC51183AC6EB21CC1430B86116
774F83544FEAA151CEF230274989D3B9830B53CCC23636622DD9D4A2D223C145
CC25F858E34B6D858AD8497965797A9626DE0657A4457E30775F3E4A5E43535F
553D7AAC0DBA207CCE07898F5CE69BE2D9BDB50DB796DA41D2415CEBFA95AB79
0C5F9ED5586A48432AC33288E52F9A0BCC59501B84E16A0F7324E5F861E492BB
D5DA49E28DC653C08AB5F741F33AE8CF4E4922FE5C80A3F35C69CA4627BEA4F5
8AF305086F33051755365C1F4D9841024DC04CC9730A1779B0313AD2867314BD
342AF671D6E2B9276D8516F7764177FEE448BC2921A7FAE6AEE9C421BD267BB9
197CDAD61F8CE5AE59F42CE9B1E5754A2A55898ACBEA2C04458A25675DEBBA99
536973B62D732A457CC16525691EC311D3CC6C589792A7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusRomNo9L-Medi
%!PS-AdobeFont-1.0: NimbusRomNo9L-Medi 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Medium) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-Medi def
/PaintType 0 def
/WMode 0 def
/FontBBox {-168 -341 1000 960} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E178732AD0E135F772215
EA7EB7EA7641D31502E1BB9661E7B0E875AEE90400138F2AAF4A8686C73EAA44
E5CAB467770A3D12E9807BAC97B24A8EFB0E276760F4F51EC7123C43BC6F8DCF
9A2F496A9172813FB461FD870763306B45670653A9780FF409B734CFA74C12CD
150B03344295918C4ED893FB620A9499404B83C71152BF2F2DBF769000D116D5
EE264C016EE3E1241018F59544CCE53E5AEC124CF6C59A4D7D7D511ECC9AFD49
6608ADDD237358D7CF8B4D1C5BD1158CDF2D6469D9BD6E6D9762ECF34D1C3C27
5F69900E0D12AF9B21F153585742E999870BEE3DFF6309CD82968EBB40D9C269
CD4306654AAB6734151132DE4194072485FD082FBB6DFCB3FDFF9E1FC88D9483
8AA64B5825293978C70C9EC095B18352BFDC34B4BE9C939384E3281BCC6B1808
A6B61EC4E47BB6AC14B105FFA7ED6AE99A1CA0B360D1A5C24E0FBB55C66F5811
A5CD0625654654651979A8C4C3612054181CD300CD42D1D9CAAA589118D6C7CD
5EA8A9A0C639D5539430D40318F4B739DA281ABF2BE2765D44F45B218BB192E1
9EFBDDF7777E8730FA7DC0651BCD5D68EB743C51D9CED55403021D45F77CAB5E
7E892B3D1F875DA86C030A2387487DBAC8795749E849EC93439C9E22EB20D11D
07DA0F09EE9356D55B8D0D8555F1B0EC98C72863B376D3436E10DE2FB1AB9453
DADA019DCB64F6D059AB3A95B28B94435004C9A8BD3FB80E2B9DE0E330D03622
3AD965B4283E6DC880A2130185CDABC053C52693CE3F50557F524D7CCA9BE05B
FF9597ADF5D1C432C00C0B0D8EC2CA8436685B4BF3E2105B89FA6CC787B77637
248796C2F43872B3BFC8011159C22EDB7149AD8932360A88A223CC638BED257E
04908032ADA750F17279F7331189C322CB5ED9B66E502945BEB1EC68B1C7BCC0
2322EFD669C229B28CE1D0CBC0005FF967D0A4383E29538AFA13D41D484D739E
487D497DEAD8F661847A5D82D77D91219ACF666E565292384728E58E1A489054
8C3E34B413A6A550C499218E7FCF43694CBEAD016119CE85515F5EDAE3CD483B
A0F32743E7A189708AF0CB6FBAB22AC8F23604FFECE038C838472CA40ADEBF08
47AB1D450E07F9D51828D25DDCA679E3FAE54634A37AE1A5A778365C5A2C8A27
64085AC775AC132CCF27CA164C4721F67B63D52E388B17122F15E5DF391674CC
B6C9EDE307D79E390068970FE0AB210337558544E8CA59BD85F4DFDA1A69D18A
95EF6E1C8A6EFEBAF9D3D0CBFD6FA67EA64945440BE6F34771C491C607BFB199
7469D73961C0E8DAEC14FC13ECF37514DBF9C5A991943BDBF66C0ACA84BEDF8B
54AFD478D9695FCAA0E4FA51CC6C3A84D3D5904EBBD089B189203DF7239A2394
F2B5338FB0603488E278EE68F3CE7397B142062BCD6A62AFF936B2ACEF919E57
21FA55672F22685B5305F5E84900C327E20248F7DDEC431EDFEF8F922EFEBD58
EDDA265414D834391381C29CAC17FACD0A2F071460BE0D3DC7F6450E768DDF4A
D39B8E27065A8D236EE9643C209A36CBC8AB1D87C7B3FDEAEBE82AC779558FA9
15EFAB7C582B6CFAF3F8B174B1223D531067BA929EABBE1404DC599682276A0C
03309EBD39951A398883FC919A711E8E891F64657D64B43EAF4ACBAC482D06AF
D458F0DC3F4885030096DEA6AF7AD28E2DD526D66EF00BB3F4970C162A20E2A0
3AFFF9D6B0AF70E1D643784CCA5F0B76FA16D597879F762BF7CE394D18DC76D2
06301A735F3377789FDAFC843F9B3B635BC7871DBCF2B8BE5E7E6290AB1C4B10
165DE8C3E9109949A8FC60CB19EAADBDA8CE8FA7FCCEDE1BD4B8566A268801A7
2428B8193F4A9F02506DAA39886CAC4D93D6E6823E197EEFB4A340040C1C50BA
4952CFE767074B3615FDB279B9BCC0993871E9718A75DFFFC74395B532A58983
B7E3AB32A13A3DC4FAE0E34E485C31FB2952DAD2A611798A9B23C8C0EE5E1CDE
0C9307615D2E9E878FB834D9FAC5D75DF9C35CDF69EF9B3A8CB135C7722D415E
7E2706105A9C525F3B8816B0196E9F12636472F5845AF507937C0D6B5A9FAB91
FEB3260A1B119B4616703C7A02421BE4F6FD230086F1440BADBA4D67AB94B9AE
A4610A677E5847AD059551C2C0D11DBCCFB1B9657631C34E9374ABAB9645CB8B
AF03BC18D41A89D98DFF1E1AC62FBE8333BC44D2B83D65BA382812971B458EDC
4A896302D0BD6960EC93B33505DF478BDB6BC5FEEC5907086772F4BE1CBA7691
480D037E344259421DA14F1FE0237FA942778DE411A2DBA62DA32A517D50C8CE
6C8C9F8C6B78723AF91881416DB353A4EC3E07F0916717AB6C06FA8DDF547C0D
626117ACD4000D71140AE11A9AA37B7D8AA14EC605985475DCB84E699D517293
BFEDAC9C180142EE927CE5E6038C8C6D6D7DB26EBE4A48143744512F50241449
EEB9974E8E0938A950003C6863DF4ACB9C7E4AFBDE0B1B884CABA6261D5605F1
4E2C7D01913E76469569EAC0B6881518DD9B993E1FAA706F5212D4B4ED5B4B8B
5B3C5A16E99234A137D6CE6A2294107FD43C64D7645BCC4CED4F40CA5811C124
1522A861AC0BE0A529A1054A42578461815AB9803FB075B85D2B6270BE9A358F
B4B7902D2F5CDCB756A28BC69BA67B1E2CD55387107449D96E7251BB8D3A8FD9
FA7EE73C73C19B22093D754480018DAA9E22DE537778A874393AB3183B6CFF61
2DB0179495891C1E6CB928BF6F5B5CCC85FE892D7EA4E23894AE7F8B784A1BCB
56BB88722C5506ECC3A3F89C92A50DFACCBF9A89999CD2F19ED2C0E7E2EE6A38
68D742B3EC15E1DBAD3CC6AED31BC020F79110CAFD3512FEC30460534CD90FAE
04C10356F0A261709FB9E76D3D1298B4083EEA4020C6CCBA3D022D6AD1A3269A
31016DD78F575A9570B8BA65B16890E478E86FAA615CD68DC2039604418B4CA8
B50DD1E33A4AFDD8524F951886960C1CCB365196B12493F1D943B4F4C836A60A
7F0D6D7DC137A904C96EB7B3CA2E65F64E81E3974AB182380E87F7E8D7398211
D0CE805938270B6343BFA30F58A3967DE26F939827457373A620F6647784644C
5640B7FA3957F4ACA332BDC9FEC0C5EC01AE4434AA09AB5859E08FD415091B35
32E858FC599E822313CE5044F0061492E80E58CD2B71BF4E384DE830C0536E16
DC43317F19D7D896DF65D9981BFA702484C2089D473335EBFCBF20ED02E5BBC5
D8F696C1C635AD4C867E5F4ED153D0B233F8FF1EDA9098F84B8D01247E64788A
96EAFAC855A9276FC2868CE4CC9C2A10A3F29A917CDB0ADD125F3A04D3608A55
356ABAAF656D818042DE6272576C6C5AB3B0273AB68C1936059511BE031F45EB
C73762638534B4DAF4C76C5D597CF8B7CC5A26CE3B9A1D56DABD05379F829CB8
E4383F20E2B1A4AC6CE7B941945667C6AF3CBD4B7A0B3A047377A88780538751
52E18F0328942C359B49FD99FA761EFF3FF400AA41F055FBB56319FBFF3C9256
8811014705B6608EC8E93A86E40B3070A8741A2B86D0F0F71D77DE7B4D89F5A4
9B4E51E8A6705001CAE1DC020E577FA569C59CCAB867CF2D3F12E5B40CD288D3
E2238D035F6AC83E492590C87C6E23662FF0B6783E357B97F5104581B71AFC92
79295F497C9461782E5F18762CEC7477E7D8D556FE674E4EC6751B91F83EC020
77B92C7E2500A47093B89B43A0176DF107E34C74F7FF1948D156021140645EF7
DB2CEF7DD51C376B59B33F6480BAA1BB7DF11D303554BA06AE21EE1677A753EF
0DD7E4934783E30F224E6CD4E1AFA9E60E7D5DF243A1FE810CE3163CA7F34164
6604136683B353A50F5A9AADB9D414F944584C9D81ACD2DA6F0B14FF0977C90C
D779F458E7BEEBDC93BE29C22D0481C9A4559D9E415EF63B1C4E79B49D4F0172
629D1B371A0E9B0B9FD690B32C065F67C9D0AE5143FA89AF9F013A5D8056D150
B19F3B68FD8B2A402B6949CE298E9597103587DD0A423A06AD8E28FAB737B784
A828E82CDBC93625A69D8633D1F4D0E6DAC41E5F723EBB595820685B49463208
37A6F8F72B52607EC21D9B88457317ED7C797086DA87472972FFF2A5D897B655
4A9D8394DDBC9ED83A40AE0296A08A087D28C9FFD64CEFA2C3F0CDF4B9DC8866
D633621AE9965DFF3C59FEE27CD483047E847894DB11542DA431E07FC2DED1D5
88A29C4E3DDD1EFD56ED70E96B4509B2769A69555AF3AA7EFE0DD1DAD5824A69
50D0A9A11D8B4D0C9435B8575DDAB8AF93587203679A974E13D88C64C9457C35
68F736647968BDA68859E3DCC1BA11D3E89ED93D58DB095A8A7811DD1BDACB1A
0DCDEB157C698BB17CB6118EFD7A9FD8BEB583698874BE021C043BF0768501AA
0836863119C73A40E28536D4F76E939EA1ADF6DF47D4BCA679C4DC06F3669F78
4CE4B59F9895ECD991F885F67E58F156E9EAC6EC03F58240B1B3602522067165
9778CB6F3B30B0DA15DD9EEC2201379AAD1D87B07AF064D0CB72C1386E2E9B21
9794ACC0690C21D29EA43B1230428F463892F902AAFF6478586B8F18AE6F7C1C
3C919CECF3D8D19BEA8AE4E3A26FCB6C3ABE2E0EC9F4AFFA17BBD6B5C16D400D
C8C50F54C79A2CA39B9625215C146CE6B6B81033A749449F1F8E7D58A9833978
34C2DC4F35968EC27EBF1D446F8D1A112381C57333A8CD78B0B8798C82BF9E85
21D2B9C2F428FAC68C9B8106ED55C07117D7D6D347CC6F5F78368A4B464297E6
3752F634883819C2301A7215A0BD486570D48F7A6451A79F4041BAF22FAA4A63
618BF1EAB068DBBAB7D041F62E2638EDE67F02596C174598BCA8A949ED8C9285
48AD75FAB4FFCD167834409DFDFE5BDA0C5D35528DF95E9A711A4D960253655E
EA3BB7F47543CE4C3B9BF891F5249ECE32B8B1F03405BE13073025E6EC478F82
575936BFE72B9493014C0523F4ACAC422D8CAA783F919FA3809694B322C85192
F44015374DF3900C9F42385596D311FE93E4E743C3D5A4F5C2CEA8683125A005
5EBD6EFC0CDF2843A07895295A53B97118C11E53FAD9264ED3E1F628D703B356
84EC595DB084BFA0280C7AE241375DBC823CBB8BB5CEDF2BD4E05147ADDE199D
7305D775BEE3CF3EF10F2294778EF6DA3883C99DB6A0E138109ED4F17878BF81
4A6BB0840709D1240576239940329386B28ECBC47C02BE179A496D2F4CC30058
61D9D22D66C2AC415BCB83023D50397DA346403CCD5C140E7BE27106BBFD1211
6C6091E14780941929F52442A0323EC2D622B5969A2F8F3A1166AA3B64767407
DE3E554D27F613160341433700C29A8417A7CB29B3B33B3C88020B5227418AF2
DD95FC8D6EB871D53BC76FF502455B40FCBAE9A42780B318E068C7918F73ED14
1A2C3AD29BD1A0DDB0F25F54C5303266625959FCED259708E5F29EE4BC9F71D0
CC059BFE0ECADA74E5E10262F9006D5F16497CF565CD201FD65D0138274CAD5D
0847B95633BE22E59D452B634B53B9CB0C6844A3B103F090158F1A41624ED249
85545A41071FAD8EDD01651746F55BAE6D20F11A5578F86FEB25C1ACB394183F
31D783711AE45C4FF7E43B182BD85FD6FF960420E3B5F8A1C120887EEABAE94D
BFDF8A78969FF3C08562DE4012BAEF33DC7403A14DA5BD9E017D60FC01124BAB
E23FF62E75FCA6261D796DC4A59A6A3159A5DBF34A90316A3FAC59C4958749A0
95671A46A4D8C410705B100FF1033BE012DBECD8A9DF070745A4FA25CD1EC7BE
669035A5A9D4B3E79EA5E68F6564178DC033ECC07E01852F9C004219582D3342
48F4112434932EB2FF830F13216037E919C60C0CDED94710CBB3D43872BD87E4
6D78B8667046DBE06D8DE2AC6A5064CA1A499C24FFB00C635B437AEA2AC0889F
255728AF9156CBD14330180F2B2EC0D1A66F0270D3B74D7AD629EEB3A59EFC1C
7C6DB667A55FAA72F4200E5C196D0B90C13AB66C3AD72887C07C079225CE10C0
F7F5197A7F00CC42FA4885E92BEB5CF40BFB18C1053462C2493DB10A2BA3F1F8
8DDAA81703FB8236AD2DDAD20F803E65C7DBD2542D5EDB42780A56B854CFADC9
26E38601064C38AAE6E3770D030AD6130F44EFA7CD5CA7F7C3B0EC6460AF36F3
A5D6B2E57AC9D7FC1E4CE9448CD7D00E32944D0FAA5292F033D140BFEECBD9D7
5C25B1DE870FB547D657B91139CE999D41F62F3D55A9D81FBF62CCC99525D028
DCF0F8019150C953AA3EA5788239D1FD4176B9C310D77544368AAEDA4B5DD9ED
6E3482283ACB506A2D6812D4676F344C788AAFEB2E05BB7966CA5034B8EFD58F
C08C1C1148836A645D52C01CE8C7FF03578C4859B55B0365BCE2A9E7FB346A9D
F4B7B0F0004359C8ADA7FC13B78593125DBCC3489C04F227D170EA0C1E8E0212
94FBF881122746ED4917BC8493FA539B98E93F5B9CC9E1F89A84BFE9774C8576
19F0BD15B6667B8825B774B161BCC0B2F509DE97AF69B284FBB5586F0FF2E489
16D20A8CE276FC313D6A101898D1A6BB0AD8D5662A85E78DC3BFA39629DD1DC7
5B726E9D4F8694D3A4EAB1B3F3ECB1E68400C6706D29DF0BCA1B5C649CF209DA
F2FC450FB5717ED9E45A05323B272CCB6A549F13261B527E9DD897D6D5A602B7
D3ECFF3378AFE9D204981F4B2371846535939358D6710FE564DF384C295209B3
E9C8DED9DEDD21F775DAC89BDE04A2F6DBBBDC8E3794D72557A93BDA43E2CFF2
55F163D9E95C99D81E836672D314CB6844CC146F9F6FC1DE4BAC36FE80177F07
702EAD9D4278B25EDC54DF07540B3D0A8968B62AA0F5E525C03402B8AF7F49C0
0D5E266D3F777AE7520AA88CF79B4B972AE6F7A629860227F4B848B51A93C106
8562C0544C6722BAEEA36696E017DE14CFA8289EA7B72000C7B2DAFF141EA307
9F0DD83BCE2E864E7F23789FF071B80A9F2FD46689CEFE5B1032923ACE057116
BF383E47EC322AAC5913DA58130F54F117AFB4CB3BB8589CC384C08320FDD4FE
E383C64A4112DBB063EF2F53FC4A48CE83712BCFCD25C95E3838FC80F902AF00
F7E6984B18C112B27E4A079FCB4191E98D336A3BFB1A105320CBDE3C0EC9CC5D
4E136ABF870708E84B8650B854C482B7EDB72D0A48EC241A23A91D409827FD13
3AC943DD1BEA4A303697EA12F26C6D8D9D14BEE9262BECF1F824F718B21D74FA
8A73F20E8A26A9AD1D863047ED474E4752198B42FF38FCBC6EE9405C11F9E2C9
4E6710CD2E07A5BD3E22F67FCCE2BC52ABF463B881950DCE2E4D42E9FAC2607A
57C73FEA7BFD220ACC0291BBF3C9F5695738C5B9FDDC8E650E9172BFBCBF468E
8A116CBB6952F7F3C21049753C038C070D71B5C30C9251A80AD041A960A9E62E
2B739A621F11E4417597F0996C1B2706DC46F7FABC98300C455AEEB30CDD6E61
08747FD778A0042C6E3C0FDC9F9F7460CAE36E35E6CDF1347E95F49CEA673A14
10189DDBEFFC14D4313EB0DF3CBABB682FE69863D2680DAA1AD2545744E7AD09
55C140F1E39BB791D6530E19F1F69F478CB6304854CAA2141013647112E76114
C8BC1DAC0A8C10D7A3D4468DEA7908A22802A499B8A992A17F75D36F7194C1F1
822098BF8D345869D96C57CA0CD69CEFF2D139C60AAB16E9E4CA1846CCB5E231
EB0F561005CFC72D16DFD66D94BCE9E2F06F4956D608A5967C362C84C2E455A4
10623A232C05AF325E033E6CA7B01BACD70812D93A06A64B95E285E8510CF3BA
E9156F623543B9BAA59505BDFE233EA9446AD1B3189FF0E6CC4D3BAF9CC53803
90D36BF3D588AF9055990E906792FBFF5646559D62D7BCFFF9AFEF3DE3003C3F
8BA2E7A1392004F08CF3D9D9DCC908B52A1C88A127EA84B4A490D26807F99BD2
73265EB3F9B738E22A33133961E82F246D046D0ACE94CFAAC69EB87BB60DD45D
089DF5D0E069FC9C5910CDE6012137D6A937AB3F1C3743FB11089B0D858DBF72
972C037D9351A9A83069B294B52654AA786C663DAAF4672599BE1A30DF50944F
CC7AF3B22239916261BF0FA9DA10106588FF7440A6622A8261C981A5CD9842B6
A7C1A0A58BF08A3CE1C0DD2511DB06F9C8BEB8E158529E260ED0FD35F425F0F8
F0992FF91099C74E1A0AB3DFCB0E47ED8B3B0E866001A84FF1B0619B98F65EE7
4A8661F405924BF40E49AE3D7453C630FC3431FA13B33044057EA66E480D9250
A1EEDEC5CAF7CBD26B0C925F8BA452BB1E11D4905717A1E902188730872E41B3
72B91DD572C84D58420B5CA7DC7AAC248A6B28350DCDEC591BAD5D5E15665A71
98B33D563468EA059894295D09B1A874789AEE55D53203E053F321F1FAECC837
506185D9E9ECD87C1378943391700058A870A70C393231DFD28AE97B010405CE
EE31443F1DB5E8D6B290EF6314CC09D3904739509ACCE0ACED4509C0A4F07CB4
929C73CE1FF74C45C985E6F911C4DCB789C35E9E6123371FAA8C9E096078BDA8
5CC52093E4EA79F9F325EA5ED5BD5371D6872995EAF9248B1C88223AEEADB8B4
8D368A047FAB4351A23A18FCF83FE596342D061024EF603E165B051C6F78E10A
E3A682909C173AF8C485375606131CBBAA8DEB99BF186D35CA1E8B35E7F40E02
52A274295EB838FCFE2DE44EF169048006B4D73B8952EF70B90309DBAA20B54A
CE854107F555F08DDB65791DCA917354CD7B5811A0D1423B9D4021F004F94A4C
E7E5199C5907AB71D0022CE6032112079FCEE621D9B1B0D0D177E00CD8BB551A
E1A6C641AF242051EE041608C501201A23C3C162F11527C26C33B4AA716C3480
26B4E784494517023CE9CEAA7A3A2BB4DA76EBE8AE53D3AFDD3BE8A2B6FDCAE4
4126BEE92C14C7FDB09D1CBB17BE896D5345537DFDEAB03839B353A4481BE4E2
36001B46951A51F24526F215DDCA6ED1E8D2A7C864119F4A8663EC9248F1B02B
8970B26CA487CF67059FF4F63A09DB608D1DE74A0F05B29FB125A206C2E6CCA8
9DC9FA2AB5A8A1A79D53BAFF1B0A87EFBC58B68DA3D0A8BC242266DC5A00B68A
28A833BBA6EE18EA8BA4813532A40867AA56FADF3E62F346104134A1456BE362
7C2D7F5F5FB0661766573A78AFA3E9B4A26BFAE7428D3B01E4775ABC74502C3E
40736B4F1BCE96F586E69E5AB0F184A806AC0506C4BA102CDD921CF06A9C7C1D
A6E7F77579B1CB5C2792AF3B56D37F2A2EA4A289A4D65AAFB79EF2481A9AA58C
EADE00E27586C6230BC48FF9FDC285428BB1BD3234353EDFBAE3DCABFEE337A0
3502AAA881EF4FBDC99803A8B0C40AB081A42768FB2C9A3B7053720AEFF500E3
585897066BAE8AAEAC174E1330372A2FAE18AFACC74586D3DD54067F7779D9DA
069D7D9F49E9FD460B957D4B1952198B7F6F1309B1DA0F7077DFC804562910FC
54D05C9F604B54A8E2FDAE41D517EBFEED56F88D29C975EAEA4A33B0EECF57F2
5B45599778863E3AC6FD31920AE3AB8B1A064AF76DB4D2054FDE04E792943257
8FA818A1BB1B63CF7634D84920C033EBB5F742F4D675B753392E3F1B6AC89319
2234651FDB9BA421B014B5D43C4C8D71CEA56FC8DD05A1556446937A451307EC
4334AC3684DA647D0C39F7C3AF9C7E540150F35FBF01F6821FFDF3B98E4D271D
F52D2291468DC1C2D6D1ACF3EEC6FCDD4B4EA03DE3EFCFE208AC6DA6407D2629
819D95C8B1474C5C4E0330AB1CE7B1678E3821635D8DF59CAAB72D5DE8018128
6B7FCE257D6F5E42E9303E48340B3A8E7552EF80DA095C2C5BF2419D726AE3C0
1B36D71E0634900A8FB56F077024B15C79C08232C25AAF8080231C994B6D1B7E
FA7776A397BEB5509739005A1F33D594E4E39A697BC951926087AB4AC7E15E44
710DBB863CBB7DF654DDC6BCC0152D69AAED97759D906EC603D337116E7AAFF4
6FE05895E2BFE006082D0B5CDA85DDE85337F5C9977D820E70CB639413E017DF
79C5036C5C4134CC851DAB59505FE93E8C5493E8FE4A667B44A1B3DD29C877E9
7221B1422A3B47185CB6DA6E9AC4800E62FEA2FA83C044054EAF9DE38B2A61B7
B422B1A3EE0A83A0456676915076C7290D3DCB7DB8DE73DFFA067896343973FB
B99481A43771D817F52681C14DE689DC578D3B4969998B6E168126194A03D398
0A14E8A8976D3B872B3F92ECCD38463397912737B40EF203B136D64A75AF8001
16982FB2E775176EC855FF06D2DE6ED58B50CAB89DAD2F314A1815C2DE40ED1B
229A4859BF5EF4632476DE5A98F730ECD5F6DF1DB8ADD7E6A17351F41CCDDB48
903150D0969F9CC47EB3AAC7B89EEEB9E2F9CFC6BCDFD9A438C1097D4B9D7E55
7F94414FB8334C427EC79D598E3A454269984D57C45AFD346545AD9E82BEF643
E2D48C902403D7562D045D4071892364DE2F824E1C43343B5F3C400A0935F14C
416A1B731273D2A06548F10636A1430AD3909BA1771B3D60D60D6F88A7007D82
6674233364B2414616ABC8B0342C6326E79809200E3B8C7EDC1661C4521029FB
6351C43442F0A49FF4D19D1A14E5EDB5EEFE4756B3E465DC6957569C07142D0D
8C0240121183298C0A256E6E32E3EA6E8D041BE661E7A4548A54023571DFECA6
6E0657977DCC5B62AAE47E6B8FB0144A861E53B3DFC6938DB2128ACDE600EF35
D20AE7CEC718C4017ADDC3D3BC7F1A06B064D30B108DB8458996DE4800556902
C4AD926340431109B826A3F23AEBD548E10C71A937596710EBCACC89BE0BC902
26FD7DCC2267359A6CC965F3BF81EA6E1B6D921BF3FDFCF57B30BA747DB8C0EC
672AE7E8BFC4C58C021183BAF9D8A0037037BA321C07F827B164432F17455008
F1D4D2C9D54B1BCD10DD7958F06FC41A77CC344EB7F10704CE39D819D28AE19F
5F271C42169287DA451B139D2AA8BF58CCE6D3C086645D1BDB1786DA473B76FC
0CEC089B5B2A64DC911A05B7D0FBD3BC15657FCC9BFA61B95DB2C119DE916B29
DEF03F51D15B540DE0B0F9B625CB54C9E8DECA4A162305C5FAA3CC082A1CF2B0
2D8E94207DD447A47EA15AB7DEB11A698E94896B1B5C0E993FCF12ACC5FEFE48
BB752B10439B1C9A22F6F2C0297F26F5E4F61163402E938C018477D107652BD5
9E002C56B3DD423BE92182406F320EE84950A6A549E6BEE147D4F691A1AF2364
2190BED39B54D866320877A767FE000D8A3386EB1AED930075F512AC73798C96
68E38E4B93D0746AFB81B098049435C6A7ED4B69E23BE70408309B77FDA513DF
A9DB4C743658D8D43AF001ACCC0284EE83D6B900DDC00D3C82C524B689F96E3F
EA51EF125D16E90735438650565356F2333DFCF3D97A98FCA949B1DA71AB2788
5183DBC2E6FB530E12EF9AAA10A7D19BDC08F635A6259AE5BC7EDDA3DD607576
110F2C8DA0F6D99170978A037D2CAE8AF5590D96D0908022518338243E295806
9A906E35BDA72AC03D518F52A23D6051557830982E6D29BDD2AEA65CBF0472F1
60B9DB1B4A2301F1EA27DD7817A5C161B243B4E07695968FCB1C0AC1B004ABF6
1B57863F0A872BE54272E1A36B29E132634A1E3430A426F17C16F5C02A7F738D
501ED65EB81BFF764DE0045F2785A7715E76B238A94A5329C679324059B942FB
A2C6D303C6050239964D2311F07753D04EAB8EB29941DDBD19E4C4631299BB87
09EC9196CE8403CB5C9E775173199EF40074EF4650381E96D9477E218184D179
89BE0F3754B0F2CC93A738C93E0ABC541424D651D27AFB2DAD95BB56A33C5F60
25FC7FE9B4A406477CD86B0D3C2089B81097D01168B91934BC6F0BB4C7B0D93F
D4BCEB50B7E52DEBB61597A3F2C61BA94F2AFEC2B8D9676EC1D748B361BAC154
B38F56656F69A86BC7871D6617B3D346577BD2E7706538C768242F3E5B2129F1
8F5DD5F4EB8BE76EFA736430F6CFB9EAAE7981DCE7410F600A9DA88D93E2B153
D5C8393BE73948F66A033816D6BB0CB3B10252F2FE390CC7EC90F75D62C06462
64B1EE7F85198B921D8ABDDC55A6ACE465AA264B4183103B108406F5B385B52C
A41B064681C58D18345EE6DD4FCB35FE529C0700EE5932E347DB9D495B98D0DF
FF3B5BE8837EA00B307BD659189267E9654122BE968078D7462405425A5E0FEC
9814AD4A07983923CF622BF7105DE6596C289041B03FA5E336A8BA835D1A7D10
A49C5B8D5CE32715377B7F62F4D603756A5644CC1B10A3E45CAA7C8504891D0F
F157EAE0F2246676C0C43C37CA19C3995BA177930559699FFBFA3957507D28C5
3A28F80E1A887291EEFE6E8443F4EBDC395E7657A4FBAABD36F651322F7AC6FC
7C071EF17DEFFE51B601A9F1C297128C325376674B4FC620A6C933683151661B
26099E0510EBA56E1F55E510C017CFC2F9832A98D50A7C1599E62D4F5F056C25
12101B0B60780178DC15BB254403F3F9E716D585E6AE259EA0C1E0F257C8BFE4
A8FD27D958832190C4CBCA2F1E1E16014F47A6FA2DD78AAF8728203906453B42
89C7F4675E6E165961E721DC90A34E0C02150A143BE5D88D82FB72D2A284F5CD
B324C4EDA1CEE120CD696E1B8EBD04F93963F44DADB00612EED9EF5FE4ADFC14
518092416C6A38E084C38ADBD70920E66E98BCC73F56B348A9DF5E29044819A5
F8BB070D866432AF822EF00BC437639A89802B6D535E6F2329F850F56411D44C
9DA2B0768CF33D2F9B2537BB11066EBF0C60508CBA780E0D7635A2A07B20BF38
1D04D49B2A51C14F87AD123295720C928EC3D3919A2625B4B0F4ADD0E6C5402B
9E06147236C60FFF648FC9A58914E33477FE95AD7140BEE027F5F89C96E4025E
1D49BDA82DC70EED328C1713B1D14FE617F664A13583659AA65654BBBBDA241F
B3DAC91FB8251003B8A2B10B0E6CBDEB1088B452B9A7F5B03FBBE8C317DF16F7
C9022590446E5ED7E8B4FB822A2695E432DF7582E296838D7D7FF20351E89C3B
C9784989C670A1990AB2E36FDFD23882413B67E1B8CB880E04D3633E874F7A91
7737270CC0A27B29BE2086E44E7B47ECE15B8653E7A17D3069D2FCF7C2CE5F51
079FBC1084DFD99FBD2384058A6B27BF3542E63EFB6040EEDD1FE490377F51D7
3A22D0B01EF998EA356BA823EACA5798479B6CA8EED472811841D55BCD76443D
6282F03E072CC74FB02DECC3B8D5FABA86B9894D80B86D04A61D07D4538E6575
1EDE2EB59C4B797C2144E4B5AA258F0600DE0AF2BB55466BF875F00A6CCD87B3
DFD124A399DEEE0EDEBCA2790E00D8FA7B4EC97256B827C1D07ACEA6F17CC7B8
5964255F7346DC195C4C43F716362E5EBD2708B4648B0BCD9AD728BA2601FD02
F84C32F85DCC2342FBF36F73C81B3522218938C9802C9744C6D774FF34288AE3
EFB23B8AA2DEAED56E199CBE1779D398CBDC1F8CD6EEBA745C99AB0C6B89FD4C
EDDA99EE7FE13A4FE464928242DB2DBCBDD36E8DC4EFC3F19D5F68DD168864DD
5DDCA30E060F014AE66ABACF36EF13DA3ADBE4189F6BF387847A0173F345D491
98B7EA1F0F37D83881F2C64419E8C562766771E80C3684B0BCA0E6504116F1CB
F3E58FA985142F1E16D76C436A19AAAF7D56AED851B19C7B9298DDCFE1BA52BA
6DF06FB0A928B26DD217F6A9BCCEB7C8863AD36A62E0486ADECDB3B43B53A5E2
09FD5C5E852C8B5920CA48B5C5EFD8BC2C581EEEB2BAC5E689B83F7551D5D8EA
E30DEBB423D74ABC069DE0587C2C6BBBCBED6BF856B7521F39C81EADD2D5648D
4388C122AE46C4D818EC74D49455A35F71450D7D901E3CB45D4A63FCCA8C3292
E78DE92D08CF118382A92BC00B1B78816A7AF8CFABC0BE3A026128BD3D166A7A
15BA7AA3BCEC0FCD1419F421B132D295A066E994336FE95808288C8EC5B3A115
AFAE3F3C1C0B6715E9BC6D9A490BB0929B355BC798AAA588E52EB5B7BDF905DD
B81CC5C334CBC85B65334142CFCF9032736C11AD60C7B43F96310A46655D4107
85810B50F0488B8A3F09D893656A62F16EE0EE73DA019CD5DACD0739F15E54F6
AE9D4A326228D433CE898BD47C07A427DF7187590C1300C6CB82B5286F47CCC0
4BA2DEAFD929CF49A29030D2803CFEAB83364AA614FB07E3FF53B63EE675E414
D6F2F613A5EEF5D51BE02AC508C55807F8CDE0CA8B2683E0C51473A361F4FE71
1AC1741451AC07B02012B9271A2EABDAD59FA3190616CE9FDEAA8BEF7DD33574
BD7B36B0A817016F30CF0D03F2C219FCCAA353C59C06E046BBB027941BCFE5E6
79150CD27FAC0A935EF24ABCB07141AC467E04D5A908C3077FCF5E11C7F169F3
1F3137DF9FF0DE9F718B637667F38304A0DFF55C1A56DCA4D16C84E03F225929
77462D3BE6A04237E7C4484D3F7B568DF53925413B9E79B0A190510E9705D5B6
E5F4F2FB3FB3D0116A9C4A8B07715A1E7145519C2A73428C73A5B8B5DC84DB27
ECC489DBBEF01A5AFD1CB1096980E9AADC1E2850E490DEF4EA6A235207DC9A50
A42CCA2CD2718D75D901C9EFEBFE00D2CFA1CA20D0EE844284F9D870ED28CCDB
70CB5521416A5F7527DD76E350F26E7AF6DB7152809268437451D3F02C54761F
04C2628DD9FCF58AFA1344A2C5487F805108EFEFFC7EFF18E425F5D8B1E1EBFA
E52C828C0392FB5EB83BC64D9DA88E7B0BF3BB2BB5C841D75F273193127A4E95
5A806B30FFBBDF36C5ED63C0F41FCC25C6BC7C52CFB41CD4936F46483869BA2F
88915EC665A908D18D64ACFA0AF2E576C96848E8C1BAB7FF2E3918636A20D10E
C20AA0ABF7E8016B4AB97862F3DA168CFA1D9996A0D061200E82EC7F9DE7E043
861EBADE8B101BFD1932DEED56563DDDBAF2CB36B719ABD0B64B7C95309C4B9A
C3F395365914B196F0CBC5062AA8A87AE869B17BCC409776F1A948EC83A69596
D8197F0764B36810FB4F81D0796B23DAF8B1A003BD9A0855F0E2D4D1715A7D2C
3B8999507CCF33906255EA235E77B0BEA5AE715F0B381F3FE17A0E2B90DFE6F5
A06182C3B984DDC5BCACCF6828A408583BF6516F5F9A5BD290F61503F146027A
7E7D691581190DF5AF16EA6BB88981965F0AC7886B51B88A01993893C0A843BD
D62635D8D339401CEA3F0526873366FAB995F73C4AFCABF31F6FD2F67BCB41C3
B4C23C798D451E9BF1BFFAD86ED6E1AD0E391EF9D937258BE7A78ABDD9703AD1
943BE62D26DC5869C1980B69941FC333D92B84B76D305E63E9C6A2617D4A4866
B0EF669C615F60F6AD7654B2AECADD76212A375956CD7739375A55EF55BA43EE
1F3243A7E4F255BC5B2F494B1D450F9F9C13AF2614D5BF78FBB0C4B3574CD8CA
0392F2F6EDE0B0980DEEFF500D5C51E64CF72B4AD9BEBB0B4C6A826A95F5236C
E98C00176A83E54863F811A384FC252FF5B2D5F53D64304CC823FE06818F6619
45B91FCC06B0CA8BF113FC060CDF66C49523AB4124848D8478464AF05A0DB059
9D9C30C4A4A5C14DC8A71C578D34027ABC15D426B97286884A6BCABA780298A3
6C99F3D68B0EB57D8727E4EB7FCECEBB95311A89AD22488ED95439B4A2835C43
FEB37A42D93E921FF75B2FCC2C4FE9A2128D1667B33A7C7E03EA1543F4907DDC
5D746BCF9D8644A35B5E2BBC2F802F001AF012F0903D491C7F0F94A9F705EEA1
6088FFC755D6CB497D3BEFDB59099908AFDFC9BD0F209FDDC3A24C1B5CCFC3CC
653130209EF31B5FEE4D62B9A40EA1CC507F0932D25163778E9F7FE025BA3363
6B69135D2A60526969CFD49B472433577A62F5727FE0668061CFCEED4A06A41B
78BAD5B00A95BC968A2695346E130A90C2F87859DC2C670C7AB9A8719D68419A
49C6FB87D93B097DFAC7BA9EDAA3494DE04D3BA3EBCD9AB2E58C2997B21E7835
01CED22C90D6C691BFEB264BF3F850E05DE54B88C9EEEB2DB80DE6C3F43292A4
75B59DE44241D598791E3734F3D61E8F61BE659139C7E96ECB6D4EA5F7C08DA9
B69C115A9961CB37520D3D934680E04F04645AF8D13BDC40941173CBBCA586E0
85C75678A11AE5DA76F1E18F0B18E9B716E764AF38A98BF89BB2D2CBFAC37DE8
3E727C6E7B1F41CCEE929A4F699A9AFEA48D8C2B899D62BFCFFDEDA771F5E24A
5106BC1D401263CFBE39B6DD301B4AC5B5B176698FBC435179FB52DBBB63C0DA
21C7BDE975DAD41A73F45A1A9EDB221CEFACCDC22B8E7DD88D35C10E02578C72
721F3E69B527D414FD99C20878E6CFE69635390A594C5874887629E5616BAD83
6041CBEA8C21A3E641FF85470275EA5781ACC23331FC4669F09CEEEFCDD9D58D
4414B19F41FE0021FE4FFEDE6B5C623C764D95FEEE38C970B22B6E514708FDC6
69185ED2AEF3BA591A55811FE260C68AEE0ED85910C25F0C8718B6042C0F0F6A
7711383AAC4D50B09B17CBE47F7E50962489E846CFE99536FBB03A1E97F9871D
9D1E5CCB898135B37C1E823FF76E8D20964AED014A14D7BA6B170C8A2A3C1E10
55C2837D031A190146738521A8333BBD6432131EBA75AE5A34EED523E2923D8B
212AC6F7200E3D591F60F6D5C83CB15AFAEA40E31926B25D3BCA76036B155B7A
5E554B164BC7B208DE1C67A308C0BEFD5FC7C00FBC2E67524FEC6A74F119EEE3
4F4E261266D552DC691C789A5B4DF3B00846E46F63D7EC6835E355E81DBA0133
A7BB92DE9183D3AB6A87C5ED093E07B47A5B50325B4456170E9ADE4C73EB1DDA
C8D535199F9DF74793267E96660A7D97260F88A1749117268555CE496493C656
5A8F132E29EC5DA0688BED45967508B321B9527923735429B66A0BC228100B97
8E5183868A8D5E608BA242DE2F436DD57398E8D9A3C826E99F89563A2DA2E705
3B3300F90BBC18DCF8C884846761338AF79006CC1DBBDAD7E544343A890D8F12
5A79FEEBBD9CD53DFFC6988301D080AA9ACC6A626FA2286373C6C15458A4889C
B4323263D9E636536BB466E834C3FFAD5F25403704B5B6AC95EAA04412230E67
471DE351EC3077BD5945D490737F25F4CD3D79D109A870F473F896318CD7288C
81CEF78290A60BFC9E2B643E98D7E3F3384B0E48D399CC1251B749CA4B950A1A
2FEE0916AAB2A80EA2793FC6BFA38F6BF85B69E9B993FDE2507A406E8DFF96EB
8D5C3339607F1B6B99692BD2F83E49E00D72BADF4BA44740F11A2F000DAA7B25
DF295E41067C85D6B754CF25EE4E6EDF91DF9F0AC3EA258D7887271800E90CE4
F22320A4A2A67597CA747323
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusRomNo9L-ReguItal
%!PS-AdobeFont-1.0: NimbusRomNo9L-ReguItal 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Regular Italic) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Regular) readonly def
/ItalicAngle -15.5 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-ReguItal def
/PaintType 0 def
/WMode 0 def
/FontBBox {-169 -270 1010 924} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E134D4CB5ABCED39AC635
DA001E9934C198A7F9B9ED0028A85E9AE00421DFD8EAA3BB3B4B4CE45D209303
237BD51809FE4D880900B1EEB236ACA87B9FF6EBE6B994A60AF5D67CCC42BD56
77295C346EB4C62BDC1EF22EE07DAAD928DFB73455F091F32408ED6430B97417
683AF27A03718A156E3F6E7B6E4F2E8177503CD82DDBF4557A3CCFF4C858AE7A
F7EFED6CC521A28342436B953E4650B5792BE85EA2F989EB6D986905A61FA38B
96E1BBC830B74469150FB0B598A794FD80D10870084A877273A9502C3456E5EF
74350E6E3BE5863E8BA185EB59FB87B36566AF71200B6ED389D1287D4E925E33
B2383ED05D87D48586E698FBC5D562ED9D8A09EC3EAA1B1F300224AF20C23F26
A2EADC74562571DA84B3914D1D80B127C6FF4706C7046BBB372A0013E0AB94F0
C27946583871D272BF4F20FA84E89D745DE7BBA885CC09BA72E0F530ED4EF7D1
864B3C67007ED98800284235372F0A70C912E21E851AFBF812165B8DF912CD1A
013E271F0B347967876C68AE4C4107EF8AD1F170916210034C66394A9D971B68
FBFC1131E37FC178EB97C1B2A0F573ADD9D7C0BF944E6529734DF8A7EF54485B
A3375CC30E9E328943733CBD352BC15B06C85BFB4A96994291C72A0EAE84FB01
0F1B24D0125FB8C16D60561DF8BB7AA7DDFE9549AFB70C1E89424214609FDE41
9A142892E30F02754FD234CEB3C59A2A04C06BAB7AE40E8FDEC50559B8347684
391C750987802D5452C47C1E0B5F222DE9A0EEAFEE19D796FF375A1E1EF0AEED
1BCAC4F485FCAEE18AEC585D1A9D80F41871DDA45FEF1EAE82C5893118987BEB
4D9E345C27C7419FE65E4853B40537D822E34FF1E0BD2819D21EF607981259E8
9F1040A2D708D7463858AA5381759AC49DF4DDDEB209A278FE60BD2508ACA0F4
6A249A05B652E4C7BF1B676943CDC463BC49115864B5B5A6569C59D057CF2A8C
FD282B79BC3FA1308A61476AFF58D91BFD63D1BABC326C4FB78A42CA08478425
E8038116DCD68406DCCA2F5A85858019428DC1DA7A7F42131319C2B08B6B93C3
64413BF65B6D8554C69AF4C1D98BA42AA91660B2AE57BAD964F6AE9BD13DC93F
44DC05BF90F7E1C05C954ACAC42A93DCAB215675B1C7894E2A0D724B606E9DA8
F016953104BF247B66A7BB05C64AD7636D951338BD379956280919E1F6CCAE67
34BEAB789A232E1082DEA0383E98A6F55D8C71CEA9D1554E7A796586577CFA8E
0A1567CA0F3C0A445EC1752A47E705F4EEA6268E2323E3C3369D97355E3B32C3
3CCB9F39E828B8B8317E4E50F94EFED6873046F14E850D30BCFD2B6A49A29126
CABDEB8551410ABFC1BAD9D79E03CAE74D67249247577F67F6E02B76C71D6809
A3ADEC3800693DF0FC7EFEBB1BFA166A088B8F232012896F122727523E1AD51E
E1D8B35EC2E6B2BB0314FD0E2835FB97FF4BC59F9E64756B4B5F2119B20D5BCF
AB27289A93B316981EAC33605FFF98C7D011DAF6ED1AE0ECE6A43A7A29E27903
3C4AAC3E18B02E195E87257DEB8A1F6489CA0115898F910F38FD25CE03F740C9
69FCD8FC6085A66D841ADED0348EF0A843D0F05CE3F579148DC11183ADE03A18
83B216F1DA8BD7F20B32D5A200D311AD5B70D8D7A6DF940E23FDF870E2858CDB
C2A33039814B0C5363F0ADB027A201E35FB4C9C631CF85C30F422B9F568B9ED2
25D9D69B6581864E351CA800EF635224885516C2A291A8A4132F4D2503B8C48A
50FA52CA3C85E11C1DC9E4C2143267370E240E581EEEDD6C8F062E85A8523B5B
3511CB2A4472AD2F31CC926B1958BEAB365EBCFD4E115498E2DC2DF2B4188BB2
9A5658D4C194A0990EBA589A7478D96BF1C37B5E81CC928D77CA54740EEA5E26
E4651F258EAE949DFF86E8DB2DF54D851AA72052511AF53DAF63F92AFED25998
FA67CBDFFD53A6555556089ADAB4DAF9B826BC53D97B40BBC552DE312337BE64
2A4FE8EDB821A8890E798B779352BF6848399710E25E104FDEDDCDB96DAAF34E
4E28E12C1F5928573B5E896EDA20A07AE6DDE6A36925BF28F77EF5B1E1D63D50
84032D2791A7306FC46D0D85E85E3E1A4348B76A2C31464B1A1C2079DDFB5552
4A28D6A826D6A9A1D45D110BF4173BE2C934C892C84B3E7A868AF976A2BE72F6
3AB655ED639EDA5CDC9D6A92E4F621DD8D2A012DDAF61C232D074BF3BE08E129
244B19C42AC80035D6B0129745977065D16F01B343AB4347CF24113CB5F145D0
1D5669473E51EC2560FE7FCDB9B6D54476BFDFB2CCE4DC60424C76B6ED7D29EE
971C8624BD5A520AFB638BC3AB6509A977F098D2629B31201AC008AEA293D484
ABA495E1F51CB28A0C152EFFF2ED47D1810FDF108F20CC8C5DE8E72E7119EC4D
76D140E55D74201DD6A979C8BFABDDE279883CA2050B29932B9E68DEA83C3C4D
4D984326353072AE1ED9DDB08D73402CCB57F9E6F6AF13FB7261A0519295C8BD
48B7C694FD40F4FE0BBA82223313143111682831293C15178311FA4DC6B27A1A
5982211AAABBA90479824AE89419BACF04FFFF38E09A1337FBF361E35F61C382
0A1CDD0580E8C3CCCABEC81D8D642F424FC890C3AC8C7FB9DCAB5C51E5FFC0F5
2745F17ECBE3710F8B3425A53658E3D5C88C4D3E21B24D44ED1E3D3F76E5A893
65EA456752C7AC4E976DA8B622DA9530698C2360105A98E82DDF7A497667EC15
0BA60FEAA4A597215E9D85E389F72AD1C3D583F15585615D3FA015C9057A87BF
0897CA4B909C81DAC73D3F63A0E77220CED0EF8DA2C258BB069706DD0B677E94
056D90F65DF04CD94D395C28EEA275244AB88AF2167597A4E9FD85E1BC8FCD58
CEDD5B6DE6353B8499F0BB7ECD1FEB1ADB7696B6C8FBA9A8C1BED106FD696B3F
07019B87120BA7E2FB7B0F59266719A3B408667AC6B70F3C41E627B1DB9876EE
658C50AB2C8E26D9E7A4F76A0AD5DFDBA69ED707F9DDA9DEDACE7F1EDEE764EB
7C22AD75592BE8CBD95D9504ED3F5E1479C3146DDC4BF1277F9BA552C11CD891
071755A55058BD08D63DB3C4FCAFD8AA8166CA8734786915CC46B1C8D5637F8C
7C3AAFB1219A43FC0AAC1E670A9B1ABFABD8414FD3725E5C37085439CAE66F2B
EFBC7DCCB8FB346129ACE5579812102A68B5B6105D8764CC25DD384DCDD06744
4272BD8E263B7E189B065832EB61D7200B776E9BA0BF1ED2D41E628C21D50DED
EB370FFA42BE3BF6DF3D26FFC6741E5CFDDBF801CDAB652D684F446DFC20B4A3
996E7E56D2312817EC56FD2D316F96E615183586DD8D8DF5E27F74622AEFFC65
1712783F6AD341558753E758A49800087B9D9792588FDD84AA929E60CA3FEEC5
D63F506D88E70203DD05911F76AE8B05FCB332098424FC9BC01EAFCEE55A5923
92796C2710D9247D4B206832BE7FE78937F19FA49C3CE946B57303BDAC921CA4
6F7EABDD570E0ACDF45492CE46568E284C56D4AAD2A6C4DE56621C8674BF9B4B
4750499F0133FEC808630E4E427E312DE90BB62A03F77E45CCA4EB63248A0437
4C8ADA2B3114AC3E29E9BC9A18762418A0AA4F0F61E5FEB2374FF8AACD27041C
0D1D1EFFA086E66E72320A40CE0409C13703C46FF33D5C7D786FCC40192D2180
8C8DFFB31BC56CC4C7086A75108E90FDA232199CEC11A1E34383394A6BA11443
71D45A8D7F551F12543EFF4496CE40725B776D482FCF77DB96F7F58DEB513A5C
1709A4FF4D0C89897354600FD27674F60ABDB7F4804F754398C25462CC9F3243
6ACE4ACC6488A4891BDAEA5A48FADD3DE871FE65EC0F369093F9EFD62BB6F264
877C64534F8E7AE523E0362AE977FED22B5D04F2E7058953FBD32AE761D29E7A
2E61CECCBB294DA4B3035478B42F2C03FE2C63B1708B7866DD9E8FD9C6F90676
B8CC2B18B0F3594FA089BAFFD2E73396ACDEE7682FA879A81E44C39DF8A66433
5F6739685F61F05200FE5141BDF48E56E93086F9100A26ECC576FA95412EDDF5
DABF128233C9FF8163888344E2B1B0CAA62EF84EC308FDBFB997D727AA3E914D
982E26EBB75C89D9D985D9F393BCBFD0F17B0671C2F2DABD7C35E464F7952761
4AB8196DC150552C7B8666B5F574EA29AF38681024A31EE5845798FC38FF8D9B
09F189AD1968125DAF6F6495FEDD885C87F3C927C79180E95F63AFC983761BE5
99B45656E01AE73EDF30FCBFC287D632F6D77F6A8B6BDEF2FDB41C3B6CCB7CE8
8A021393B5843532BDEEAC0A46ACB2097C2950638E7572DFF38ACC20EB1C010B
BA333CC9E52E9A7B2EEABEC642A38465606A1DDA911DDB188AC33A4CFA3F9944
25521820B72000DEE3DE1E01A485B2A95B76F25E03789A63022B69FD20872D2A
B9E211F4E9E6B8D4BDE2FFBB209BDE112E31C6DFD8E9E87AC0FE53F7656E408C
DD8A3C8215D594C6B911EBCF868BA1120E26A9432F7FA1A7A64CA98B2A9EEAB8
D0D1474DEB0219B34350059E316D8EE8C8572A5A86DC44B274F03A043EC405C6
5FA60A98D6E9ABCDD6CECD08A4598A0C9C494449C69B415B8A30C5BCC1A675A6
104E75CBD4DA333EC3590B836A47CE86DAA6BC0B899E59D4BBF338EFAC34668D
CDFD42ADE014DD11362521D159C41130737273FFB6421FAC86C70A11D7D7E506
F7CADABDB3E62CA51C775CE32FCBC1B02EA66B560E1E1AC5FADCE0A61B040FD6
290A58E1A0F85449BD7D3FB98FD54298F0A3606B13FC5268C71E2A0C17E74C60
4B90E0819FCC04B4F4FEEB8E1C72F0909005EA944D1EEF75B45542D6C7D40DAD
86ED11E9A86AF9A0F24D3117AAEF9D173B93E3ED1A56B46771E409FA16B1FAC7
4E1A35112978F2DA3CCC452B7DADD63355AEBC54553112E798930FAC6955A685
18CA5E4A14345D727B175CA68B06994A2F822F6E41BDCCCB7EC1DF577FF713B5
E98555507F9422DF315EDCEEC3C07B2ECBC2AFE699EE4C48EABA9316BF208647
D294125D4777602F732DCC50961AE5F5F2CB0030BD9CB65F91B1AB66CFE95C81
FDB1E68400C6706D29DF8075DFB39648D374AAC47A15848581F21DB4FFB95463
8FF8A534FC4F81CBC9BC1EA7A99B053675D7BE82E930A23E2281A79D20ED46C8
0CA018D134D702A0C9797D22C2AB8C93F1C837E72F52BD63159EAAAE0F7A2D6E
6CA32510BBAC0AB9E8E65132AEE9B56E85B1F05BD092F66186B4FFE3A95A2523
BFB4950120C203DC4532C3BA7A50DEFFA166C7FF6134F543866935A4D0E6D4D0
3B192B1BDEAD09D50CE75B570C8BC5816AA7FE13A84DCFE7C92BE15F5B0B5B66
B5D95E3EB41E95458F2F60FFC0AD445193BD14B125739FAB9FBEF8523676B750
9EA7AD0D2111E3584A711602680EDFB38F0F033C7B92DAE7C12F2BCB22818320
FABC322A2A3F62BF60D6F2439E2D50DCB9DA3B451CF6BC41F06633E6CA268D54
7FA3B451C7F064A2AF15F95B724A60F17CF056FAFBE9E5A3AA58117CB6A37EEB
E2BAD7DDD63A967148637DB317EA3222BCD8A81F05BFCB0D4DC15F48F3C8B811
F01130BCD75AA66B2C347BE7C6919C2B5834B520BABBEDCEF169BD092B0CBD22
23900A5A4D8EA5A1169936522382A66FF57D1429AE67240FBC800AF56751FEEE
B69904810D2DFB705C1CE3323F2DD42175DC37C7ED828C886C63228CB9EABED1
4DE2329CCBDE222B4C31FFEC8DF5E9BB735EBA4E9C05D6F238CE8CC902D1CB60
1CDC9D250D6B6B3E6330059159C189615897A97EB497CFB8AF98ED0DF3B9E77A
A94B712F5743176D2498717349B0CAE365F6E262500B0209CCA5CAD7328D8654
B768BDC92D1FD382151CA37EA407BC8C9B9034EB7994D341E00B2535DC6FD4D2
0D3C2FBF4CF73F8FCD820E54E53684BF4B306F10694080D5AF88A7F017DCC141
D172973277D9B74BB4523D491F92C142CE05EE4FC1F965BA704B3FC888A44303
D8DD0A4F053546129BD3B2E62E5933F9ADFCE08E3B450195F4BBC034ED480089
150523028C3FDEDE5D3FC1ABA588DE83A52DC6D5045297DFF7DB7D8C9F5A244A
DE5ABA3FAD1E46371B4494A48CC3535311FE6DB43D7AF0E9A1CAB183E05EF9F3
644BF2530CB119078ABB9142D35E5F7ABE1BD6452AF615A58E7F43AE0C5B1972
DB564677BD9289C7CE8AAE26FC9E43E3BBA10FEEA3CC3D11A56D69ADE5B5CBF5
C40F709090C44B3E22288F48A4B43F6B5968277FFB26A6046D06C05A5295F1BB
90F59D0DDAF60244F2AD70531A96E9C3AB2EF9FE7CF81EE3DA16FC0E9B36D26B
500390E5BB7694FC00992FFE2FB1FB5734C6AD806A4DB3474B33A58DECBC1D90
9B0FC4E988B9153ABE63891EE87D88986A24F6B4308510C99AA6E070B0C6F923
5CC1D00FB2D7D012D928C51F446CD1701D651A9F459831944D20A864BCA9E6F7
C04D77634CD3B909F24A4CC7201D4C8FAF078E001A8392FD71E6269EEEA4DAEC
C04E0328AFBD000F669E92A08182A307CDAF55BD36D6BC4881494D80E7B379E2
B0F9F793938817ADC676E012A737EFA5B743C0FEDB224E360B0E113333A9B31E
C7C2C99EDC7BBDFA0CE085C7CFD4CA90BF911FDCD823DF8673A3EDB6715808AB
6C6D8A63B38F886BC5ED642F9C07E1C329044CC89CDA8628B9430467A2B7287E
870E7F7B115AC244F706948C445FC2EDE41BAA6BCDF9ECCE3B86EFABFA2053F2
54ABAD71F6281B613E63A6090D95E8705649765F9A0E0A2C9A4F7C1F5E4D2AD0
FD1DB8FB299D5EBA5DDF9BAB97B019533A7E399880E8438A4D542521314697A6
E7B7BC93FBB87AC0D15C2818BACBAACBD8298AB195BDF927BAF946795C131C15
7275A3ECE43A97EB61CAB021528241C6B3D9161691A2578DC72B41D08E26EC70
B39B888A26D7859B400C493522A4B26035DFE507387057CDF3F9C5C61C7DE08C
7C005861173745ED691C6AC393F225E50E2F07DB4C25C0D1E1AE178E65B9A056
FCA525DC1F828359917068D93A177438AD42A2159F2B9C855157BB4E504B4310
2DFD0AFCD868DB325093B8180A0D841709C0F916B1E340022A233F031889DE93
553C2DE2CEDC3F136C2AC7B3DBC25014AA98D3D0E28ACF05E2D365F97AAD31B3
8363AED72208694E758C436FD12A9EB238AE8A3BA8F887842E558660CDC26960
B9E09CE4DE7D137BACA40522B3023ADC7215F10DD55AD9252ABB5F153D2DA71E
1407C90DAF43546E807F02A8EFDD237CAD0D10E7249D7D0EFAF3C906A0B8E84C
0BA4089AAD292DDD5EBA9AC51DD84936E28F32E43F42455F875EE32EF225241A
F9E9286968437ECFA4D55B38DA527F0DC07C4195487B3BE9F3DD4266229E57DF
C788EA14933D819F1DE79572DAA495C667BB31BB54140DA64C4EE979DFFF843E
E8B7158F6D846911D80E264FE8A339CD879208F7C1CAEE3F2EA2DB0875E02748
AE1A891F2571C84066CE46D16116D43A70F916859A40AD64A8C869C515A0696A
8E3E169E707B3DF2205019EAF0494ABAC8B0D0FF9FF6BEB1469AA6E0E8E42021
D6EE28D15083E495E56EC510F23AD0227F23904838D7318AC5495ACC5484AD23
0FBC4E380F728563A41F7EFAEC29EFE6094DA7D39F02452711992A9FEBB92B56
2DA8E09FBDDB37D9341E9749334D012CE68AE98053CA40FF4B72847E000F227F
CF9D823E3985B3246C99629E71579859AB15D60D34B992E99B5F468D8BB0EDE8
7EF9DAB01A8761A740F4EE508D19B02F8BFF894B7895FEA680C33E1B9D63BE48
46B7575520D2A0764B67E63CC03ED3A5C1F5B6D3E3388A1F72C5C5B53996CBD0
C8B621DCDDDDE6203AC788FD13E33323F969488D89EB8215AD68F5B6F61CBE09
0DFFAEFF60833F28BDD4E520F42736A00B539A1B40726C16B45C5274605C288A
6384CBB9903FAEAE58AC0442CF2A593C62E17974A0B9A4526FF599C7B21EA631
53CFBE9DF10343D67881464CF130CE7728CE6A3DEB5E742155B83F20154A5708
D16E37C9B0F29490B8E3094591F322FD9DAB42F3FF64A94779EBE77E6BE142C2
9CF4EEC96C552475579CBFC59685693F7D8EF9D3582441D78EE3C58A51D06CCF
F2EB39B8CD4D1E78BC40222BA3CAC3B8387EE57097C4BF564EDFA3B1458EA90D
6839D46560BF54B04771EAB6DC5326D09EFF52B99E6C1F4EAEB7F6FC8EC36481
229891A6893B414D5A87CB98E40D5546DF2DC407EB959F4454360E7A5371A98C
462E8D02069AA5721F0B33A855054AC71B95D8E5CE12A49D1FCB3BC3026B9D52
86B8F3BA1BA90F215654BD960EE5C45E62D2227FA2702D5777EE73801CF417C1
7343950F65DDD3206D4D9072461F7468F35AEE71762EE20D81B7386A394B9E0E
22F31790506FDE27DB2410FDE07C89F68B7F2E644C199650C6D256FCB9926E01
FF028CE0C110C952D37ED6947610216EBEAADC0E4B56FF7A5FCBDEACC4FDF34F
2BD7EFE7E790557C1043E642B424982BFFE6EBB57195D3B28B72C452A4186711
952D73E675A53D513E3FFACA84EAE29E24F8C13F0E7E515DB173B93DFB78A727
F9285E495917B802D799A3707588DE446D3E0DEA1445D9E4CBCF08B311D4368C
977D4BEBCE7AAD1F3FA6F89AAF52CFC73CF14E0D14CBF511921B60D09404C4F8
272B4C34FD2605013A5E1BBD0FF86AE13235B6BF3278189F82702007937E3571
B90ADF30F4A61119733F6F9ED735E9A8E1E399CB72EA470C8A735DF316A6810D
1D87323C026AB518D1BE399D38AAC1003C10BCCCDB58AFD51D7300A012D2896D
FBD3271FD13840B63F251001F008DE01DF7ED02EC88E2CF407CFA6E97ACFABB4
F387B0BF76B804A8367C813E8C0D3259B7327E9AAECF8DE2BD057D1C4DDF37C0
B9CFD2BF22068CAC93CDD8E5EAD91880E5382FE7D83CE2C1A8838991380C378D
4FA49BFAEC730C605A53BB8CCAD9C73D210F74EBE5DC841B11813B7497736321
5F20276E2D385643CEB98B750097D59FA8676A31D6F46D0721E1DCF97F6F7117
B711D85A32B8B6C033ADC438817EEF9EBF1D30FEF287D7C7C71CDA0C3ED6EB5A
3357154F11DBF730A10ABB310B4D67985E1E27BAFC9E6F344F9F3A90FFBFA7CA
3698C856DA2304679D9680B7C4B28F10B3846610499E62B43614E82B281C60A5
016F1E4041DE3911D9DC78DCFCD9920B2940BC279986B90B80E17AD5477283CF
03DF7DF3D2B39D6364BE875C1354DE94AE28E6F538696854B27046D96D77860D
9AD6B77A05DB47C84B87643052D66CBD7352D953B491E470B03B5D61CB96F5FD
77FC2E5D5FFE6777D6E374B40F4BCD00DA0D12EB28426C8AEDC4B79EA6F97218
44D1BC5A0C2A2DB1C9F9FF6A9D62E36592A758D9CBB5C3E96B97DF056F801EF9
3C280ED5B415426E24E1D1DF16D6654B35BA2469ECF89648E044E4F376772B06
8BE06335AF7ACD8D71CA2B897C7A9CE0513B130D3F3ED0E35D04BA851CBA6A43
47FF0FC890D1FDCA3CFC77CE075262F445CC7E9E633C3ACD010B18430411ECEB
894C82784010284322A68CB76133FF894BF93540C48BF09046B7C59DD2FFB91D
36F3BA06E81A04BB13EAF351E9AF429E657D405D8DD0CE58C6BED5F4BED07182
98645CE854DFC4817F0B50D3EB2C711853EADD1F14C99899C514E8F0BEC737F2
B9B23C5789A098D4D5AF291D9282D2DE0F808A47012DFE656BECAFED14399A3C
E0106EBF656A21CBFCBC451B029ED37E2648D3932C058448D7DCB55736A34347
B15F464904EAE32A42A9F3099AE930E082C449D5C592CD00BC510032EA36222E
12F499A615287CA571EAE899BE3C8091AB2AEB46FDBBFCD26132F7F28BF1FC39
0D3DDC2B7F8A30FCBC42616ADFACB1FA1D31B59EDC624DDC568E915EF3DF6262
ADCE2EEAD16F6B6DF88FAD460F26B9EE24219527347997A98CFAB0F7FD806165
B828F2B97757E656ED7059F4D2237F988225FC5C615A5AB842DF9F5DEA06501B
0FC530085BB4FE7B7ACA217066183B5069034F3E270833646750371DC46D7041
C10BB06215A25BD1913C7954B5C609CED4FB8BC7A1AEE0A56BE8085D76D15EB4
63666E0802C7752DFC6FA41F7B4CAE3B0FEB1B59B66F44DE3FAA24964D1987BA
74CE27B2C4557D4B04E7F771105122A7F0FB2A7340D72BA63E738ECA67B1512C
BB5376F5FE6469726F0416EE1C6EB2C329912DEBF2F1FC176D81510E619E3284
FED78C81D19F67365A378D33DEA2AC9BDC86FBE7E3AA4A6A8C1F342422164A13
187B7F7C3DDA5E1359BFD575DFE6841A3E7CF3A7886DC8135905AD270DF2DC6F
E565F66197705770ADA6E52F8F0A4A3F7BE10A5803E52C52643C31120F27FE4F
E80DB982DAD0CDB2A3CB7D7AF0EB16250F42A1B21C5644DD8E174D8169AB8B8E
2ED083CB2543A191750E08E1853329025D322D8AA0C5BB40DE983CAF43514251
CFF5A47E033D6EF4DDACE3569FAE662D19514D98A4606F608B46541EBD289AAB
D77322EA46F92EBEC5FD7A60CDAF11AA16248073129A8325A4859341F4108916
9420CB8017DE0C8DEE0F0311BDB0253716CA92256CBFC7315AB9129A7618C77F
6CED9F0A836A180EF459D1526AA5C802E71C0A4414DA781D49720DC88187A0F8
2B0BEE9030330D30933ABEB784E2238679C5EB4D6611667E7D89D9CDC6C0503F
CD5AB9B0819C35691D32F5B31590C536995B673E2385D96042D8C2AE144C814C
A733973C8C0567E70FB8EE9B2606600EF4784054908CCF751027D65BBA9C8AF4
47DCCC6AE4E9D95853BA4CA95968595A23B2F32A46B578F76FE7027B3CFB43CF
EB5A72D5B3B22BFF3FA494F5FBFA38486197A1CED5292DB4D90A425D8D532C28
4799723DCC04CE3A194D0D05C3E1EB84CF8CF68C0B7DBD8AD9FF3B88628BED2C
21A1F2C813DB477194403B23B2B7887D966243BFA2419322834327A3FFA8D4E3
22296ADC56A2C53B643CBFCF14E8461F466E207616DBA90C291009AC2AF79ABC
77A68298685061FC7A21DD473D8295F50F1F624273455406A43B0115F76BDB75
1A79250ABDD01A6F5ECAC28875B34AB844509685730A4930EF1E3E733292C806
C80C8865645C62D3011CD30D197800D063241B190836D5A9CA98BE49C4D67E8C
D48BF59A21656D13AEB5ABCE6B122586EA666095AF25FD03C5DE5384AEF8B6C7
C5DAB64A0F3DBA016E90829100E693C1BC5904C3D7311225F94FB7236008E70C
C4A49BBEB1B913570A51B2F96D302EF8913C6BB60B5B4DDD29B3B4B551C48CF2
F739CB2EC7AC3F669435FE809500BA99CA64A8DC5F8DEA7F6C765088BA1C774F
96B17BEEA43D61A73E72A9B12E19EB6F94A50C01C37396F8F1A1C98BFF1C7325
9669E3AE2639BE0ACE6D50AFEA70F876378BF839C4F64FD5682CE86CA4A71F71
CDA3E246C67F7CA6F9A2565C497B973A31131FAC25006B8A7852A6CA07D422DB
05A9DDBAD2E69B4AE827864CD1D0B1CE09CD571FC94B29A0A824AC92E92183C1
81360FF0E7416986A98D901BB47DE5D3C0CB6239FB2D5B4AE322494579071D67
AB2F9488EA7B1344BDBB8B1D9000EEA1EFB4FF27FC76259E25860A372DA39440
86D08E90341B4113822AFD7DF6FFC53D7DF25541165182917E61CDB10F4F37B5
216B01D916D41DDB32513DC4ACFCEFE43D6B2018154F6B96B585D142F943EC5C
1B040C1139273FE87CE0A1C00633327021FB71628931D9362326398FE89D8234
CAA798B6E803A0A99CABA87DA35B532BCA16C510BC2032F099107F153E3FFC70
BED6D04DB4820FDAC002428332698AA060ACD6CBDA8D00D12D8F361B497A5239
C96F9E838AD55D44525B61A9471C73F6DC14A50AD3B02A70BE81B14581C6E968
DAAAB2896FCFB745795C4D2C812D7C74C72FB893305D4CB1D936D0DD331B54A0
2B253D9F96B35ABF0379720A63410EB5EF0C38B80B3769CBCE11FF60817DC8B5
C29738D1233B4B71585A0384550BBCCBE56F81BBB58F01CE5450627E29A762F0
74D54D611FB6BC996F8E6A628260451374136F0A04A5CEB94650C3C6CF916C0A
19F4520BD32700132532B03E9C60E370754666B2F8650DDB410DDDC262CA6AF3
3AFDFE9CF691831FF3B75E3EFC480B380FB35E8B59A5F0B3A6BC2388B9173819
CECE514483F3D98F7BCF63353123BC13E65547DBE7CBD9946C94D2D4D11E4FA6
ECFA9D95DDDF95934B80F8906FC8BF2197927DCA3B90F278A9E1F9C130331E6A
3BC46CD2CC10FE514DAE8E980709496468E528A5477C8C0896292C76C7B2477B
92C47D211831751B7A8E0B01EC27ECF7A4B64B047A9424D6C14642AB67F09355
7D850C9729BACE48C72A135A2D3BE16E2CF46E27EBD1E094781AB20661BFE7EE
0593DC95D37641C939F97A21C7A3A8D01276AEC051A9B7EF55040F5503CEE334
3BCD6837639952D5C857462D5D23EA6F989B860980E04FA821EDE13EE7D1C58E
9640C14F19D48904F8ED72CF2BFCD63EF7F38EC75EBA7438E8634ADC582ED111
349AC3DF5CC5962542E2E3021A0C49EF20435925CA7ED0E1BA8B23E80966A305
D05A25ED570358D98F42B9F1CA0DCA12D7F4FCE9BD3BD15DA6D52EDC3B6820C5
3100454BBE606F3388B7880EB67EC4CC344DE7141EE44D1706A5FD5CBE411AB6
7C3C47BC337FD457BDB65BC23990C7909DCE04F342D66F275A7405465FA8F01D
A7952E4BCAC784284298B9FCD1B24FF1CE08121AF190482FA53AB6994A9FCD6E
A31964D6ABF170DB128DEEA19CD7DAB35F91EF9E305A1F4463F1BE3098D129AE
CAFC7CC41DE971A2AD9E2F7E914B1A4E62FA321ADD0A37F47E5D3CF01064635B
DEB441A29DA28C5275C3B302CCF891C445730A9F55E2F2119B64BB33362299DC
8745EEE4369C5089263E82FF7C1EF8E3A63257C7CC1CD41783EC82DFDEEFB797
638F6AF81896A4B675C6E24F5A8974F6745E84E0BF3E286CD31AECEE675A11D9
4BE16522A58FF7321AD6171FB4D6528ED6B85CC350B7DBA6AEF98DA33213F800
5AE999C3C3BBFED0EAFDFAE2C58A18CFF4F0E1CD445991902313BF904EA131F0
A3AF034D50D17F2A298A75E597652F22945B957F4AAE5767A603D70AC02CA5AC
9FBA80F0E24128E0762AA014DE1E004B6A0F5EFFEA1F4055D54CFAC3DD02BFF6
3C4480EBC2FCA23D0C884F20D64EF68B393792D8BC7D1CB7CA8545ACF78E04B3
F23245378E543DB1929DA6C25B7C1461961FF5CBA59A0B729352738F350D9A97
EC5A2DE3C49FB977FFF686B8AF73219070F471B90A1991BB9AB1DB0EA388B470
6DC2F860244B02E9CC4EAC50F3F7A340207FBEA21326976F4A4CFB5B2551A153
6BA811FFBDB5C411CB1BA5991BCB25FBF929F490A4881952C5BD304C9F557C72
58AB7706FCDBF57CEF46BB350CB1C56BB44AA557212E6BE2A6DE652851C40A19
5DEFBE9425979B2C514363132302C132A7901686F05DB8409E85F4618D4EE173
E91779F6FBE70D5FF823823F57D44A727732308C39CE5369F974F59369C82C92
1C2347A8DF2FAEBADA8A6E4D5B9991AB5C9801CDB1B70CEFEEF82BA7F2A65D3F
B2114BF10194923523B50F94A9FB591B4C35D5CCB0C3A0DB080B79DEB48EA0F9
4084FC47099305E74FB7F5662C9BEDBF5B0E3BDC46D7994FF2820F805155C340
00B50977003AA0BA2E9EF35CCEE87E922B45308BAE99AE06106D072FE0568BCE
96542E38D53E15E267FA7516A05D34E1C40BBC6A204C4B3E246FACE97930E461
185594490FFAD06E396364E62060B7433B1B871A62E6F93CCC5564A3A5C501CA
6CB44A4D5D6391F1AA98DDBB6055E56D4A8FB3EC231B51B23DF6A97D0E7230F9
AEBF159EE5CFA22B2E198115311431841DE818D31DF5318489481F7653CD6946
78651A3829E3AE4A1347EC38C8D8BD7AEE4BDE3553B4BA8688BD8F0840517947
2C0BE3401D071518042DD406BD453AB04FE99BB48C61BE0D4ADB0C2C1C244201
DE58D83C39879278142F5324ACCB7567AE70B6D21EE52839D4E3B286CF1E4338
F892549F61A7980D2EF0A9FD40A88BAB7E8A1CA9A348EF598198C61AA0CFB0D8
917037848822293FB9643C87DD94CA2BB127D71042ADE60FA197CC1A2B00708F
1CC41B9A68AB0FEEA3CC3D11A56D8D3448E9C33AB4A22CD3EE3ECA43E9EAB205
F5669555E1A49C6B865B75EA036A8A03D2C4B583D8A535C69C202FDE6CC5AE48
EC50F033C7064934FB530BC56DA27848B5478A4BB0515E3E633532943EF6ED07
E6F548244EE56A4FA7AC84FA359DFF334032ED7BC264CE0A4E8E07EC1619F42B
39C0346853939FCBB10C7BCEB467826D40178ABC4D15EBB861583079FF55F796
1F52B9A55AB276590EA462007008611A3E802EACFE59F1412BB05BACB7415D91
3C8D4D8442FA68B35A7FD3AF5164685C94BC80689E06EC704554A8F58B529844
59A0D7A6E586275D5DA24DA24E9E61A3E59662497B7E12724E784939857D4F5A
50997BEF9695DB5AEAB75A489CFB76DA5BB2AAB0A433C49E6EAF272C0981032E
7D042093FC084B89E95C71932083E4EBBB46C2F14BE759392901FDF48D96409E
BC606974FA86CC8BB94D0FE6E1ED583FA078EDD6C80CEAF12AD60566A963DBE2
2F18B8C81D82BAA5C3C54D2325A453A2DF01B9A782AF87E65499FEAFA5BBB24F
A6B3F26EAA84579D5AAD61E7E0CD6CB328BE148976475C402028DB4BFA1574DF
1DAD77FF149CC59D094D8E4C1156F241311D4FE528C4CBF372C705736A468196
7F89C0E1873CB864C2061BD48E6FB8014BCA1DB61EBEF11AF028066F8DC624CD
74E78AAFC67FF707DA6E52C7C3B8DCB46FE21ED3653FFDBDF0A574A4ADE82E5A
6DE8393928FAABEA22E47B98D040AB5EB52E65DB017ADB4866D38787764DD636
6916E815236D412C840F738B548D60846431B5C18A9F542659329285648D2334
8101957DC41BD96C7B2E7EB96E80BAA55AC3DED2D3FD200EFEE3FA2C45872FB2
0A782334B4D3ACA08266ECB80F39562F495442B95497CA4BF2A781D30C8F6ABB
623B41C46064A07924442B2CA338D468615870E5FCC41DC6C36DF566C8ADA62B
AFB13635D794E809D98AB9DC0D9FC98459B08A26E1024459A4A3CE4F3E63D11D
1FA6CC22FC17A2AC50449662AA823C31DF4CC1FD5161B2B980159B1F1D1DEF79
1F3E7BA4E6D14D4C384F9C4FD224915B5056AFC0D4C583E403763D9E3428D68B
352179B45FD659C697BCEA1E3B3DF1F170592E39F883D6BD298E5BB50A4FA95C
C878EE4D8DA91EA051DB8558F2E61C019CD36518926148A1CD9E4AB96B540AF5
64CF672B527AA2BC85BFB6A704A05E445ADF029A9915F5A62D9CC46047C3CAA1
962827762555BC6EB0C5E355920D30B1850DED5028EE00D0B58D4A28B7DB20C0
E48214D308F6C19B8736371B021289D91317D129A2A00ABC0B2BC9CE14501B3A
44307215F86B37D94910E8987B799EC9EAD59658A1F70233E10F4A5AAB92E3FE
B6D321721D101729BED2DA16C4D6205DF65AF3CE48F543E6CA0F7A3D783E99F6
30AFC01337D18BBF569B68EF8779FACABD9C777A260E55F082C001D5EA00FE1D
AA6A5A422A6ED7C76F35D91B9CCC599C04C000244F7B940B6403FAE170FE1AE8
7736E83A8A9C9E2C3A94DE0C76D9DF06ABC27410BDC5835EA64AE02BFB550544
6BC1BD9D2950EE49B33629BBAF00A9CAF2544719745F936AE386BF347F063DFF
0504F2E6555C7E6054E88ECEB3BF66F4F9581AD604BFBD7C477822FB23E5DFCD
5FBCD265D283B87B714AFC13AAB7CA4A18C65862EBE1871C80496440A56AE6F2
EA75EB2F0A62E37F669D78C2B580CE117C6E05EB17642B66F75C989B7EBD04B5
38309955B727877353ADE841829737851CBB7BA28A413186F3754CEA8273EFA6
D7E0BF86B2B4ED64C7CE676641FD75A3AD879317BA499E9BA8FCBFABBB83A144
0B4F890E7E460D6EFE6CF90AB822ED36F1BF5C236290E66AD23A0B1A656BDC5D
8681EEEEA6CB86F540B759643D9A7B444A9EEBC9187D795364D392ACDEAC810F
E4D9F8495745EC5B6669D97ADBC4BD7CD2FD2B6AE7BBF38DDFA77AB23CCCFF87
3865AA658B6A277949D2CDEF1D1BFED34FB973D494711BDB12C2B928248935AE
EB599C19CC8DABFE7E3F967663907A28A7F94B62D766B257DB2EF28DB2AF2412
F6D4B7715C0712672C16FC70CD1CBC39B1A05DB6D86E691B2CA706A0E63D4C71
F0F4B4FD19B2C084621E272F73427884C86FEA171CCD22DCB473B8BC6FE65236
ECEEA7EFD3F06C8BCB30527410BD353EB7D6CFEF368EC3A51DCEA1CF89713F07
8F5EE73088C848BE26DE1596B4C2FB2DDD7679B56328DE6D3D5D8C8F950B5D94
0A8F496D9BD2E027771A5897DB7ED077CD7D5BF1127A118FC63D7F466D651D0A
FBA671AD7ABA4C9C93731379B335E4E27D3F26723DF7B0BB003383A89EDF4A6C
E47584E9FB3C39EDD64DC99D76780B0BD28B1F0A47DE9C55E076D35009E63250
0D2EF79B14D67210C61177E28B8CE9CF05431D350669740BBB2CE55B94308696
2DEEB76A0E6142A3666C8AD5174ABE7BBDE20FD17800BAA2FF61A8202D36DB4F
DBAFCC494D1076991A7932F3596A54D89253AA42C36941BEA5C3DC4E4DCCB9C7
04CAD40DBB65BB952992D8182D0F9839196C84E1EEF96BA2FA45CCD0693D0EDE
DC74162ACA4171E6845B487EAB21636EE948B607607849288A37AEFFD77114EF
A2C2733DA0F360B86C25DC970B51665CEB01D6AE89ACC9A9917A6666A52C2DA5
609C123EBE219BAD5E0FD14B7DFB4AE33DBF351DB7145B736C5770AAC990CD2D
BC0C9C7BCA91BEDED7CB4B3E81FEF6327A12BC94A3F55540F9EACC77CD7F48F5
0867C102A8D4E4A4C02861155202325E070EC509851F368DFBAE0A413EDD080D
FC4923DBE47463FEE9870631C84AF56424516555D0ADBB5280DDB9D0592E0901
D9F622A26E2E52DC34E67B7B83FA48B3FAFFAFB932FE6AC314B672CB7B9E22A7
A186A9103EE023D9F4DDA9FFC44D4A783F2D221457CBE42B636525DDA05B090F
4C3D51807907A4827DD1FB4B304C2BA4E2D4823C9FC9D8116C4B10B574FA8C29
DB6BACF364CFE0C2C5C1D07C95019C5B7AF3367CA2E37B66E6BBFA542F298A74
81D08A531CF21480024EDF84D1255F5E1F5C349CCFFDE04296A85B477C778810
08001A99B19F676090BCACEA90F6AA856853FE4A493347E26A65BAD893E42607
75FFA9B85B594C4448AB5AF1ED9602CF5773FFAD35637A90B2714AC1EEA59897
A31D2C8E09D6D3C0252828F4F4353931616066BAECE32A18753CCC69502C6CB0
A4F85481BE856CC55D2B72AC67FA47C313310073F321DAE451F9B9EBDD32D6ED
E9EB9F31AF491896AC33BAC0EA9E0914F6FCFB9CA4403501CEEC1DEF4F1B7946
473628AEAB7D8EBD561BB9EE0068B3FF89C172BF26B9E6A4B58CE6D15DFB7B7D
94347F0F0D7368305BC70910AC4825B20410D2F10A733177228B26DFDAB58BFC
363CDF8EA1530E18AB9A60C2FDF1D3750BCE9C34F20B2E861856A843C24D752A
BAF636B752B0491CF35B96361ABED0273D2BE5BDE0B2D7C7632AD6DC234E4153
5948B6EDFEEA8731CDEC8138F159D78B26CAD383545E7D45D21BD9C369F3F01F
C5F2EF8B69680B271EC138ACD0C6990209DC73AA5B06A98BF0447FF87559FA4E
27A5A0F7583626E86561410174B601200FC0014B211D20954A3211AFABA57A23
5B0A2B97C5C03704D7C67F94CAB698EF46FC594B272462D54A120A588FD579F9
977AAA33E6AA067A6DA5986F3EEE6F3815AF48DF817212628BD5579D249F7054
E09A8A538A8A9FB367C40BA52A35E9F89D996CE89CC83C16659387D9F6AD6609
C36A922979814F079F3EE51718EE219899E4FA03689B30F827A2237BB019182D
E9C5130EEB399B35708C5E7831F514BB923A29F994DBF5F8E305967D1227E623
49A5170109001BF7E8F050E070D19E6D2E0C3170E1678C533C814694AD81CA45
C2C80F55815370CFB16AF11DA13F5CB2C57033E3356FA3F237524E3E163C3CEB
2CC89808D55EA4C36A3C96C88BA790D233C8D68D0696621DDE3D041722D6D841
EDB961EA21CFF429CA6149CF4CC0339D8F70ED9FBAA105E29D4CBF3BDA074D0A
FB0E43CACC7181BA8B08EBFE05A27B981CFAB474726827DDAD82D0D6BE9110DD
049CB453112E83BA321AD74F8ACCF8F22E6FE6E43C5E0B5744A11C55253ED6BC
22F6BAAB70F326DF2DB4AACA57CE0683F8B1FFCE8FA96C651175DFF6AF1BEA2C
492EADCEA40C37B25127094472406DBF0764433B4EBCA29AED9531F5BAF1B47F
F3BA3741C15E02087EC734815DF8115CFA9A0794CC3BC25E43FBC68C6B5E5083
D658A3E8C6B00AD7C6A0ECA6D5AA67F7DD91A001DDDA409289F7D51419768080
20E513E14F0D926D8682EA935552D05D237ED4CE178C5314B14E879F66855363
FB8B3AA7D08DE5FFE75E05C591E683328C23D9FA815DC14383499CFA1B7947C4
9168E23A665DE76D9F2E8B6A77C571C6E2F954FBE297510CA996559A38043694
D152FC832269473B8FA1EDFC8309AF0DB90607AD6E152653DAE8FD5BDB874E90
86142BBA467E316FA3E22B51BAD6FE2C684F94E84D9D6B70C32FD493F711B9F0
CC0AE33C808381EDCE79F2FEAA57BC16D2D0B6F1F00E941AD813A107881F5F58
F4610AF21056FAD0F6E65C8FFA0DCE9F86DE913FD7CD9CC3AFFD18F50DDD6425
937A82B40D8C69CC46BFEDF056FBB5707C44AB0472007D1FC521DEB5B7399076
52C7EF542EE4A8D06AE597AC211CD606AE3FA59F1CF12FFCC6F0770839D70E91
A32632CEA2B7C7C34CDDA49BC578F7100652B0C62BBF3059471684464D00CF6F
F50C938BF3DD724D7A6AE7B398F22CE62D14381B3FB7E42E845AF5A5D7211B2E
481CBD32687FE8A8A36F8858AE39F42D2708D825D28B5247BA0B417B5550F27F
5EB2E4A61A2D1032BD4E945873C211C88A1F161FB985FD31BA65F49AB5BF5EC2
9EE9223771CB2F14BB815524A370A70C1CD2CE70997D66D0491D2D2971937CB3
183AB606215436B66A4F98F694555A332FE311E08FA28A092D27668CDC6D52BC
392F7A6DFBD7F7DC42F7D56AD36D2BD9D024B341798B8FD6FDDC18705841C423
FBB47363676AFD596BC954BB2C749B6A82D53655901F4430E35E93E591AA3478
DE7268BB3144B27D0A3AA07217B7EFB725715EC0A1827D70683662034513A971
9AF95C2AD63E8B8397459A89C090BB816364B2AB3DBFA70893125B5EEA99A564
DE6E0AC1586D91C652B3900CDC724BD120DA60AACB7839CA3F5E7A06C9115395
DCD3469C3CA880885D86508FBF6AF8FC2A4F121291351141681D4C0986D27815
58F49212625DA3D87A310CA7373F88203CD4E77BB936707F3D7D849F211EB0E6
B50B1AA7D94CE9B03FE387889A5766BE7262FE4ABFCD246B483C77AB4EADD62A
A8B7C321297E3F1187BCB56E27
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258437 52099151 1000 600 600 (main.dvi)
@start /Fa 231[65 24[{}1 83.022 /CMSY10 rf /Fb 193[65
62[{}1 83.022 /CMMI10 rf /Fc 240[34 15[{}1 58.1154 /CMSY7
rf /Fd 136[55 3[32 32 2[42 46 4[23 46 42 1[37 1[37 1[42
14[55 6[55 42 5[60 9[28 16[28 28 40[{ TeXBase1Encoding ReEncodeFont }18
83.022 /NimbusRomNo9L-MediItal rf /Fe 107[29 29 24[29
33 1[48 33 33 18 26 22 1[33 33 33 52 18 33 1[18 33 33
22 29 33 29 33 29 3[22 1[22 5[48 41 37 44 1[37 48 48
59 41 48 1[22 48 48 37 41 48 44 1[48 6[18 33 33 33 33
33 33 33 33 33 33 18 17 22 17 44[{ TeXBase1Encoding ReEncodeFont }60
66.4176 /NimbusRomNo9L-Regu rf /Ff 201[29 29 29 29 29
50[{ TeXBase1Encoding ReEncodeFont }5 58.1154 /NimbusRomNo9L-Regu
rf /Fg 133[37 42 1[60 42 46 28 32 37 1[46 42 46 69 23
46 1[23 46 42 28 37 46 37 46 42 9[83 60 60 55 46 60 1[51
65 60 78 55 2[32 65 65 1[55 60 60 1[60 10[42 42 2[42
2[23 21 28 3[28 28 40[{ TeXBase1Encoding ReEncodeFont }49
83.022 /NimbusRomNo9L-Medi rf /Fh 171[46 4[54 3[54 6[54
26[25 25 40[{ TeXBase1Encoding ReEncodeFont }6 74.7198
/NimbusRomNo9L-Regu rf /Fi 139[25 29 33 14[33 42 37 31[54
65[{ TeXBase1Encoding ReEncodeFont }7 74.7198 /NimbusRomNo9L-Medi
rf /Fj 133[37 42 42 60 42 42 23 32 28 42 42 42 42 65
23 42 23 23 42 42 28 37 42 37 42 37 3[28 1[28 51 60 60
78 60 60 51 46 55 60 46 60 60 74 51 60 32 28 60 60 46
51 60 55 55 60 3[47 1[23 23 42 42 42 42 42 42 42 42 42
42 23 21 28 21 47 1[28 28 3[42 33[46 2[{ TeXBase1Encoding ReEncodeFont }
76 83.022 /NimbusRomNo9L-Regu rf /Fk 134[37 37 55 37
42 23 32 32 1[42 42 42 60 23 37 1[23 42 42 23 37 42 37
42 42 11[60 46 42 51 1[51 60 1[69 1[55 1[28 60 1[51 51
60 55 51 51 6[28 42 3[42 42 42 42 42 42 23 21 28 3[28
28 40[{ TeXBase1Encoding ReEncodeFont }52 83.022 /NimbusRomNo9L-ReguItal
rf /Fl 136[78 2[32 1[45 2[58 58 1[32 1[32 32 1[58 32
52 1[52 1[58 13[58 2[71 9[71 71 1[78 12[58 1[58 1[58
58 58 6[39 39 40[{ TeXBase1Encoding ReEncodeFont }25
116.231 /NimbusRomNo9L-ReguItal rf /Fm 134[58 1[84 58
1[39 45 3[58 65 1[32 2[32 65 58 1[52 1[52 14[78 1[84
14[84 67[{ TeXBase1Encoding ReEncodeFont }16 116.231
/NimbusRomNo9L-Medi rf /Fn 134[83 4[55 65 2[92 1[92 138
46 2[46 1[83 1[74 92 2[83 11[120 1[92 10[129 3[120 2[120
19[55 45[{ TeXBase1Encoding ReEncodeFont }18 166.044
/NimbusRomNo9L-Medi rf /Fo 170[102 1[78 3[102 79[{
 TeXBase1Encoding ReEncodeFont }3 141.137 /NimbusRomNo9L-Regu
rf /Fp 166[82 2[82 1[69 63 75 2[82 82 4[38 1[82 1[69
3[82 65[{ TeXBase1Encoding ReEncodeFont }11 112.91 /NimbusRomNo9L-Regu
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 0 1
TeXDict begin 0 0 bop 0 0 a
SDict begin [/Producer (dvips + Distiller)/Title (Technology Review)/Subject
(Technology Review)/Creator (LaTeX with hyperref package)/Author (Krisna Irawan Jiongcheng Luo Drew Hamm)/Keywords
(capstone design, Technology Review) /DOCINFO pdfmark end
 0 0 a 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-158 -435 a
SDict begin H.S end
 -158 -435 a -158 -435 a
SDict begin H.R end
 -158 -435 a -158
-435 a
SDict begin [/View [/XYZ H.V]/Dest (page.0) cvn /DEST pdfmark end
 -158 -435 a Black 0 TeXcolorgray Black 0 TeXcolorgray
-150 -150 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -150 -150 a -150 -150 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -150 -150 a -150
-150 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -150 -150 a -150 -150 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -150 -150 a -150 -150
a
SDict begin [/Count -0/Dest (section.1) cvn/Title (Introduction) /OUT
pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -3/Dest (section.2) cvn/Title (Technologies) /OUT
pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -5/Dest (subsection.2.1) cvn/Title (Hardware selection of Microcontroller)
/OUT pdfmark end
 -150
-150 a -150 -150 a
SDict begin [/Count -0/Dest (subsubsection.2.1.1) cvn/Title (Context)
/OUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -0/Dest (subsubsection.2.1.2) cvn/Title (Options)
/OUT pdfmark end
 -150 -150
a -150 -150 a
SDict begin [/Count -0/Dest (subsubsection.2.1.3) cvn/Title (Criteria)
/OUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -0/Dest (subsubsection.2.1.4) cvn/Title (Table of Detailed Comparison)
/OUT pdfmark end
 -150 -150 a -150
-150 a
SDict begin [/Count -0/Dest (subsubsection.2.1.5) cvn/Title (Overall Discussion)
/OUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -5/Dest (subsection.2.2) cvn/Title (Hardware selection of Represented MEMS IMU)
/OUT pdfmark end
 -150 -150 a -150 -150
a
SDict begin [/Count -0/Dest (subsubsection.2.2.1) cvn/Title (Context)
/OUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -0/Dest (subsubsection.2.2.2) cvn/Title (Options)
/OUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -0/Dest (subsubsection.2.2.3) cvn/Title (Criteria)
/OUT pdfmark end
 -150
-150 a -150 -150 a
SDict begin [/Count -0/Dest (subsubsection.2.2.4) cvn/Title (Table of Detailed Comparison)
/OUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -0/Dest (subsubsection.2.2.5) cvn/Title (Overall Discussion)
/OUT pdfmark end
 -150 -150
a -150 -150 a
SDict begin [/Count -5/Dest (subsection.2.3) cvn/Title (Hardware selection of Communication Protocol Type)
/OUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -0/Dest (subsubsection.2.3.1) cvn/Title (Context)
/OUT pdfmark end
 -150 -150 a -150
-150 a
SDict begin [/Count -0/Dest (subsubsection.2.3.2) cvn/Title (Options)
/OUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -0/Dest (subsubsection.2.3.3) cvn/Title (Criteria)
/OUT pdfmark end
 -150 -150 a -150 -150
a
SDict begin [/Count -0/Dest (subsubsection.2.3.4) cvn/Title (Table of Detailed Comparison)
/OUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -0/Dest (subsubsection.2.3.5) cvn/Title (Overall Discussion)
/OUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -0/Dest (section.3) cvn/Title (Conclusion) /OUT
pdfmark end
 -150
-150 a -150 -150 a
SDict begin [/Count -0/Dest (section*.1) cvn/Title (References) /OUT
pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/PageMode /UseNone/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 -150 -150
a -150 -150 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin H.S end
 -150 -150 a -150
-150 a
SDict begin 12 H.A end
 -150 -150 a -150 -150 a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 -150 -150 a -150 -150
a
SDict begin [ {Catalog} <</PageLabels<</Nums[0<</P(0)>>1<</S/D>>]>>>>
/PUT pdfmark end
 -150 -150 a 1079 -50 a Fo(O)8 b Fp(R)g(E)g(G)e(O)g(N)40
b Fo(S)8 b Fp(T)n(A)-7 b(T)8 b(E)40 b Fo(U)8 b Fp(N)e(I)i(V)e(E)i(R)g
(S)g(I)g(T)f(Y)639 621 y Fn(Head-Up)63 b(Display)f(Alignment)i(System)
1474 999 y Fm(T)-11 b(echnology)28 b(Re)n(view)886 1376
y Fl(Senior)i(Softwar)l(e)f(Engineering)g(Pr)-5 b(oject)29
b(\(CS461\))1727 1517 y(F)-9 b(all)30 b(2016)1806 1853
y Fk(A)n(uthor)o(s:)1711 1953 y Fj(Krisna)e(Ira)o(w)o(an)1680
2052 y(Jiongcheng)e(Luo)1731 2152 y(Dre)n(w)j(Hamm)1811
3163 y Fi(Abstract)p 0 TeXcolorgray 0 TeXcolorgray 141
3288 a Fh(T)o(ODO)c(\(K\))p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 1 2
TeXDict begin 1 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-158 -435 a
SDict begin H.S end
 -158 -435 a -158 -435 a
SDict begin H.R end
 -158 -435 a -158
-435 a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 -158 -435 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-150 -50 a Fm(Contents)p 0 TeXcolorgray -150 135 a
SDict begin H.S end
 -150
135 a Fg(I)93 b(Intr)o(oduction)427 135 y
SDict begin 12 H.L end
 427 135 a 427
135 a
SDict begin [/Subtype /Link/Dest (section.1) cvn/H /I/Border [0 0 0]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end
 427 135 a 0 TeXcolorgray 66 w Fj(.)42 b(.)f(.)g(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)131
b Fg(2)p 0 TeXcolorgray -150 318 a
SDict begin H.S end
 -150 318 a Fg(II)61
b(T)-8 b(echnologies)429 318 y
SDict begin 12 H.L end
 429 318 a 429 318 a
SDict begin [/Subtype /Link/Dest (section.2) cvn/H /I/Border [0 0 0]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end
 429
318 a 0 TeXcolorgray 64 w Fj(.)42 b(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)
f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)131 b Fg(2)p 0
TeXcolorgray -25 417 a
SDict begin H.S end
 -25 417 a Fj(II-A)46 b(Hardw)o(are)28
b(selection)g(of)g(Microcontroller)1472 417 y
SDict begin 12 H.L end
 1472 417
a 1472 417 a
SDict begin [/Subtype /Link/Dest (subsection.2.1) cvn/H /I/Border [0
0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1472 417 a 0 TeXcolorgray 80 w Fj(.)41 b(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)131
b(2)p 0 TeXcolorgray 165 517 a
SDict begin H.S end
 165 517 a Fj(II-A)o(1)81
b(Conte)o(xt)694 517 y
SDict begin 12 H.L end
 694 517 a 694 517 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.1.1) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 694 517 a
0 TeXcolorgray 48 w Fj(.)42 b(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)g(.)h(.)131 b(2)p 0 TeXcolorgray 165 617 a
SDict begin H.S end

165 617 a Fj(II-A)o(2)81 b(Options)695 617 y
SDict begin 12 H.L end
 695 617
a 695 617 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.1.2) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 695 617 a 0 TeXcolorgray 47 w Fj(.)42 b(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)
f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)131 b(2)p 0 TeXcolorgray
165 716 a
SDict begin H.S end
 165 716 a Fj(II-A)o(3)81 b(Criteria)685 716
y
SDict begin 12 H.L end
 685 716 a 685 716 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.1.3) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 685 716 a 0 TeXcolorgray 57 w Fj(.)42
b(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)131
b(2)p 0 TeXcolorgray 165 816 a
SDict begin H.S end
 165 816 a Fj(II-A)o(4)81
b(T)-7 b(able)29 b(of)f(Detailed)g(Comparison)1459 816
y
SDict begin 12 H.L end
 1459 816 a 1459 816 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.1.4) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1459 816 a 0 TeXcolorgray 31
w Fj(.)41 b(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)
h(.)f(.)g(.)g(.)h(.)131 b(3)p 0 TeXcolorgray 165 916
a
SDict begin H.S end
 165 916 a Fj(II-A)o(5)81 b(Ov)o(erall)28 b(Discussion)1073
916 y
SDict begin 12 H.L end
 1073 916 a 1073 916 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.1.5) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1073 916 a 0 TeXcolorgray
43 w Fj(.)41 b(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)131 b(3)p
0 TeXcolorgray -25 1015 a
SDict begin H.S end
 -25 1015 a Fj(II-B)51 b(Hardw)o(are)28
b(selection)g(of)g(Represented)g(MEMS)g(IMU)1818 1015
y
SDict begin 12 H.L end
 1818 1015 a 1818 1015 a
SDict begin [/Subtype /Link/Dest (subsection.2.2) cvn/H /I/Border [0
0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1818 1015 a 0 TeXcolorgray
45 w Fj(.)42 b(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)
131 b(3)p 0 TeXcolorgray 165 1115 a
SDict begin H.S end
 165 1115 a Fj(II-B1)85
b(Conte)o(xt)694 1115 y
SDict begin 12 H.L end
 694 1115 a 694 1115 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.2.1) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 694 1115
a 0 TeXcolorgray 48 w Fj(.)42 b(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)g(.)h(.)131 b(3)p 0 TeXcolorgray 165 1214
a
SDict begin H.S end
 165 1214 a Fj(II-B2)85 b(Options)695 1214 y
SDict begin 12 H.L end
 695 1214
a 695 1214 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.2.2) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 695 1214 a 0 TeXcolorgray 47 w Fj(.)42 b(.)f(.)g(.)h(.)f
(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)
h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)131 b(3)p
0 TeXcolorgray 165 1314 a
SDict begin H.S end
 165 1314 a Fj(II-B3)85 b(Criteria)685
1314 y
SDict begin 12 H.L end
 685 1314 a 685 1314 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.2.3) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 685 1314 a 0 TeXcolorgray
57 w Fj(.)42 b(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h
(.)131 b(3)p 0 TeXcolorgray 165 1414 a
SDict begin H.S end
 165 1414 a Fj(II-B4)85
b(T)-7 b(able)29 b(of)f(Detailed)g(Comparison)1459 1414
y
SDict begin 12 H.L end
 1459 1414 a 1459 1414 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.2.4) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1459 1414 a 0 TeXcolorgray
31 w Fj(.)41 b(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)g(.)h(.)131 b(4)p 0 TeXcolorgray 165
1513 a
SDict begin H.S end
 165 1513 a Fj(II-B5)85 b(Ov)o(erall)28 b(Discussion)1073
1513 y
SDict begin 12 H.L end
 1073 1513 a 1073 1513 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.2.5) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1073 1513 a 0 TeXcolorgray
43 w Fj(.)41 b(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)131 b(4)p
0 TeXcolorgray -25 1613 a
SDict begin H.S end
 -25 1613 a Fj(II-C)51 b(Hardw)o(are)28
b(selection)g(of)g(Communication)f(Protocol)g(T)-7 b(ype)1983
1613 y
SDict begin 12 H.L end
 1983 1613 a 1983 1613 a
SDict begin [/Subtype /Link/Dest (subsection.2.3) cvn/H /I/Border [0
0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1983 1613 a 0 TeXcolorgray
67 w Fj(.)41 b(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)131
b(4)p 0 TeXcolorgray 165 1713 a
SDict begin H.S end
 165 1713 a Fj(II-C1)85
b(Conte)o(xt)694 1713 y
SDict begin 12 H.L end
 694 1713 a 694 1713 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.3.1) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 694 1713
a 0 TeXcolorgray 48 w Fj(.)42 b(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)g(.)h(.)131 b(4)p 0 TeXcolorgray 165 1812
a
SDict begin H.S end
 165 1812 a Fj(II-C2)85 b(Options)695 1812 y
SDict begin 12 H.L end
 695 1812
a 695 1812 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.3.2) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 695 1812 a 0 TeXcolorgray 47 w Fj(.)42 b(.)f(.)g(.)h(.)f
(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)
h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)131 b(4)p
0 TeXcolorgray 165 1912 a
SDict begin H.S end
 165 1912 a Fj(II-C3)85 b(Criteria)685
1912 y
SDict begin 12 H.L end
 685 1912 a 685 1912 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.3.3) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 685 1912 a 0 TeXcolorgray
57 w Fj(.)42 b(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h
(.)131 b(4)p 0 TeXcolorgray 165 2011 a
SDict begin H.S end
 165 2011 a Fj(II-C4)85
b(T)-7 b(able)29 b(of)f(Detailed)g(Comparison)1459 2011
y
SDict begin 12 H.L end
 1459 2011 a 1459 2011 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.3.4) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1459 2011 a 0 TeXcolorgray
31 w Fj(.)41 b(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)g(.)h(.)131 b(4)p 0 TeXcolorgray 165
2111 a
SDict begin H.S end
 165 2111 a Fj(II-C5)85 b(Ov)o(erall)28 b(Discussion)1073
2111 y
SDict begin 12 H.L end
 1073 2111 a 1073 2111 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.3.5) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1073 2111 a 0 TeXcolorgray
43 w Fj(.)41 b(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)131 b(5)p
0 TeXcolorgray -150 2294 a
SDict begin H.S end
 -150 2294 a Fg(III)29 b(Conclusion)372
2294 y
SDict begin 12 H.L end
 372 2294 a 372 2294 a
SDict begin [/Subtype /Link/Dest (section.3) cvn/H /I/Border [0 0 0]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end
 372 2294 a 0 TeXcolorgray
59 w Fj(.)41 b(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)
f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)g(.)h(.)131 b Fg(5)p 0 TeXcolorgray -150
2476 a
SDict begin H.S end
 -150 2476 a Fg(Refer)o(ences)237 2476 y
SDict begin 12 H.L end
 237 2476
a 237 2476 a
SDict begin [/Subtype /Link/Dest (section*.1) cvn/H /I/Border [0 0
0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 237 2476 a 0 TeXcolorgray 70 w Fj(.)41 b(.)g(.)g(.)h(.)f
(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)
131 b Fg(6)p 0 TeXcolorgray 1929 5764 a Fj(1)p 0 TeXcolorgray
eop end
%%Page: 2 3
TeXDict begin 2 2 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-158 -435 a
SDict begin H.S end
 -158 -435 a -158 -435 a
SDict begin H.R end
 -158 -435 a -158
-435 a
SDict begin [/View [/XYZ H.V]/Dest (page.2) cvn /DEST pdfmark end
 -158 -435 a 0 TeXcolorgray 0 TeXcolorgray 4021
-327 a Ff(2)p 0 TeXcolorgray -150 -150 a
SDict begin H.S end
 -150 -150 a
-150 -150 a
SDict begin 12 H.A end
 -150 -150 a -150 -150 a
SDict begin [/View [/XYZ H.V]/Dest (section.1) cvn /DEST pdfmark end
 -150 -150 a 1626
-50 a Fj(I)t(.)45 b(I)t Fe(N)t(T)t(R)q(O)t(D)t(U)t(C)t(T)t(I)t(O)t(N)
-67 75 y Fj(There)26 b(are)h(nine)f(dif)n(ferent)f(main)i(technologies)
e(that)i(will)h(be)e(used)h(or)g(in)m(v)n(olv)o(ed)d(in)j(this)h
(project.)d(These)i(technologies)e(contain)h(using)-150
175 y(of)35 b(both)f(softw)o(are)h(and)f(hardw)o(are.)g(F)o(or)g
(instance,)h(for)f(hardw)o(are,)g(we)h(will)h(compare)d(and)i(discuss)g
(about)f(some)h(possible)g(hardw)o(are)-150 275 y(options)23
b(for)h(b)n(uilding)f(the)h(demonstration)e(system;)j(for)e(softw)o
(are,)h(we)h(will)g(compare)d(and)i(discuss)h(dif)n(ferent)e
(algorithms)g(or)h(approaches)-150 374 y(for)k(resolving)f(the)h
(problem.)f(Each)h(of)g(us)h(tak)o(es)g(an)f(authorship)f
(\(responsibility\))f(for)i(three)g(technologies:)-67
574 y Fd(Jiongc)o(heng)i(\(Roger\):)p 0 TeXcolorgray
-59 690 a Fc(\017)p 0 TeXcolorgray 41 w Fj(Hardw)o(are)e(selection)g
(of)g(Microcontroller)p 0 TeXcolorgray -59 789 a Fc(\017)p
0 TeXcolorgray 41 w Fj(Hardw)o(are)g(selection)g(of)g(Represented)f
(MEMS)i(IMU)p 0 TeXcolorgray -59 889 a Fc(\017)p 0 TeXcolorgray
41 w Fj(Hardw)o(are)f(selection)g(of)g(Communication)e(Protocol)h(T)-7
b(ype)-67 1005 y Fd(Krisna:)p 0 TeXcolorgray -59 1121
a Fc(\017)p 0 TeXcolorgray 41 w Fj(Hardw)o(are)28 b(selection)g(of)g
(Data)h(display)f(de)n(vice)p 0 TeXcolorgray -59 1221
a Fc(\017)p 0 TeXcolorgray 41 w Fj(Algorithm)f(to)i(\002nd)f(HUD)h(of)n
(fset)f(using)g(statistical)i(correlation)p 0 TeXcolorgray
-59 1321 a Fc(\017)p 0 TeXcolorgray 41 w Fj(Programming)c(Language)-67
1437 y Fd(Drew:)p 0 TeXcolorgray -59 1553 a Fc(\017)p
0 TeXcolorgray 41 w Fj(Represent)i(IR)m(U:)h(Simulation)e(techniques)p
0 TeXcolorgray -59 1653 a Fc(\017)p 0 TeXcolorgray 41
w Fj(Algorithm)g(to)i(con)m(v)o(ert)d(ra)o(w)i(MEMS)h(IR)m(U)g(data)f
(output)f(to)i(Quaternion)e(output)p 0 TeXcolorgray -59
1752 a Fc(\017)p 0 TeXcolorgray 41 w Fj(Algorithm)g(to)i(get)f(of)n
(fset)g(using)g(both)g(sensor)g(outputs)-150 2064 y
SDict begin H.S end
 -150
2064 a -150 2064 a
SDict begin 12 H.A end
 -150 2064 a -150 2064 a
SDict begin [/View [/XYZ H.V]/Dest (section.2) cvn /DEST pdfmark end
 -150 2064
a 1605 2163 a Fj(I)t(I)t(.)45 b(T)t Fe(E)t(C)t(H)t(N)t(O)t(L)t(O)t(G)t
(I)t(E)t(S)-150 2191 y
SDict begin H.S end
 -150 2191 a -150 2191 a
SDict begin 12 H.A end
 -150 2191
a -150 2191 a
SDict begin [/View [/XYZ H.V]/Dest (subsection.2.1) cvn /DEST pdfmark
end
 -150 2191 a 98 x Fk(A.)c(Har)m(dwar)m(e)28
b(selection)g(of)h(Micr)l(ocontr)l(oller)-150 2332 y
SDict begin H.S end

-150 2332 a -150 2332 a
SDict begin 12 H.A end
 -150 2332 a -150 2332 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.1.1) cvn /DEST
pdfmark end
 -150
2332 a -67 2415 a Fk(1\))41 b(Conte)n(xt:)33 b Fj(It)21
b(is)f(critical)h(to)f(choose)f(the)h(most)g(appropriate)d
(microcontroller)g(for)j(this)g(system)g(since)g(there)g(are)g
(limitations)f(from)g(both)-150 2515 y(hardw)o(are)28
b(and)h(softw)o(are)f(perspecti)n(v)o(es.)g(A)i(microcontroller)c
(plays)j(an)g(important)f(role)h(in)g(the)h(system,)f(which)g(it)h
(will)g(ha)n(v)o(e)e(follo)n(wing)-150 2614 y(functionalities)f(in)i
(the)f(system:)p 0 TeXcolorgray -59 2730 a Fc(\017)p
0 TeXcolorgray 41 w Fj(Process)h(input)e(from)h(the)g(IMUs)h(and)f
(output)f(to)i(the)g(computer/display)p 0 TeXcolorgray
-59 2830 a Fc(\017)p 0 TeXcolorgray 41 w Fj(Process)g(the)f(alignment)f
(algorithm)p 0 TeXcolorgray -59 2930 a Fc(\017)p 0 TeXcolorgray
41 w Fj(Deb)n(ugging)f(and)i(testing)h(purpose)-150 3046
y
SDict begin H.S end
 -150 3046 a -150 3046 a
SDict begin 12 H.A end
 -150 3046 a -150 3046 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.1.2) cvn /DEST
pdfmark end
 -150
3046 a -67 3146 a Fk(2\))41 b(Options:)h Fj(W)-7 b(e)31
b(consider)d(to)i(use)g(a)g(board)e(between)h Fk(Ar)m(duino)f(Pr)l(o)i
(Mini)g Fj([)p 0 1 0 TeXcolorrgb 2322 3146 a
SDict begin H.S end
 2322 3146
a 0 1 0 TeXcolorrgb Fj(1)p 0 1 0 TeXcolorrgb 2363 3089
a
SDict begin H.R end
 2363 3089 a 2363 3146 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (cite.arduino) cvn H.B /ANN pdfmark end
 2363 3146 a 0 TeXcolorgray
Fj(],)f Fk(Adafruit)g(Pr)l(o)h(T)-5 b(rink)o(et)32 b
Fj([)p 0 1 0 TeXcolorrgb 3193 3146 a
SDict begin H.S end
 3193 3146 a 0 1 0
TeXcolorrgb Fj(2)p 0 1 0 TeXcolorrgb 3235 3089 a
SDict begin H.R end
 3235
3089 a 3235 3146 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (cite.trinket) cvn H.B /ANN pdfmark end
 3235 3146 a 0 TeXcolorgray Fj(])d(and)g
Fk(In)m(venSense)f(MPU-)-150 3245 y(9250)g(CA-SDK)i(Refer)m(ence)g
(Boar)m(d)h Fj([)p 0 1 0 TeXcolorrgb 992 3246 a
SDict begin H.S end
 992 3246
a 0 1 0 TeXcolorrgb -1 x Fj(3)p 0 1 0 TeXcolorrgb 1033
3189 a
SDict begin H.R end
 1033 3189 a 1033 3245 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (cite.MPU9250SDK) cvn H.B /ANN pdfmark end
 1033 3245 a 0 TeXcolorgray
Fj(].)f(An)o(yone)e(of)h(these)h(board)f(has)h(its)h(outstanding)d
(areas)i(and)f(lack,)g(and)h(we)g(will)h(choose)e(one)g(of)-150
3345 y(them)f(based)g(on)g(the)h(follo)n(wing)e(criteria.)-150
3444 y
SDict begin H.S end
 -150 3444 a -150 3444 a
SDict begin 12 H.A end
 -150 3444 a -150 3444
a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.1.3) cvn /DEST
pdfmark end
 -150 3444 a -67 3544 a Fk(3\))41 b(Criteria:)-150 3576
y
SDict begin H.S end
 -150 3576 a -150 3576 a
SDict begin 12 H.A end
 -150 3576 a -150 3576 a
SDict begin [/View [/XYZ H.V]/Dest (Item.1) cvn /DEST pdfmark end
 -150
3576 a 0 TeXcolorgray -94 3660 a Fj(1\))p 0 TeXcolorgray
40 w Fg(Support)c(Language)p Fj(,)d(we)g(e)o(xpect)f(to)i(use)f(a)h
(general)e(programming)e(language)h(for)i(the)g(microcontroller)d
(since)j(using)g(f)o(amiliar)16 3760 y(programming)22
b(language)j(will)h(reduce)f(our)g(time)h(on)f(addition)g(research)g
(and)g(the)h(sa)n(v)o(e)g(time)g(on)f(w)o(orking)g(on)g(the)h
(algorithm)e(itself.)-150 3778 y
SDict begin H.S end
 -150 3778 a -150 3778
a
SDict begin 12 H.A end
 -150 3778 a -150 3778 a
SDict begin [/View [/XYZ H.V]/Dest (Item.2) cvn /DEST pdfmark end
 -150 3778 a 0 TeXcolorgray
-94 3860 a Fj(2\))p 0 TeXcolorgray 40 w Fg(Clock)31 b(Speed)p
Fj(,)f(the)f(alignment)e(algorithm)h(is)h(required)e(to)j(within)e
(around)f(500)h(milliseconds)h(time)g(from)e(taking)i(the)f(input)h
(from)16 3959 y(the)g(IR)m(Us)g(to)f(the)h(output)e(of)h(aligned)g
(data,)g(that)g(require)g(the)g(board)f(has)i(a)g(f)o(ast)g(speed)f
(and)g(running)e(an)o(y)i(processes.)-150 3977 y
SDict begin H.S end
 -150
3977 a -150 3977 a
SDict begin 12 H.A end
 -150 3977 a -150 3977 a
SDict begin [/View [/XYZ H.V]/Dest (Item.3) cvn /DEST pdfmark end
 -150 3977
a 0 TeXcolorgray -94 4059 a Fj(3\))p 0 TeXcolorgray 40
w Fg(I2C)j(Pr)o(otocol)p Fj(,)25 b(this)k(is)g(necessary)f(to)g(ha)n(v)
o(e)g(on)g(the)g(board)f(since)i(the)f(MPU-9250)e(\(our)h(selected)i
(IMU\))f(require)e(I2C)j(protocol)d(to)16 4158 y(communicate.)-150
4159 y
SDict begin H.S end
 -150 4159 a -150 4159 a
SDict begin 12 H.A end
 -150 4159 a -150 4159
a
SDict begin [/View [/XYZ H.V]/Dest (Item.4) cvn /DEST pdfmark end
 -150 4159 a 0 TeXcolorgray -94 4258 a Fj(4\))p 0 TeXcolorgray
40 w Fg(Connection)k(with)h(PC)p Fj(,)e(this)g(is)g(necessary)f(to)g
(ha)n(v)o(e)g(on)g(the)h(board)e(since)i(we)f(will)i(use)e(computer)f
(to)i(an)o(y)e(softw)o(are)h(program.)-150 4276 y
SDict begin H.S end
 -150
4276 a -150 4276 a
SDict begin 12 H.A end
 -150 4276 a -150 4276 a
SDict begin [/View [/XYZ H.V]/Dest (Item.5) cvn /DEST pdfmark end
 -150 4276
a 0 TeXcolorgray -94 4358 a Fj(5\))p 0 TeXcolorgray 40
w Fg(Size)p Fj(,)h(size)g(is)g(less)h(important)d(since)i(this)g
(system)f(is)i(for)e(demonstration)e(purpose.)-150 4376
y
SDict begin H.S end
 -150 4376 a -150 4376 a
SDict begin 12 H.A end
 -150 4376 a -150 4376 a
SDict begin [/View [/XYZ H.V]/Dest (Item.6) cvn /DEST pdfmark end
 -150
4376 a 0 TeXcolorgray -94 4457 a Fj(6\))p 0 TeXcolorgray
40 w Fg(Cost)p Fj(,)i(this)h(is)h(relati)n(v)o(ely)d(important)g(b)n
(ut)h(as)i(long)d(as)j(the)e(price)g(is)h(within)g(the)f(e)o(xpected)f
(b)n(udget,)g(that)i(will)g(be)g(acceptable.)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 3 4
TeXDict begin 3 3 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-158 -435 a
SDict begin H.S end
 -158 -435 a -158 -435 a
SDict begin H.R end
 -158 -435 a -158
-435 a
SDict begin [/View [/XYZ H.V]/Dest (page.3) cvn /DEST pdfmark end
 -158 -435 a 0 TeXcolorgray 0 TeXcolorgray 4021
-327 a Ff(3)p 0 TeXcolorgray -150 -150 a
SDict begin H.S end
 -150 -150 a
-150 -150 a
SDict begin 12 H.A end
 -150 -150 a -150 -150 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.1.4) cvn /DEST
pdfmark end
 -150 -150 a -67 -50
a Fk(4\))41 b(T)-8 b(able)28 b(of)h(Detailed)f(Comparison:)p
0 TeXcolorgray 0 TeXcolorgray -76 102 4053 4 v -76 302
4 200 v 200 223 a Fg(Model)p 699 302 V 889 172 a Fk(Ar)m(duino)870
272 y(Pr)l(o)h(Mini)p 1344 302 V 1828 172 a(Adafruit)1774
272 y(Pr)l(o)g(T)-5 b(rink)o(et)p 2586 302 V 3061 172
a(In)m(venseSense)2639 272 y(MPU-9250)26 b(CA-SDK)j(Refer)m(ence)f
(Boar)m(d)p 3973 302 V -76 305 4053 4 v -76 504 4 200
v 123 425 a Fg(Cor)o(e)i(Chip)p 699 504 V 318 w Fj(A)-9
b(Tme)o(ga328)p 1344 504 V 536 w(A)g(Tme)o(ga328)p 2586
504 V 3185 375 a(T)j(e)o(xas)2941 474 y(Instrument)27
b(MSP430)p 3973 504 V -76 508 4053 4 v -76 607 4 100
v -23 577 a Fg(Support)j(Language)p 699 607 V 346 w Fj(C)p
1344 607 V 888 w(C)p 2586 607 V 1173 w(C/C++)p 3973 607
V -76 610 4053 4 v -76 810 4 200 v 87 731 a Fg(Clock)h(Speed)p
699 810 V 917 680 a Fj(8MHz)807 780 y(\(3.3V)c(mode\))p
1344 810 V 1840 680 a(12MHz)1781 780 y(\(3V)i(mode\))p
2586 810 V 3147 680 a(16MHZ)3061 780 y(\(1.8V)56 b(3.6V\))p
3973 810 V -76 813 4053 4 v -76 1012 4 200 v 246 883
a Fg(I2C)5 982 y(Pr)o(otocol/Number)p 699 1012 V 931
933 a Fj(Y)-8 b(es/1)p 1344 1012 V 757 w(Y)g(es/1)p 2586
1012 V 877 w(Embedded)26 b(Structure)p 3973 1012 V -76
1016 4053 4 v -76 1215 4 200 v 110 1085 a Fg(Connection)164
1185 y(with)31 b(PC)p 699 1215 V 942 1136 a Fj(USB)p
1344 1215 V 679 w(FTDI/USB)p 2586 1215 V 874 w(USB/Bluetooth)p
3973 1215 V -76 1218 4053 4 v -76 1318 4 100 v 241 1288
a Fg(Size)p 699 1318 V 368 w Fj(33mm)c(X)i(18mm)p 1344
1318 V 255 w(38mm)e(X)i(18mm)f(X)h(2mm)p 2586 1318 V
734 w(Unkno)n(wn)p 3973 1318 V -76 1321 4053 4 v -76
1421 4 100 v -1 1391 a Fg(Cost)i(\(U)l(.S)f(Dollar\))p
699 1421 V 302 w Fj($9.95)p 1344 1421 V 754 w($9.95)p
2586 1421 V 1084 w($440.00)p 3973 1421 V -76 1424 4053
4 v -76 1623 4 200 v 122 1544 a Fg(Adv)o(antage)p 699
1623 V 926 1494 a Fj(Small)959 1593 y(size)p 1344 1623
V 1866 1494 a(F)o(aster)1768 1593 y(clock)e(speed)p 2586
1623 V 2919 1544 a(W)m(ith)h(embedded)d(IMU)p 3973 1623
V -76 1627 4053 4 v -76 1826 4 200 v 154 1747 a Fg(Shortage)p
699 1826 V 907 1696 a Fj(Slo)n(wer)808 1796 y(Clock)i(Speed)p
1344 1826 V 1884 1696 a(Lack)1397 1796 y(of)h(resource)e(of)h
(guidance/datasheet)p 2586 1826 V 3117 1747 a(High)g(cost)p
3973 1826 V -76 1829 4053 4 v -150 1979 a
SDict begin H.S end
 -150 1979 a
-150 1979 a
SDict begin 12 H.A end
 -150 1979 a -150 1979 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.1.5) cvn /DEST
pdfmark end
 -150 1979 a -67 2078
a Fk(5\))41 b(Over)o(all)23 b(Discussion:)38 b Fj(By)24
b(comparing)d(these)j(boards)f(by)g(the)h(abo)o(v)o(e)e(criteria,)i
Fk(Ar)m(duino)e(Pr)l(o)i(Mini)g Fj(and)g Fk(Adafruit)f(Pr)l(o)h(T)-5
b(rink)o(et)26 b Fj(ha)n(v)o(e)-150 2178 y(similar)k(performance)d(and)
j(speci\002cation,)f(the)o(y)g(both)h(ha)n(v)o(e)f(the)h(adv)n(antages)
f(of)g(small)i(size)g(and)e(lo)n(w)h(cost.)h Fk(In)m(venseSense)c
(MPU-9250)-150 2278 y(CA-SDK)34 b(Refer)m(ence)f(Boar)m(d)i
Fj(is)g(a)g(special)f(case,)g(which)f(its)i(a)f(board)f(as)h(well)h(as)
f(the)g(IR)m(U)g(itself)h(since)f(it)h(has)f(embedded)d(on-board)-150
2377 y(sensors.)c Fk(MPU-9250)f(CA-SDK)i(is)h(very)f(powerful)g
Fj(for)f(multi-sensor)f(system,)i(other)f(than)g(an)h(embedded)d
(MPU-9250)h(\(accelerometer)m(,)-150 2477 y(gyroscope)36
b(and)h(compass\),)f(it)j(also)f(has)g(pressure)f(sensor)m(,)g(UV)h
(sensor)m(,)f(humidity)f(and)h(temperature)f(sensor)m(,)h(light)g(and)g
(proximity)-150 2576 y(sensor)-5 b(.)26 b(Ho)n(we)n(v)o(er)m(,)e(high)i
(cost)g(is)i(a)e(noticeable)f(shortage)h(of)g Fk(MPU-9250)e(CA-SDK)p
Fj(.)i(In)g(addition,)f(and)h(not)g(all)g(of)g(its)i(functionalities)d
(are)-150 2676 y(necessary)j(for)g(this)h(project.)-67
2776 y(No)n(w)-5 b(,)25 b(we)g(only)g(look)g(at)h Fk(Adafruit)e(Pr)l(o)
i(T)-5 b(rink)o(et)28 b Fj(and)d Fk(Ar)m(duino)f(Pr)l(o)i(Mini)p
Fj(.)f(Based)h(on)f(the)h(comparison)d(and)i(the)h(criteria,)e
Fk(Adafruit)h(Pr)l(o)-150 2875 y(T)-5 b(rink)o(et)30
b Fj(will)f(be)f(more)f(preferable.)f(Because)i(this)g(module)f(has)h
(a)g(f)o(aster)g(clock)f(speed)h(compares)f(to)h(the)g
Fk(Ar)m(duino)e(Pr)l(o)i(Mini)p Fj(,)g(although)-150
2975 y(it)d(has)g(a)f(lar)o(ger)g(size)h(b)n(ut)f(this)h(doesnt)f(af)n
(fect)f(to)i(its)g(actual)f(performance)e(based)i(on)g(our)f(project)h
(requirement,)e(other)h(than)h(that,)g(all)h(other)-150
3075 y(concerned)h(criteria)i(are)h(same)f(as)i(the)e
Fk(Ar)m(duino)f(Pr)l(o)i(Mini)p Fj(.)-150 3207 y
SDict begin H.S end
 -150
3207 a -150 3207 a
SDict begin 12 H.A end
 -150 3207 a -150 3207 a
SDict begin [/View [/XYZ H.V]/Dest (subsection.2.2) cvn /DEST pdfmark
end
 -150 3207
a 98 x Fk(B.)41 b(Har)m(dwar)m(e)28 b(selection)g(of)h(Repr)m(esented)e
(MEMS)i(IMU)-150 3348 y
SDict begin H.S end
 -150 3348 a -150 3348 a
SDict begin 12 H.A end
 -150
3348 a -150 3348 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.2.1) cvn /DEST
pdfmark end
 -150 3348 a -67 3431 a Fk(1\))41 b(Conte)n(xt:)e
Fj(An)25 b(Inertial)f(Measurement)g(Unit)h(\(IMU\))f(is)j(the)e(most)g
(signi\002cant)g(part)f(of)h(the)g(hardw)o(are)f(components)f(of)i
(this)h(system.)-150 3530 y(An)32 b(MEMS)h(IMU)f(will)h(be)f(used)g(to)
h(measure)e(the)i(acceleration,)e(v)o(elocity)g(position)g(of)h(the)h
(aircraft)e(and)h(output)f(data)h(for)g(alignment)-150
3630 y(algorithm.)25 b(Therefore,)f(we)i(are)h(looking)d(for)i(a)h
(model)e(of)h(IMU)h(that)f(is)h(highly)f(accurate,)f(well)i(performed)c
(as)k(well)g(as)g(with)g(af)n(fordable)-150 3730 y(e)o(xpense)g(for)h
(the)h(demonstration)d(of)i(this)h(project,)e(follo)n(wing)g(chart)h
(compare)f(these)i(three)f(model)f(with)i(a)g(list)h(of)e(comparison.)
-150 3829 y
SDict begin H.S end
 -150 3829 a -150 3829 a
SDict begin 12 H.A end
 -150 3829 a -150
3829 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.2.2) cvn /DEST
pdfmark end
 -150 3829 a -67 3929 a Fk(2\))41 b(Options:)35
b Fj(W)-7 b(e)24 b(are)e(looking)f(at)i(three)e(models)h(that)h(are)f
(considered)f(to)h(be)h(the)f(most)g(lik)o(ely)h(options)e(for)h
(representing)e(MEMS)j(IR)m(U.)-150 4028 y Fk(9DoF)k(Sensor)g(Stic)n(k)
i Fj([)p 0 1 0 TeXcolorrgb 543 4028 a
SDict begin H.S end
 543 4028 a 0 1 0
TeXcolorrgb Fj(4)p 0 1 0 TeXcolorrgb 584 3972 a
SDict begin H.R end
 584 3972
a 584 4028 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (cite.sensorStick) cvn H.B /ANN pdfmark end
 584 4028 a 0 TeXcolorgray Fj(],)e Fk(MPU-9250)f(IMU)31
b Fj([)p 0 1 0 TeXcolorrgb 1278 4029 a
SDict begin H.S end
 1278 4029 a 0 1 0
TeXcolorrgb -1 x Fj(5)p 0 1 0 TeXcolorrgb 1319 3972 a
SDict begin H.R end

1319 3972 a 1319 4028 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (cite.mpu9250) cvn H.B /ANN pdfmark end
 1319 4028 a 0 TeXcolorgray Fj(])d(and)f
Fk(9DoF)f(IMU)31 b Fj([)p 0 1 0 TeXcolorrgb 1960 4029
a
SDict begin H.S end
 1960 4029 a 0 1 0 TeXcolorrgb -1 x Fj(6)p 0 1 0 TeXcolorrgb
2002 3972 a
SDict begin H.R end
 2002 3972 a 2002 4028 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (cite.9dof) cvn H.B /ANN pdfmark end
 2002 4028 a 0 TeXcolorgray
Fj(])c(are)h(three)e(models)h(of)g(IMU.)g(All)h(these)g(three)f(IMUs)h
(are)f(with)g(9)-150 4128 y(de)o(grees)g(of)h(freedom/9)e(axis)j
(sensor)m(,)e(that)i(indicates)f(all)h(of)f(these)g(IMUs)h(contain)e
(MEMS)i(sensors)f(of)g(accelerometer)m(,)e(gyroscope)g(and)-150
4228 y(magnetometer\(compass\),)i(which)k(is)i(a)f(basic)g(requirement)
e(for)h(choosing)f(the)h(IMU)h(in)g(this)g(project.)f(F)o(ollo)n(wing)f
(are)i(some)f(speci\002c)-150 4327 y(criteria)c(that)h(we)g(look)e(and)
h(compare)f(for)h(choosing)f(the)h(most)h(proper)e(MEMS)h(IR)m(U.)-150
4427 y
SDict begin H.S end
 -150 4427 a -150 4427 a
SDict begin 12 H.A end
 -150 4427 a -150 4427
a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.2.3) cvn /DEST
pdfmark end
 -150 4427 a -67 4527 a Fk(3\))41 b(Criteria:)-150 4558
y
SDict begin H.S end
 -150 4558 a -150 4558 a
SDict begin 12 H.A end
 -150 4558 a -150 4558 a
SDict begin [/View [/XYZ H.V]/Dest (Item.7) cvn /DEST pdfmark end
 -150
4558 a 0 TeXcolorgray -94 4643 a Fj(1\))p 0 TeXcolorgray
40 w Fg(Operating)34 b(v)o(oltage)g(range)p Fj(,)d(this)i(is)g
(determines)f(based)g(on)g(the)g(model)g(we)g(use)h(for)f(the)g
(microcontroller)m(,)d(which)j(an)g(operable)16 4742
y(v)n(oltage)c(range)f(of)i(an)f(IMU)g(should)g(be)g(less)i(than)e(the)
g(output)g(v)n(oltage)f(of)i(its)g(microcontroller)-5
b(.)-150 4760 y
SDict begin H.S end
 -150 4760 a -150 4760 a
SDict begin 12 H.A end
 -150 4760 a -150
4760 a
SDict begin [/View [/XYZ H.V]/Dest (Item.8) cvn /DEST pdfmark end
 -150 4760 a 0 TeXcolorgray -94 4842 a Fj(2\))p
0 TeXcolorgray 40 w Fg(Support)33 b(I2C)g(pr)o(otocol)p
Fj(,)28 b(this)j(is)h(signi\002cant)e(since)g(I2C)h(could)e(be)h(the)h
(only)e(protocol)g(for)h(an)g(IMU)g(to)h(communicate)d(with)j(the)16
4942 y(microcontroller)-5 b(.)-150 4943 y
SDict begin H.S end
 -150 4943 a
-150 4943 a
SDict begin 12 H.A end
 -150 4943 a -150 4943 a
SDict begin [/View [/XYZ H.V]/Dest (Item.9) cvn /DEST pdfmark end
 -150 4943 a 0 TeXcolorgray
-94 5041 a Fj(3\))p 0 TeXcolorgray 40 w Fg(Acceler)o(ometer)29
b(output)h(r)o(esolution)p Fj(,)e(this)h(will)g(determine)e(the)i
(accurac)o(y)d(of)j(the)f(acceleration)f(data)i(output.)-150
5059 y
SDict begin H.S end
 -150 5059 a -150 5059 a
SDict begin 12 H.A end
 -150 5059 a -150 5059
a
SDict begin [/View [/XYZ H.V]/Dest (Item.10) cvn /DEST pdfmark end
 -150 5059 a 0 TeXcolorgray -94 5141 a Fj(4\))p 0 TeXcolorgray
40 w Fg(Gyr)o(oscope)g(output)h(r)o(esolution)p Fj(,)e(this)h(will)g
(determine)e(the)i(accurac)o(y)d(of)j(the)f(angular)f(v)o(elocity)g
(data)i(output.)-150 5159 y
SDict begin H.S end
 -150 5159 a -150 5159 a
SDict begin 12 H.A end
 -150
5159 a -150 5159 a
SDict begin [/View [/XYZ H.V]/Dest (Item.11) cvn /DEST pdfmark end
 -150 5159 a 0 TeXcolorgray -94 5241
a Fj(5\))p 0 TeXcolorgray 40 w Fg(Magnetometer)g(output)i(r)o
(esolution)p Fj(,)c(this)i(will)g(determine)e(the)i(accurac)o(y)e(of)h
(the)g(orientation)f(data)i(output.)-150 5259 y
SDict begin H.S end
 -150
5259 a -150 5259 a
SDict begin 12 H.A end
 -150 5259 a -150 5259 a
SDict begin [/View [/XYZ H.V]/Dest (Item.12) cvn /DEST pdfmark end
 -150 5259
a 0 TeXcolorgray -94 5340 a Fj(6\))p 0 TeXcolorgray 40
w Fg(Cost)p Fj(,)f(this)h(is)h(relati)n(v)o(ely)d(important)g(b)n(ut)h
(as)i(long)d(as)j(the)e(price)g(is)h(within)g(the)f(e)o(xpected)f(b)n
(udget,)g(that)i(will)g(be)g(acceptable.)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 4 5
TeXDict begin 4 4 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-158 -435 a
SDict begin H.S end
 -158 -435 a -158 -435 a
SDict begin H.R end
 -158 -435 a -158
-435 a
SDict begin [/View [/XYZ H.V]/Dest (page.4) cvn /DEST pdfmark end
 -158 -435 a 0 TeXcolorgray 0 TeXcolorgray 4021
-327 a Ff(4)p 0 TeXcolorgray -150 -150 a
SDict begin H.S end
 -150 -150 a
-150 -150 a
SDict begin 12 H.A end
 -150 -150 a -150 -150 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.2.4) cvn /DEST
pdfmark end
 -150 -150 a -67 -50
a Fk(4\))41 b(T)-8 b(able)28 b(of)h(Detailed)f(Comparison:)p
0 TeXcolorgray 0 TeXcolorgray -150 202 4263 4 v -150
401 4 200 v 248 322 a Fg(Model)p 869 401 V 1242 272 a
Fk(9DoF)1132 371 y(Sensor)g(Stic)n(k)p 1805 401 V 2189
272 a(MPU-9250)2298 371 y(IMU)p 2943 401 V 3336 322 a(9DoF)g(IMU)p
4109 401 V -150 405 4263 4 v -150 703 4 299 v 232 524
a Fg(MEMS)225 624 y(Sensors)p 869 703 V 922 474 a Fj(Accel.:)h(ADXL345)
922 574 y(Gyro:)f(ITG-3200)922 674 y(Magn.:)g(HMC5883L)p
1805 703 V 2189 575 a(MPU-9250)p 2943 703 V 783 w(LSM9DS1)p
4109 703 V -150 707 4263 4 v -150 806 4 100 v -97 777
a Fg(Operating)i(V)-8 b(oltage)29 b(Range)p 869 806 V
355 w Fj(2.1)57 b(3.6V)p 1805 806 V 710 w(2.4)g(3.6V)p
2943 806 V 825 w(1.9)g(3.6V)p 4109 806 V -150 810 4263
4 v -150 909 4 100 v 130 879 a Fg(Output)30 b(T)-6 b(ype)p
869 909 V 583 w Fj(Unkno)n(wn)p 1805 909 V 654 w(16)28
b(bits)h(ADC)p 2943 909 V 716 w(16)f(bits)h(ADC)p 4109
909 V -150 913 4263 4 v -150 1012 4 100 v -31 982 a Fg(Support)i(I2C)g
(Pr)o(otocol)p 869 1012 V 320 w Fj(2g,)d(4g,)g(8g,)g(16g)p
1805 1012 V 512 w(2g,)g(4g,)g(8g,)g(16g)p 2943 1012 V
627 w(2g,)g(4g,)g(8g,)g(16g)p 4109 1012 V -150 1016 4263
4 v -150 1315 4 299 v 28 1085 a Fg(Gyr)o(oscope)h(Output)172
1185 y(Resolution)29 1285 y(\(Angular)h(V)-8 b(elocity\))p
869 1315 V 1272 1135 a Fj(Full)968 1235 y(scale)29 b(=)g(2000)e(de)o
(gree/s)p 1805 1315 V 1858 1186 a(250,)h(500,)f(1000,)g(2000)g(de)o
(gree/s)p 2943 1315 V 115 w(250,)h(500,)f(1000,)g(2000)g(de)o(gree/s)p
4109 1315 V -150 1318 4263 4 v -150 1617 4 299 v -44
1388 a Fg(Magnetometer)i(Output)172 1487 y(Resolution)237
1587 y(\(gauss\))p 869 1617 V 1177 1488 a Fj(8)g(gausses)p
1805 1617 V 691 w(48)f(gausses)p 2943 1617 V 628 w(4,)h(8,)f(12,)g(16)g
(gausses)p 4109 1617 V -150 1620 4263 4 v -150 1720 4
100 v 290 1690 a Fg(Size)p 869 1720 V 581 w Fj(22.22)f(X)i(18.48)e(mm)p
1805 1720 V 548 w(Unkno)n(wn)p 2943 1720 V 624 w(14.3)h(mm)g(X)h(20.5)e
(mm)p 4109 1720 V -150 1723 4263 4 v -150 1922 4 200
v 281 1793 a Fg(Cost)133 1892 y(\(U)l(.S.)k(Dollar\))p
869 1922 V 1225 1843 a Fj($49.95)p 1805 1922 V 806 w($14.95)p
2943 1922 V 921 w($24.95)p 4109 1922 V -150 1926 4263
4 v -150 2025 4 100 v 170 1995 a Fg(Adv)o(antage)p 869
2025 V 368 w Fj(Higher)d(output)f(resolution)p 1805 2025
V 351 w(Least)i(e)o(xpensi)n(v)o(e)p 2943 2025 V 349
w(W)m(ide)g(spectrum)e(of)i(sensor)f(range)p 4109 2025
V -150 2028 4263 4 v -150 2128 4 100 v 202 2098 a Fg(Shortage)p
869 2128 V 586 w Fj(High)g(e)o(xpense)p 1805 2128 V 455
w(W)-7 b(eak)o(er)29 b(performance)p 2943 2128 V 500
w(A)g(little)g(e)o(xpensi)n(v)o(e)p 4109 2128 V -150
2131 4263 4 v -150 2281 a
SDict begin H.S end
 -150 2281 a -150 2281 a
SDict begin 12 H.A end
 -150
2281 a -150 2281 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.2.5) cvn /DEST
pdfmark end
 -150 2281 a -67 2381 a Fk(5\))41 b(Over)o(all)g
(Discussion:)54 b Fj(In)41 b(o)o(v)o(erall,)e(these)i(three)g(models)f
(ha)n(v)o(e)h(similar)g(performance)d(and)j(speci\002cation)f(of)g(out)
h(resolution,)-150 2480 y(ho)n(we)n(v)o(er)m(,)31 b Fk(9DoF)j(Sensor)f
(Stic)n(k)j Fj(will)e(be)g(the)g(least)h(preferred)c(option)i(since)h
(it)h(has)f(the)g(highest)f(e)o(xpense)g(and)g(it)i(lacks)f(of)g
(resources)-150 2580 y(of)h(its)h(datasheet)f(the)g(rele)n(v)n(ant)f
(guidance.)f(By)j(comparing)d(between)h Fk(MPU-9250)f(IMU)40
b Fj(and)34 b Fk(9DoF)h(IMU)p Fj(,)g(the)o(y)f(both)h(ha)n(v)o(e)f
(speci\002c)-150 2679 y(datasheet)29 b(that)g(can)g(be)f(found,)g(and)g
(their)h(prices)g(are)g(both)f(within)h(the)g(acceptable)f(range,)f(so)
j(by)e(looking)g(at)h(more)g(speci\002c)g(detail)g(of)-150
2779 y(their)24 b(hardw)o(are)f(performance,)e Fk(9DoF)j(IMU)k
Fj(has)d(wider)f(sensor)g(range)f(to)h(choose)g(for)g(its)h(output)e
(resolution,)g(which)h(is)h(more)e(functional)-150 2879
y(than)j(the)g Fk(MPU-9250)f(IMU)p Fj(.)h(Therefore,)e(the)j
Fk(9DoF)e(IMU)31 b Fj(model)25 b(w)o(ould)h(be)g(the)h(\002rst)g
(preference)d(for)i(selecting)g(the)g(represent)g(MEMS)-150
2978 y(IMU.)-150 3110 y
SDict begin H.S end
 -150 3110 a -150 3110 a
SDict begin 12 H.A end
 -150
3110 a -150 3110 a
SDict begin [/View [/XYZ H.V]/Dest (subsection.2.3) cvn /DEST pdfmark
end
 -150 3110 a 99 x Fk(C.)42 b(Har)m(dwar)m(e)28
b(selection)g(of)h(Communication)d(Pr)l(otocol)i(T)-6
b(ype)-150 3252 y
SDict begin H.S end
 -150 3252 a -150 3252 a
SDict begin 12 H.A end
 -150 3252 a
-150 3252 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.3.1) cvn /DEST
pdfmark end
 -150 3252 a -67 3334 a Fk(1\))41 b(Conte)n(xt:)f
Fj(There)25 b(are)h(man)o(y)f(dif)n(ferent)g(types)h(of)f(protocol)g
(for)h(hardw)o(are)e(component)g(de)n(vices)i(communicating)d(with)j
(each)g(other)-5 b(.)-150 3434 y(W)e(e)30 b(chose)e(three)g(dif)n
(ferent)f(protocol)f(types)j(that)f(are)h(the)f(most)h(common)d(types)j
(to)f(use,)h(as)g(well)g(as)g(doable)f(in)g(our)g(hardw)o(are)f
(system.)-150 3534 y
SDict begin H.S end
 -150 3534 a -150 3534 a
SDict begin 12 H.A end
 -150 3534
a -150 3534 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.3.2) cvn /DEST
pdfmark end
 -150 3534 a -67 3633 a Fk(2\))41 b(Options:)50
b(I2C)38 b(\(Inter)n(-Inte)m(gr)o(ated)c(Cir)m(cuit\))p
Fj(,)k Fk(SPI)f(\(Serial)g(P)-7 b(eripher)o(al)36 b(Interface\))h
Fj(and)g Fk(U)m(ART)g(\(Univer)o(sal)g(Async)o(hr)l(onous)f(Re-)-150
3733 y(ceiver/T)-5 b(r)o(ansmitter\))32 b Fj(are)f(three)g(possible)g
(communication)d(protocol)i(types)h(for)f(our)h(project,)f(each)h(of)g
(them)g(has)g(its)h(o)n(wn)f(adv)n(antages)-150 3833
y(and)d(lack.)g(In)g(re)o(gards)f(to)h(this)h(project,)f(we)h(will)g
(consider)e(the)i(follo)n(wing)d(criteria)j(for)e(choosing)g(the)i
(most)f(appropriate)e(protocol)h(type)-150 3932 y(for)h(our)g(hardw)o
(are)f(de)n(vices)h(communication)d([)p 0 1 0 TeXcolorrgb
1302 3933 a
SDict begin H.S end
 1302 3933 a 0 1 0 TeXcolorrgb -1 x Fj(7)p
0 1 0 TeXcolorrgb 1343 3877 a
SDict begin H.R end
 1343 3877 a 1343 3932 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (cite.protocol1) cvn H.B /ANN pdfmark end

1343 3932 a 0 TeXcolorgray Fj(].)-150 4032 y
SDict begin H.S end
 -150 4032
a -150 4032 a
SDict begin 12 H.A end
 -150 4032 a -150 4032 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.3.3) cvn /DEST
pdfmark end
 -150 4032 a -67
4131 a Fk(3\))41 b(Criteria:)-150 4163 y
SDict begin H.S end
 -150 4163 a
-150 4163 a
SDict begin 12 H.A end
 -150 4163 a -150 4163 a
SDict begin [/View [/XYZ H.V]/Dest (Item.13) cvn /DEST pdfmark end
 -150 4163 a 0 TeXcolorgray
-94 4248 a Fj(1\))p 0 TeXcolorgray 40 w Fg(High)31 b(T)-6
b(ransmission)32 b(Speed)p Fj(,)d(this)g(is)h(one)e(of)g(the)h(most)f
(critical)h(criteria)g(to)f(be)h(consider)m(,)e(since)i(our)f(hardw)o
(are)f(system)i(requires)16 4347 y(multi-de)n(vices)e(to)i(process)f
(near)g(synchronously)-5 b(,)24 b(a)29 b(f)o(ast)g(communication)d
(speed)i(between)g(hardw)o(are)f(de)n(vices)h(is)h(necessary)-5
b(.)-150 4365 y
SDict begin H.S end
 -150 4365 a -150 4365 a
SDict begin 12 H.A end
 -150 4365 a -150
4365 a
SDict begin [/View [/XYZ H.V]/Dest (Item.14) cvn /DEST pdfmark end
 -150 4365 a 0 TeXcolorgray -94 4447 a Fj(2\))p
0 TeXcolorgray 40 w Fg(T)f(ransmission)26 b(Distance)p
Fj(,)d(this)h(criterion)f(is)h(less)h(important)d(within)h(this)h
(system)g(since)g(we)g(consider)e(all)i(of)f(the)h(hardw)o(are)e(de)n
(vices)16 4547 y(will)35 b(be)f(implemented)f(as)i(a)f(whole)g(de)n
(vice,)f(that)h(means)g(transmission)g(distance)g(of)g(the)g(protocol)f
(type)g(w)o(ont)h(be)h(a)f(necessary)16 4646 y(criterion.)-150
4647 y
SDict begin H.S end
 -150 4647 a -150 4647 a
SDict begin 12 H.A end
 -150 4647 a -150 4647
a
SDict begin [/View [/XYZ H.V]/Dest (Item.15) cvn /DEST pdfmark end
 -150 4647 a 0 TeXcolorgray -94 4746 a Fj(3\))p 0 TeXcolorgray
40 w Fg(Multi-De)o(vices)j(Support)p Fj(,)c(since)h(we)g(may)g(use)g
(more)f(than)g(1)h(IMU)g(to)g(w)o(ork)f(together)f(in)i(order)f(to)h
(gathering)d(more)i(accurate)16 4845 y(data,)28 b(the)h(protocol)d(we)j
(choose)f(to)h(use)f(must)h(support)e(multi-de)n(vices)g
(communication.)-150 4863 y
SDict begin H.S end
 -150 4863 a -150 4863 a
SDict begin 12 H.A end
 -150
4863 a -150 4863 a
SDict begin [/View [/XYZ H.V]/Dest (Item.16) cvn /DEST pdfmark end
 -150 4863 a 0 TeXcolorgray -94 4945
a Fj(4\))p 0 TeXcolorgray 40 w Fg(Number)34 b(of)g(wir)o(e)f(needed)h
(to)g(connect)f(with)h(micr)o(ocontr)o(oller)p Fj(,)28
b(this)k(criterion)e(is)i(less)g(important)e(b)n(ut)h(less)h(number)d
(of)i(wires)16 5045 y(between)26 b(hardw)o(are)g(de)n(vice)g(pro)o
(vides)f(higher)h(portability)g(of)h(the)g(system,)g(and)f(it)i(also)f
(reduces)f(the)i(dif)n(\002culties)e(on)h(the)g(hardw)o(are)16
5144 y(set-up)h(process.)-150 5261 y
SDict begin H.S end
 -150 5261 a -150
5261 a
SDict begin 12 H.A end
 -150 5261 a -150 5261 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.3.4) cvn /DEST
pdfmark end
 -150 5261 a -67 5360 a
Fk(4\))41 b(T)-8 b(able)28 b(of)h(Detailed)f(Comparison:)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 5 6
TeXDict begin 5 5 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-158 -435 a
SDict begin H.S end
 -158 -435 a -158 -435 a
SDict begin H.R end
 -158 -435 a -158
-435 a
SDict begin [/View [/XYZ H.V]/Dest (page.5) cvn /DEST pdfmark end
 -158 -435 a 0 TeXcolorgray 0 TeXcolorgray 4021
-327 a Ff(5)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
49 -147 3803 4 v 49 53 4 200 v 385 -77 a Fg(Pr)o(otocol)447
23 y(T)-6 b(ype)p 1017 53 V 1357 -26 a Fk(I2C/IIC)p 1955
53 V 768 w(SPI)p 2934 53 V 782 w(U)m(ART)p 3848 53 V
49 56 3803 4 v 49 255 4 200 v 176 126 a Fg(T)g(ransmission)32
b(Speed)102 225 y(\(Standard)e(Speed)h(Mode\))p 1017
255 V 1311 176 a Fb(>)p Fj(1)e(Mbit/s)p 1955 255 V 585
w Fa(\030)p Fj(10)f(Mbit/s)p 2934 255 V 362 w(0.3)g(Kbit/s)h
Fa(\030)g Fj(1)f(M)h(bit/s)p 3848 255 V 49 258 3803 4
v 49 557 4 299 v 297 378 a Fg(T)-6 b(ransmission)382
478 y(Distance)p 1017 557 V 1255 328 a Fj(Short)28 b(\(W)m(ithin)1201
428 y(inte)o(grated)f(circuit)1273 527 y(components\))p
1955 557 V 2214 328 a(Short)h(\(W)m(ithin)2160 428 y(inte)o(grated)f
(circuit)2232 527 y(components\))p 2934 557 V 3127 429
a(Long)g(\(wireless\))p 3848 557 V 49 561 3803 4 v 49
760 4 200 v 288 630 a Fg(Multi-De)o(vices)389 730 y(Support)p
1017 760 V 1427 681 a Fj(Y)-8 b(es)p 1955 760 V 838 w(Y)g(es)p
2934 760 V 825 w(Y)g(es)p 3848 760 V 49 763 3803 4 v
49 962 4 200 v 337 833 a Fg(Number)31 b(of)299 933 y(W)o(ir)o(e)f
(Needed)p 1017 962 V 1467 884 a Fj(2)p 1955 962 V 499
w(3)f(+)g(1)f(for)g(each)g(signal)h(line)p 2934 962 V
427 w(none)p 3848 962 V 49 966 3803 4 v 49 1165 4 200
v 343 1086 a Fg(Adv)o(antage)p 1017 1165 V 441 w Fj(Easy)f(to)h
(implement)p 1955 1165 V 235 w(F)o(ast)g(transmission)f(speed)p
2934 1165 V 3050 1036 a(can)g(be)h(implemented)2987 1135
y(in)g(wireless)g(en)m(vironment)p 3848 1165 V 49 1168
3803 4 v 49 1368 4 200 v 375 1289 a Fg(Shortage)p 1017
1368 V 375 w Fj(Slo)n(w)f(transmission)g(speed)p 1955
1368 V 2215 1238 a(More)g(number)2175 1338 y(of)g(wires)h(needed)p
2934 1368 V 3071 1289 a(Hard)f(to)g(implement)p 3848
1368 V 49 1371 3803 4 v -150 1520 a
SDict begin H.S end
 -150 1520 a -150
1520 a
SDict begin 12 H.A end
 -150 1520 a -150 1520 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.3.5) cvn /DEST
pdfmark end
 -150 1520 a -67 1620 a
Fk(5\))41 b(Over)o(all)h(Discussion:)55 b Fj(By)42 b(comparing)e(the)i
(abo)o(v)o(e)e(criteria,)h(we)h(\002rst)h(may)f(eliminate)f(U)m(AR)-5
b(T)42 b(because)f(it)i(has)f(the)g(slo)n(west)-150 1720
y(transmission)36 b(speed)g(within)h(these)f(three)g(types,)h(so)g(its)
g(not)f(e)o(xpected)f(for)h(using)g(in)h(our)f(system.)h(SPI)g(has)g
(signi\002cant)f(f)o(ast)h(speed)-150 1819 y(ho)n(we)n(v)o(er)28
b(since)i(we)g(will)h(use)f(multiple)f(IMUs)i(connecting)c(together)i
(in)h(the)g(system,)g(SPI)g(doesnt)g(pro)o(vide)d(a)k(good)d
(portability)h(that)h(it)-150 1919 y(requires)23 b(1)i(more)e(physical)
g(wire)i(for)f(each)g(additional)f(de)n(vices.)g(Therefore,)f(I2C)i(is)
i(the)e(most)g(preferable)f(option,)g(it)i(has)f(relati)n(v)o(ely)f
(high)-150 2019 y(transmission)28 b(speed,)g(and)g(its)h(easy)g(to)f
(implemented)f(for)h(a)h(complicated)e(system.)-150 2149
y
SDict begin H.S end
 -150 2149 a -150 2149 a
SDict begin 12 H.A end
 -150 2149 a -150 2149 a
SDict begin [/View [/XYZ H.V]/Dest (section.3) cvn /DEST pdfmark end
 -150
2149 a 1631 2230 a Fj(I)t(I)t(I)t(.)45 b(C)t Fe(O)t(N)t(C)t(L)t(U)t(S)t
(I)t(O)t(N)-67 2356 y Fj(T)o(ODO\(D\))p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 6 7
TeXDict begin 6 6 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-158 -435 a
SDict begin H.S end
 -158 -435 a -158 -435 a
SDict begin H.R end
 -158 -435 a -158
-435 a
SDict begin [/View [/XYZ H.V]/Dest (page.6) cvn /DEST pdfmark end
 -158 -435 a 0 TeXcolorgray 0 TeXcolorgray 4021
-327 a Ff(6)p 0 TeXcolorgray 1715 -50 a
SDict begin H.S end
 1715 -50 a 1715
-50 a
SDict begin 12 H.A end
 1715 -50 a 1715 -50 a
SDict begin [/View [/XYZ H.V]/Dest (section*.1) cvn /DEST pdfmark end
 1715 -50 a 2 w Fj(R)t Fe(E)t(F)t(E)t(R)t(E)
t(N)t(C)t(E)t(S)-150 -1 y
SDict begin H.S end
 -150 -1 a -150 -1 a
SDict begin 9 H.A end
 -150 -1
a -150 -1 a
SDict begin [/View [/XYZ H.V]/Dest (cite.arduino) cvn /DEST pdfmark
end
 -150 -1 a 0 TeXcolorgray 74 x Fe([1])p 0
TeXcolorgray 42 w(\223)-5 b(Arduino)25 b(pro)f(mini)g(328)f(-)h
(3.3v/8mhz,)-5 b(\224)25 b(Sparkfun)g(Electronics.)g([Online].)g(A)-5
b(v)n(ailable:)p 0 TeXcolorgray 2173 87 a
SDict begin H.S end
 2173 87 a 0
TeXcolorgray -14 x Fe(https://www)l(.sparkfun.com/products/11)q(114)p
0 TeXcolorgray 3309 28 a
SDict begin H.R end
 3309 28 a 3309 73 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(https://www.sparkfun.com/products/11114)>>/Subtype
/Link H.B /ANN pdfmark end
 3309 73
a 0 TeXcolorgray -150 87 a
SDict begin H.S end
 -150 87 a -150 87 a
SDict begin 9 H.A end
 -150 87
a -150 87 a
SDict begin [/View [/XYZ H.V]/Dest (cite.trinket) cvn /DEST pdfmark
end
 -150 87 a 0 TeXcolorgray 61 x Fe([2])p 0
TeXcolorgray 42 w(\223)g(Adafruit)25 b(pro)f(trink)o(et)i(-)e(3v)f
(12mhz,)-5 b(\224)25 b(Adafruit.)g([Online].)f(A)-5 b(v)n(ailable:)p
0 TeXcolorgray 1753 162 a
SDict begin H.S end
 1753 162 a 0 TeXcolorgray -14
x Fe(https://www)l(.adafruit.com/product/)q(2010)p 0
TeXcolorgray 2804 102 a
SDict begin H.R end
 2804 102 a 2804 148 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(https://www.adafruit.com/product/2010)>>/Subtype
/Link H.B /ANN pdfmark end
 2804 148
a 0 TeXcolorgray -150 162 a
SDict begin H.S end
 -150 162 a -150 162 a
SDict begin 9 H.A end
 -150
162 a -150 162 a
SDict begin [/View [/XYZ H.V]/Dest (cite.MPU9250SDK) cvn /DEST pdfmark
end
 -150 162 a 0 TeXcolorgray 60 x Fe([3])p
0 TeXcolorgray 42 w(\223In)m(v)o(ensesense)139 b(mpu-9250)e(ca-sdk)g
(reference)i(board)f(user)e(guide,)-5 b(\224)138 b(In)m(v)o(enSense)h
(Inc,)d(2012.)g([Online].)i(A)-5 b(v)n(ailable:)p 0 TeXcolorgray
-31 311 a
SDict begin H.S end
 -31 311 a 0 TeXcolorgray -14 x Fe(https://store.in)m(v)o
(ensense.com/d)q(at)q(ashe)q(et)q(s/in)n(v)o(e)q(nsense)q(/MPU-)t(9)q
(250CA-)5 b(SDK.pdf)p 0 TeXcolorgray 1994 252 a
SDict begin H.R end
 1994
252 a 1994 297 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(https://store.invensense.com/datasheets/invensense/MPU-9250CA-SDK.pdf)>>/Subtype
/Link H.B /ANN pdfmark end
 1994 297 a 0 TeXcolorgray -150 311 a
SDict begin H.S end

-150 311 a -150 311 a
SDict begin 9 H.A end
 -150 311 a -150 311 a
SDict begin [/View [/XYZ H.V]/Dest (cite.sensorStick) cvn /DEST pdfmark
end
 -150 311
a 0 TeXcolorgray 61 x Fe([4])p 0 TeXcolorgray 42 w(\223https://www)l
(.sparkfun.com/products/10)q(724,)-5 b(\224)30 b(Sparkfun)25
b(Electronics.)g([Online].)g(A)-5 b(v)n(ailable:)p 0
TeXcolorgray 2363 386 a
SDict begin H.S end
 2363 386 a 0 TeXcolorgray -14
x Fe(SparkFun9De)o(greesofFreedom-)t(SensorStick)p 0
TeXcolorgray 3506 326 a
SDict begin H.R end
 3506 326 a 3506 372 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(SparkFun\0409\040Degrees\040of\040Freedom\040-\040Sensor\040Stick)>>/Subtype
/Link H.B /ANN pdfmark end
 3506 372
a 0 TeXcolorgray -150 386 a
SDict begin H.S end
 -150 386 a -150 386 a
SDict begin 9 H.A end
 -150
386 a -150 386 a
SDict begin [/View [/XYZ H.V]/Dest (cite.mpu9250) cvn /DEST pdfmark
end
 -150 386 a 0 TeXcolorgray 61 x Fe([5])p
0 TeXcolorgray 42 w(\223Sparkfun)25 b(imu)f(break)o(out)i(-)d
(mpu-9250,)-5 b(\224)25 b(Sparkfun)g(Electronics.)g([Online].)g(A)-5
b(v)n(ailable:)p 0 TeXcolorgray 2193 461 a
SDict begin H.S end
 2193 461 a
0 TeXcolorgray -14 x Fe(https://www)l(.sparkfun.com/products/13)q(762)p
0 TeXcolorgray 3329 401 a
SDict begin H.R end
 3329 401 a 3329 447 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(https://www.sparkfun.com/products/13762)>>/Subtype
/Link H.B /ANN pdfmark end
 3329
447 a 0 TeXcolorgray -150 461 a
SDict begin H.S end
 -150 461 a -150 461 a
SDict begin 9 H.A end

-150 461 a -150 461 a
SDict begin [/View [/XYZ H.V]/Dest (cite.9dof) cvn /DEST pdfmark end
 -150 461 a 0 TeXcolorgray 60 x
Fe([6])p 0 TeXcolorgray 42 w(\223Sparkfun)25 b(9dof)f(imu)g(break)o
(out)i(-)d(lsm9ds1,)-5 b(\224)24 b(Sparkfun)h(Electronics.)h([Online].)
e(A)-5 b(v)n(ailable:)p 0 TeXcolorgray 2287 535 a
SDict begin H.S end
 2287
535 a 0 TeXcolorgray -14 x Fe(https://www)l
(.sparkfun.com/products/13284)p 0 TeXcolorgray 3423 476
a
SDict begin H.R end
 3423 476 a 3423 521 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(https://www.sparkfun.com/products/13284)>>/Subtype
/Link H.B /ANN pdfmark end
 3423 521 a 0 TeXcolorgray -150
535 a
SDict begin H.S end
 -150 535 a -150 535 a
SDict begin 9 H.A end
 -150 535 a -150 535 a
SDict begin [/View [/XYZ H.V]/Dest (cite.protocol1) cvn /DEST pdfmark
end
 -150
535 a 0 TeXcolorgray 61 x Fe([7])p 0 TeXcolorgray 42
w(\223Introduction)27 b(to)d(ic)g(and)g(spi)g(protocols.)-5
b(\224)26 b([Online].)f(A)-5 b(v)n(ailable:)p 0 TeXcolorgray
1586 610 a
SDict begin H.S end
 1586 610 a 0 TeXcolorgray -14 x Fe(http://www)l
(.byteparadigm.com/app)q(li)q(ca)q(tio)q(ns/i)q(ntro)q(duc)q(ti)q(on-)t
(t)q(o-)t(i)q(2c-)5 b(and-)g(spi-)g(prot)q(ocol)q(s/)p
0 TeXcolorgray 3783 551 a
SDict begin H.R end
 3783 551 a 3783 596 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(http://www.byteparadigm.com/applications/introduction-to-i2c-and-spi-protocols/)>>/Subtype
/Link H.B /ANN pdfmark end
 3783
596 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop
end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
