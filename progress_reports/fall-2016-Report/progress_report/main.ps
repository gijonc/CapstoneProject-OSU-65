%!PS-Adobe-2.0
%%Creator: dvips(k) 5.996 Copyright 2016 Radical Eye Software
%%Title: main.dvi
%%CreationDate: Mon Mar 20 14:53:19 2017
%%Pages: 5
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: NimbusRomNo9L-Regu NimbusRomNo9L-ReguItal
%%+ NimbusRomNo9L-Medi CMMI8 CMSY8
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -t letter main.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2017.03.20:1453
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 919 2014-05-19 18:42:47Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.24, 2016/04/22
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 919 2014-05-19 18:42:47Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not aload!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def/BorderArrayPatch{[exch{dup
dup type/integertype eq exch type/realtype eq or{BPToDvips}if}forall]}def/HyperBorder
{1 PDFToDvips} def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx
pdf@lly pdf@urx pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly
exch def dup DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx
exch def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: NimbusRomNo9L-Medi
%!PS-AdobeFont-1.0: NimbusRomNo9L-Medi 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Medium) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-Medi def
/PaintType 0 def
/WMode 0 def
/FontBBox {-168 -341 1000 960} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E178732AD0E135F772215
EA7EB7EA7641D31502E1BB9661E7B0E875AEE90400138F2AAF4A8686C73EAA44
E5CAB467770A3D12E9807BAC97B24A8EFB0E276760F4F51EC7123C43BC6F8DCF
9A2F496A9172813FB461FD870763306B45670653A9780FF409B734CFA74C12CD
150B03344295918C4ED893FB620A9499404B83C71152BF2F2DBF769000D116D5
EE264C016EE3E1241018F59544CCE53E5AEC124CF6C59A4D7D7D511ECC9AFD49
6608ADDD237358D7CF8B4D1C5BD1158CDF2D6469D9BD6E6D9762ECF34D1C3C27
5F69900E0D12AF9B21F153585742E999870BEE3DFF6309CD82968EBB40D9C269
CD4306654AAB6734151132DE4194072485FD082FBB6DFCB3FDFF9E1FC88D9483
8AA64B5825293978C70C9EC095B18352BFDC34B4BE9C939384E3281BCC6B1808
A6B61EC4E47BB6AC14B105FFA7ED6AE99A1CA0B360D1A5C24E0FBB55C66F5811
A5CD0625654654651979A8C4C3612054181CD300CD42D1D9CAAA589118D6C7CD
5EA8A9A0C639D5539430D40318F4B739DA281ABF2BE2765D44F45B218BB192E1
9EFBDDF7777E8730FA7DC0651BCD5D68EB743C51D9CED55403021D45F77CAB5E
7E892B3D1F875DA86C030A2387487DBAC8795749E849EC93439C9E22EB20D11D
07DA0F09EE9356D55B8D0D8555F1B0EC98C72863B376D3436E10DE2FB1AB9453
DADA019DCB64F6D059AB3A95B28B94435004C9A8BD3FB80E2B9DE0E330D03622
3AD965B4283E6DC880A2130185CDABC053C52693CE3F50557F524D7CCA9BE05B
FF9597ADF5D1C432C00C0B0D8EC2CA8436685B4BF3E2105B89FA6CC787B77637
248796C2F43872B3BFC8011159C22EDB7149AD8932360A88A223CC638BED257E
04908032ADA750F17279F7331189C322CB5ED9B66E502945BEB1EC68B1C7BCC0
2322EFD669C229B28CE1D0CBC0005FF967D0A4383E29538AFA13D41D484D739E
487D497DEAD8F661847A5D82D77D91219ACF666E565292384728E58E1A489054
8C3E34B413A6A550C499218E7FCF43694CBEAD016119CE85515F5EDAE3CD483B
A0F32743E7A189708AF0CB6FBAB22AC8F23604FFECE038C838472CA40ADEBF08
47AB1D450E07F9D51828D25DDCA679E3FAE54634A37AE1A5A778365C5A2C8A27
64085AC775AC132CCF27CA164C4721F67B63D52E388B17122F15E5DF391674CC
B6C9EDE307D79E390068970FE0AB210337558544E8CA59BD85F4DFDA1A69D18A
95EF6E1C8A6EFEBAF9D3D0CBFD6FA67EA64945440BE6F34771C491C607BFB199
7469D73961C0E8DAEC14FC13ECF37514DBF9C5A991943BDBF66C0ACA84BEDF8B
54AFD478D9695FCAA0E4FA51CC6C3A84D3D5904EBBD089B189203DF7239A2394
F2B5338FB0603488E278EE68F3CE7397B142062BCD6A62AFF936B2ACEF919E57
21FA55672F22685B5305F5E84900C327E20248F7DDEC431EDFEF8F922EFEBD58
EDDA265414D834391381C29CAC17FACD0A2F071460BE0D3DC7F6450E768DDF4A
D39B8E27065A8D236EE9643C209A36CBC8AB1D87C7B3FDEAEBE82AC779558FA9
15EFAB7C582B6CFAF3F8B174B1223D531067BA929EABBE1404DC599682276A0C
03309EBD39951A398883FC919A711E8E891F64657D64B43EAF4ACBAC482D06AF
D458F0DC3F4885030096DEA6AF7AD28E2DD526D66EF00BB3F4970C162A20E2A0
3AFFF9D6B0AF70E1D643784CCA5F0B76FA16D597879F762BF7CE394D18DC76D2
06301A735F3377789FDAFC843F9B3B635BC7871DBCF2B8BE5E7E6290AB1C4B10
165DE8C3E9109949A8FC60CB19EAADBDA8CE8FA7FCCEDE1BD4B8566A268801A7
2428B8193F4A9F02506DAA39886CAC4D93D6E6823E197EEFB4A340040C1C50BA
4952CFE767074B3615FDB279B9BCC0993871E9718A75DFFFC74395B532A58983
B7E3AB32A13A3DC4FAE0E34E485C31FB2952DAD2A611798A9B23C8C0EE5E1CDE
0C9307615D2E9E878FB834D9FAC1883222A1C90CA4E940136520C8AF7DC481A5
C5E4287325A010FC44DCCA752F57806D70EABB20327400158978ABC35805453F
84CC5EEC991A5CDC8C33DADDDB5F3E6A05FB23C6ADF68AA8E7C5D414CD00C38F
DE62D80BCEF133DD294C29F6733342DE8A3045682DCE853E4EBE3E7A12A2FEEA
AD456278453BF6398EFF405D523BD8065E247D2E67C4A1234AA8AF98A8627F7F
AA141AF83BA5FDF29A91974E96B000709F3B59A1BA4327C8709EECEDE568036C
DB87B6651FE6D0F4F85BD7DBF26439B8933B54AC4C093499061E64669B41759D
F26FC0366B285A40567C1C3DDC8EE3B058D81A0DD4C1056EF47FDD8A06EA4A97
5FB62CF59CCAFEF4BB4AB1265FB86CF3966E8BB923D32BBE01A9D28D26CBB539
DE18871F91EDD0412DB052CA15266F970EC234868C04AF987358EE0D27AA7FD0
E5E35824C7D7863738C2AE79C875B5C7A1E18E695E984ECEA0E37C428FD741DB
E14E0C10896BEDBF25262B1C95F281E6C448D9A1FC92A5039BED5F5C9B9770AB
F579FC911085FF2247D8C7EBBE4E95D9CF6F8D4D204CC6D61EDA882A6094E407
A823BEB4FDBC9149EF33A77FFBB71286FF5DF5F69DCD8FB92B332FB6509FC3FA
395199F80AE4BD687C783B27501C603CD989F14A2A0A5680752BE8757F0C4935
22A4B260C55A31AA1939D02873061EC2A949B71B69F6AEBEE72A3DA240341298
7F9D1EA8218936D444BDCCB32D592B00EA16242C2CC6BFC9FE657D9270933D8B
167D2575CF146336BB1C76735D591BBFD9589D9FB42768AF8CAFD1490D4A0B81
934AFD497D46D286CEEFBB71E57F70E9EDD479DE21D36AD751E04215CA250B7C
6831F55435E628A295E895BD0905AFE3DC207C637F63A1F68C6D5A2C2369388C
D6A48AF4965A35699E84DAD2BB26222664A366C18C851E85F85AE177F1CA2958
718576759631D8A0E1DB083B670C05C8A82F2CA3502F6BD5B5E99175BBC27E47
18338714CA0EFE6FA7E1EE63D218B92FD4C8C69FC4BE409F8206F24A189E57A0
B5C178B7326860AF2A334065B455438EC740DD5C8BFE5E63D6AD78F695DC2ACB
0757DD30639113DA11A98FB90364F008A13B1113E8CD0A10327E472F8E76C5D0
D56552050C909E9254447DA3809637444D659BE32998D5641A652F234492DFDA
77EA5A0E8DC4A1C038E4244F3FB5FDD5158FAFBBCF942BFEF53F3A5377629CAD
8E550FC1B772D207080106703352126F9CA112B651D5564C55702B774FA4E01F
428BDE2320F7D4018343CC676DF1F5EF6D8677E695A0C12F9D484E1F6BEB2DD9
0150B4B3B56A541927D8ED78A2DA7F7B53E64D40555EC91C086DFE1F7A6BDC0C
352687EFF172A06E6076C70373085261C4B46D941F6ED47D9E41DFED626EBB60
B2D4408878E72A7A88ADD65604CAA2F57684149362E8EDF3786CB9D46A4709DC
BF26F87B935FB8DE2DF9B4B61527FA59E1BBE1EACC0C9AED93981D0AF9F72048
D3A4555FA2DF269B33D55F832716406511E9499F2BD44C818F565E22E3355F7F
73228D571C3EB1A05036060E4E7DA91F29A4CA724B98FB0E1561ABE8528CD37D
441E21BE072A7F25110B5DB8C1FE8925CA583928714F3FA3A32D39E171D68F26
0E0D5A20B8A2970D3CC6E21AB81DFA802C939D6F339749C6D974A97D5AEABA36
DB037A4FFA43C077702E0A423E32745C7D7FA5F9C267E010E0AAA9130CED75DA
3FB92AE5DB9DC22EDC951FC1034699707969D7B25E88B0BE262D48CB32698EA6
BC36C7DF3E90071E04095E9E9874ECA132CB2F44B3EDFF7A41D884DA871FA982
EDFE1FC49893B1B5ED6B4936328381D0ECF994B856E2FBEBD7157FA0067FC086
ABEBA0A961C7ED1AD60810960A7FD74122CE3FD31875D2C877ED5AFAC1C4BBAE
B821FCF47ED1D902DF005570FA47070FC79D82BCBA2716124F6D3AC184BDB890
A0DD4D7C62B15DC03BE27646825F500B2E3F12AB4EED2A969E6BC5E6D180B32A
20F2DC4906B1A90BE3D9BA408308E915C882CF4240EDE7B4C340B19EE3FBD787
4D2ED8118E885757270E9F21A5B2BBE06FE31308CC5ABE30E636993938DA02AE
05A2461E84023F90BC39C213D8B8DD7CBE4B58098E27CF48E3076B50F0DFF5BF
CEEC65CAF4178A587CFD3B86BFAC856056CDD59B16B165E609F4C10B5617A38D
8E6EA08629ED72A1675031B60AC5930B4562756DEDB1C48ABA276A4E5008F1D4
D2C9D54B1BCD10DD7958F06FC41A77CB00D5EC3AA812E09406550B3375783395
3343D5DB7E5CF8C28D676727C1AEB519DEAD1FCFCB2CADB6C7967D53FB4FBAEB
6078B410935DF7D6D50642718993116F2643914BF569EA1F9CA8277788FADE52
905B69130873188AF63CA5B2E96A88F4F9A2F5A5D4E544B79D29C14DD642C3C9
7AC15E4864F7A7979AA05D39528403DF00FCF17756073A09ABFA792C31C37AC9
C62DC190EE32CB9A03FC5A2F903912994219E6223753B16A7E6070BF2E49EDA9
528B7D8F8724EADAB1EA2DE9F26111B6137F0B66805822CB168D2D17D9940D9B
41892DC72D9DFD02E569626641AFD69ED4E56A98F1E92AC4A52AF28FA4A89916
C5EA9DDAA9C8D92DD5078952EBDFC8B36B5100C784C00348FFA9A3F5DA590144
8B039F7E0E50CB97CB35B1319CB533D036B514E7BE15A7FA6A86C9BA6640BBF8
AE8E79C861A26659226AB82BEC3D5C6C008D200C83DE5957E84DECD244842FE6
ED1E8528BE34EA54BCB2C0B1B7E70389F6A968F4D0559681B170A8CD7CD52E46
C38356B33B82F42C8755D6A382C503BC922F801A351EB5416257EFAA94828D33
B9AE4F0420584DF3784B331AE2406FD1FB4F0A31AF848A63F7B01FB14ADBDB58
6E7BF9F055D3B82B3282EE7226E352578FDD0EB941F9D45158DDFA29D1706F04
7545A262D3FC884E32841E6BE12817A12E65BA65C7CE64C8928FAAB6BE261511
01B7807B2F2EE631BD20B0621DDA33A13BD08D044EF5A480986B502216EE842B
1A43B8D778C3E6CE58D9397DB971E9ED9BE5B69F45D72BA6AD8E7F3C78D26C89
F1DB2EAFA79EBAB6113E05AE3A09AE97C63F4B86A143828E66644DC0B9108FB2
CBE024C3AF660DAAC64156BCB30481EB8D0920E6F0DFE81E41F14D1682A113D8
BA1482D9DDFDE71208A5D2A1872141DE6FF4845014B6379A7F72F1879084A166
04B0285C7AC913CEC83CF9F300831FD25A9A7CC28F290F034784C81D9FA6ED8A
CCFF15B6ADA1CD046DDE698C9484AFF6873BEED3F9698D71B91903E04F157DE2
9873F9600A094DC3C4B0CB7DE48870D04E71915B2F83EDA7E5D330B263978922
8AB8DC8B253A1FABBD279490402EBA1C517C4D39F288709F39BF44753CD87D51
EECA6EA4ACCCEAFD45E534FECF04734C1CACED0FE552378DDBD1FAB6CD1B5701
E8B057ABC2EDAAAA70F94D21730DBAD665ABBA39200D5D725D21F5310721ED52
A701DE95C2CC589605DA5EA0FFB0D335C4C4D6082BB3E7786B4B4172EEACC8BD
027689D68970DF93F115F153E09DC5C711D3E0E36CDB801AD8F5522E8C2551C9
191BDE8E092050DE7F287C29FD4B0BF5741B7B055F44BF8DEDDFF05D4C296513
35528CA07DACD36EB2C52BA18EF5314AF3A6F2B1D4F8CA8F7D88F725E47D9FB2
FA7A1BF586CA1CBE26852D5D82FB9CD3082423D46EB801F82608A3A6AB025FFD
B4DB1B03C3AC8D5EA7F8E6D40B1B4C7AB334BC4096B0FF0AA4C418F45F2D2083
E710BD768766A43D4E522D4DC37C4C5B10F08018F1A4436240E5C1258FEDB75D
D7FF5CAD2FFC7762F62B113F44FB1061EA67AFC32D43724F3B5B1E9A68DA6011
6F78BEB037A053930D143BC21A01C5DD3CF18DAE9A3EE3EA567D90BB28F2A858
EE03A19793BE35A6E8F64DEAC966F51581C9885CA0197BAAB8C78E9ECFDDDE7F
42128EAE3004F468947EC697A434CDF2A2ACCAE877C3B56CB5A29F919EDF2C7A
FBF7CD6DCFAE2165378F8EC28D4973BDCAC2F72B2A90B5869BD39AC3F00B1265
E2202385EEC138A22AA5523B6935740EF6D71883A4F8BD2A0A77255A53F85DCD
29F772126AA74B235A94524EAB89E3F9C24230158C20CA1FA1685193C18A135C
2F3C5DBFD2FD132765E03221C5CB12015BB786699ECCC7A6B5E144E637A01DD0
8AB2B09B2B8FF7C4541E2ACF4299819728FEEC05248E9B0C2415CBB4E191E98F
B776EBEAEE6910535B7FF50EE2F085B06BFE3A1335CEFB9BD288CFB3C08D3A78
235AD9A88DF81589EDFEE780E040423DDCAE1FBF24B1E1BE06EE28EFE34572F8
E22E12BB071E6B463727A8AE10C1DB6D7F5503A125B352FBF456C1785BA905B6
CFDAE922E049B919C4FCFE25839736412953A45982E78CCADCFD0960C178A9A5
D8193F43FF146ACCD7BEC9B496DA78B367E219C06DAA3A5422D8A1A97F7FBF66
B7975CFC7A3ED860765CC29F3A8130BA80F639F307E937714944E5488E76F730
9F11050C9F7649A8A413005988FF88C540976600A90CEEC6719106562BD52BA8
A70F3B2A82A298338CE0C235EDB1DCC2D863A01941779D0624DFAB252E4B92D1
3EA35F782175EBC42E58DA345C2D80F38B3CB0110D22E5855F423EAF985C3DD8
1B358FFBDBD54E792F9960046D65130154908A158B97301DBD5A5F829F2F48A8
954D687BDFF3AFAD372AF2A66602621698CF42E4CB3E040FCEF1567B8603C0E7
6C9F584ED1FE21551864D67CE25BDA13A886793946846FF00F6F49CFBC4BFFC9
F8CB4EBD1AE778FD73CE26D93AEEDDC6B542E0BF79169E08E5B171D74EF315B1
309E8B927D4996548BA30F5F08CD2CBAE2777DD995E48B0F570D2E05C2CC222A
0F0798025960548859D7D4FA3CAC9D18F2B4E2F546F639121EC4CED70598105B
6DC540B6BB4742E0A0C1AA00C6C757576EA0E4C8F0F14614231A275833161841
C494C795ECF17CAA969792C8628B6809C79D5B5DEE935F4D41EA7F65D44137C8
241CE56BE6247B3AD783660A524B6D481FF9A3F564B05F459877E45AB50CDF50
B9074B3B2C784EC9AADC091462CD66902AB01AD0DF82395758B38807927FC1D4
9A798D08575AE4B27FD6347C27783D5D8DC949608F7C1E91033937FC7B1E7686
F2219AFA2FED76B9ECCD868DFDB636DB484CCA8405E7AEB2946031C1C11CBF34
9CF0235FE9F99A5A0850880BDCEF6B85907654516026965CAAAC2E348225B132
923536AB81B2E45EF452036848594792466EBE8A8D6F57161A80CE906081658E
C6161E3C0F52DAA52D7281325A1743776C81199F36CFDDC9D235B716F34BB00B
322405F1A2DE00B10B4805270A55B4161CD94242DA9867D2DA7E58CBBCBBE344
8E35EE02E529ACB133842D3315CAFF6333D4F285876A4040CD614F18E9FCFB8A
E66DF8CBB6E313016221F15B5BAF87937E355903FE426F3DBE9F344523544C00
B58BDF6C674F5C119DD47A3437A02EF5A688432D74F7AD2534389A4210141992
49CC04DC89C66372BCB0A32397A74B363D11EC783A3DE49968C7249BF255AFDA
2F7A06865546743FC4E9F7529B8EA55A038827125A4DF80041603CE71AD9F2AC
7E8DB53B169D9EA54A45C32F7FA5DD56519A5BA8150EF544EB849CABF2AF7201
1372C62EE452C200DC121C4F3A8E4491251E9099681260F6391F6399A6276A6A
8ACB62DD34E1A30C3F229A8F8FA9E7F90D27E38D57A93C39B99C599D74E9F50A
AA7B2EEC58050208F3355842AC9B6945671682863810C4796DF9A445057B098C
63CA0BA0229BFE968A807B1482357F14A0EBB734F77132B21EF635C01FE04D0D
76F87BBF3E405C347C326A0C634658F1BCA8CFEC5B4B1BAEEC11C8E1544DA73D
8C82DBD751C1D3F035DAE8349FA73F9E792CB7C220C931CB9AB1D8188137CBF8
B8E42F056B38C1607A82E6C542B9C4245119CAFF1A19891811199E6009FAE5C5
C34BB7DC4DEFE02A0FD38BA75C518621E089C33132B6B18BFB96791FBEB04053
81709D31819B4E01EDCB3141AA116DB2CDFFCE65C77AA3F706AF495AEF46B6BB
5970F492E35BA22930123B4E9A30E50B84180EF710E0D0FFAAC09C5B8A202C48
BD7EA3E4A864AC9AFAB42CCA8C633AFACDF6EF4E8A012FA9D9D74891C295A16E
0BB608160740F68F4364E12D55C4EF5739C8802410070E13616B92B7645170A6
A6B6C1A85D0058926158D711DFF21E2D20E13788E5C6CFE951C45FC49196DD8C
31CD969CC1D133AC282085CAB4EEFFC5F9433FD42EB694877E23465C4C75D7B9
426F419AC13BC5BA83E813D1A2E4C5246D1709DDECF28AD248A6453D494C61C9
59A39542360C637A4B12B58E226A9D6CA5FBFB602DD8AFC55BF3C27566E32BAC
10F1146969880A8606B031E489ECB117D3EFD9C69112B42C481047A7CB5DBF41
84C6DE9EEDFA27A991EDB641C94E9B20E26772B20C97342502E8F9041C28DF2B
60613F4098AD45DD6977F344EE74D46F5DB3CC5607D1CA41867271D403C1F07E
8507226C7323EB8C357956CC1F236AFCA33D71A9717F207ADAB8965EF56B6D69
01564423F1F8A3AB5AEC5A549EA5707353F50B147855360E3E2A83100A7477F0
591A23CFC73EFC3F8B2EFEC16C82C0B9D6E14B783F52EA26FA0DF6B10DDEBBFB
0FDECF38D66A52996628C4802BF563F5A8A85F9EF6C96C35F8BA56063B763214
81FB968EA6984E20B4CE7972A5177FFF35F91016086B6A91C3AAB51E18BA378C
05AD5BF209E4BC816968361F5838AF23F62F9D961824EC0D50E7F3BC91F69C38
CC6212DA06A3A0C730A82EF6ED9D300841AF0F3A67E1E6093BE6DCB400BDF8C5
B29D9C242F7CC5313CF0CD29AC91D2538DDA8F10DF169206D366A85F4E56019D
D02DDCF35F01AFA7CF78C953A0B826E470E81BAD81E240EDF8E48D0394C15A0A
05980EC1F47450E1ECBB1BEE4DE2DFEB6814124F13EEAB65282084E25B890F6B
3B38B505487C44553E48F759D571D192F545B0D7D4C4DC2FFF77917AEDEB4E74
BAC671634AFBEA3812AFFCF1D70B37061DFAC19ECAF594590771BE8DFE44B4E7
76B2DAE8C80280492BB94485D8B6502C2D4182A4F8CD712EC46352ED1B976706
A6AE560AD6A82C3B0AF5358C40A487ED95860B98050A8C53A75BB461D32E3727
61DA5312AE94EF917D9DB15696E17035899FDB03EE00BFB8BF3EF2C1C6DB56FD
EF4190263A01AE737ACE28007C04EC5A0C83CB1E8577E6A96552ED07652914BF
0512851E737ABB84A750A16A4999D5A59AEB5FAE6FA51CC097E2E645BA14B9F9
940CD11420FBC9E43CAFD6838E1A97CDBFC25ECADA33E3F6D66E6A404512EA06
5022CD8AF6EDC861C8B6559F06F3AFBDD9A0F6C3E33B3F38C1D7FD1D079A1068
F257FB2784CC8F66632695B5C8D550CE538FBD1D9A4A207B4E0B90F571ABF9B7
61FAEBAED987E0B9F5FDC218C305A5CF3A81942435388ADD4BDCA506CF4BBE15
8B0D0451FA5C0CF7923FB361A0DA665C79267C9627782F78B8FAB5D185231DA4
EB5C903ADD9D9AEC2D26C1AD32A3C0A2D4568373CE0AF9AA724C0E6CA1AA9B8B
40BEF136E0A6224D8CA16AD3B4194DCBD2FB66C44CCFE98859CB869D38560077
3A0ACAE6D25FAA0A36D430519C2A613CA16377C72DE1210BFE3CE7DEE4C16D48
C9152A95B648179A07DB6D77D6124D75B84C9804AC607A6777F03F6DC5BC8669
ACA5771BDD5AB3A19482D69422D24EB4A4ACCBAB524C88D6AC9CBD937D09C5B7
16237FF745E42FF727CCC6C229A606FAD9B8CD1DF6F9D3B75C76F5F25E671793
C91112C266328D8A85976B5C34C57CB8F2B0FF242A5960CAD59B4B3B349146BE
16B93600F1254FBAE5E72FE42A6BC4B0B91385CDC9BD557E8A0BD7A9A7D9B68D
F828DF4854AA899ECE4676D80F8AAA5305D162D03F2264537AD884A464DA4611
C6F4D6F7526D769E12657A1451730290DF568B818F514EA832662C580500C057
5C9D930506862DAB8EFE4893B9AF7EC84F69B0C95D4FB1273A71B45669B6CAB6
1314565222A1493030E61D657AE9B5F34CAEC9C3FAB63FC92DE5F6CB1564D401
F6ED1FB32DB335B40AB2D6B9B93802D72D75FDCBE539FA6D2412BFB5783DB3C0
F6D60E34BE594B65D769B45B407017680F9176A05F32B3D06B2B38A65162E8C7
B4BC136F03A939C354A7F642B42E7660209330540C8CC2AB3C941236E31F14BC
8FA24C4A403E4DE1B300D54C7DC47ADFC0CA3B26990A2F6A7E03F578E98D48D0
4F98492972696B4001FF1DDCD50F12BC3ECC6EAB2E9977D173A982FBE4A28EAF
A97A58726640D9B69A54F4F4B2D472C73CEDF12EAF97B6B13CC083646532DE37
D9B183F56F96B3C8942B2DD4A791929E4093CA091BCEF51FEC9B3651AB6C6808
82DE456499FDD201CCD6728759EA8FB7550E087ADA9F3D899B52E118AA937B32
3BD01D6E7E91E678BD07FCDC62E8D8D85308191FFB83BF0BB42DB009391623A0
5597E05970CDAD35AAC768C031451BB972B559AC504549828D742EBD41DEE17C
EE47C2CEFFB6E5CF048C1B8C924F25E0F750EC500D2F16DEAC684DD4800E8383
8F4E28381DC70543DAF420D805650371ADF95E3A1C54D528356AEF78FAE0D375
D787BDA6843347238EB32AC46489E77DBD48D18B09A5D30B796337EE2F22BF1B
F346363A151B08916EE1E6455C96A21ED7212D5FB843931C8BA70A4F2CFCF9E0
2CC998EAC31C048628CFB416C87CA11308CB4449A4F22728909D97331E8BE668
9C284CDEF82D163F83EE0D1FF86C2ED8BCBFA7E3B4A3F7E8F1B272249139DB7E
4D3DEEEA0FA488318FA248D62434CFA04A40B245143580328C5793A39F5E24E9
3B3272EEBA6CEC883AEDF94DF6A175B8C42F191EED4F8253E72EA2374562A201
AC23DA74641EA559FB58225FDF0D02796CB2D179E48DFD1AC50882411E25EB63
5BFB6D5C8C666DA6F43569ED315ADBB847B63B4133CF7C10884741E7C6842F37
CFD0C460A331755ACBE6E6BC8C9C961779DAFB600AE6560C815871C78DAAED58
E748F2487571E478ED2C2E45E07EFD3549116843BF5DDD2CACDB4317A096B045
3B94ED190E7331C07F844166AD33759FB772AC6E5D2BBB25DD8DF8B9FBA485BD
5135188BF209C824FF1FC13F18F7B7853F3D33E67D263CCFF826B37B1B66924D
816FB40622EC59E39C0216B6A73FC2189A2BF379871F382842D99CED5BDE4138
B3E7FF48EF85CC9651B29E8269A2D2ADE63696DC95DEA3B7FE4D2641E9290ABD
D807C18C48F16D152A4BC2D422664C412CCB8F447A5350DDB5A3F5C3BACE27B6
6F51426CFBBE32E9C8DC4B3B123675A3D1B3C28FB6A7EDB2CA8350DE480012A0
E8F89D5F3A79CC5F7ED4B32966055CE28A4983E9F8B539DE9FBB016E187D3FDC
37BACFFCC54FA975CD92A36C2364AB0A1D4E30362169BAD921940DB093F5F2D0
B295FDE86EDFCDD60EFD47777B91CB954452A317C6C16037556AEB63AB07FCDD
F67CE730C6DED6AA25085B89F2020250D1099A9FEF3F783484865CC5A5111C6E
F00A8A55B6CB8050521808C447E9489CA9964DE3DC92756D092ABA1A73804855
86F86B6D719E250FEC0DC079AE2F24CF37FB61F81DC927664CF2FDFDD1B4174B
45FF540E31106ABB36246FCBBC8DAA9A2B9A6078625AF92442A0323EC2D62299
1DFD7809F7410C96A10BEBB68C15533F5AA4B0C900320FD6F297DCD3779B4832
757FC4FB532E05786FE0F45E0A54A5ACF8DF469BDBCE80D69D86D750922D77D6
324FCE9C348A92A33C64313154789A5DDA6BD072561D25680534DC7BB6B0CD82
1713C76DE3B52DE7DCF034925381B04B5EFC7F233D540FFAE87D56CEAC02BFFD
8C3FD7ACA7073656DD40C4DF8D976A95CB2478B27A110234FBA41F6C5F3CAAFD
69763BD39F853C32A962DCF0CEEC7F653BEA9DDCFAC50D538BFC348993E05ECF
5EFBEA5C5235C7BAB971934F0597C651222DE96D5511A4F3DC3E37EEBE7E205C
1CCD03517BCBA330086334112B6A34391CB327531ABFABC227139141E10AA72B
B5B6E16D4DC3BF374CB9480D77A9BF3D62B19806B6367E75798F31D27766BFB6
8D2DA265762682DF0B0D5C02DE8548A6BEF06C31F36F05B91CF223185AF75E9B
01DB52997CCF3A2183E74AB1D7DE300DC67F01F7F7EE25701A7070CB15C92194
E2435FF73BDEC06436DA895554BF6B9F0EB6A27A6911D2BD3EF2E2475062A609
6354A495972B76083F55A31565F0B7906C45F387E0FA67082E47ECBFD9C44E60
CBE9C5AEB395AF671100A086B279FA42A39229AA4FBAFB4FCDFF67D43F067C41
84CA5445D5B45BB780D86812B3FC1D8A71EBB6EFF1EE586F71D17A60ED004742
77AD9424C2D2E643E57BDCBAB254E756241C9ED69A76B562CB231C496653C8CF
91233415CC2B8CB6C9606C27529BFF910AA959016B813042DBE3C2FA59561AF8
AF6E79C5501763FBBF789693DC8A20A781B98FA762EF82348176BAD67C6FAD66
DE8F089CB7E3822CB5EA8E37E7FC4F221A033D02C2F00DB104133CC8F2D60073
BF30F82FE433C92DCE8A264634DB12C1A78E9C25BF304BB04ADB959F29378D5E
0CE9DFB692C0371FEF041D2912045EDF22C12D9BC0CE1CC297000F868F1C1607
7795ED7C4548AF1919E4F89E406CC8BEA6BA277694B40540A4E531CC0D39101B
D4980EBD67B754AA673E617D4A84A375D899E5F8FA2784C184EA26DE9FC33BF6
4D50442F839A2C9AECCB2D6B5CC3ED9A2FA7CAE9AC0299A3DB0979E566D587C3
4E73BE1FFEF1C8752B7319F2C2EC07222F0780251E94CBEBCEBBDB30531DE7CA
F16964280938D3C60226CD416927955A02CD8EF2A222937979699B77DA419229
7E7D580D086D2F333C4A82C31BB3D058E545D6705D19F507C9A6C00A2F905D12
DA4BA530747B5D530AFDE98F1E5F353A07252C46D3B9F4E5489E5EE024FF6A5F
3C898DB8B10D79D585AAF88713A0B2A5A6D96F9F222154AC41CBE970244D66E0
736ED508F8CC6013335222681951756903D5B6BC26665DD627B2E9C6A91C23BD
089A6C9DEED5525479F345BF63DC331AE3EE42F1AEE0CB4A791FF0764F5599AB
1F703109F520F2B62F28A5D3AEACF5AF8A26D8DF342EEA442158011012D1D7D1
3C37E602C22F1E2FF5AB484AC5F1541316CB324324CA097499E277E7706B19E5
69709135E8E50AC8D20F034515589751BE193A19BD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY8
%!PS-AdobeFont-1.0: CMSY8 003.002
%%Title: CMSY8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY8 known{/CMSY8 findfont dup/UniqueID known{dup
/UniqueID get 5096649 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY8 def
/FontBBox {-30 -955 1185 779 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY8.) readonly def
/FullName (CMSY8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 102 /braceleft put
dup 103 /braceright put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D80B73E7B6CB7548
0E1D77FFC695988391DC44AEED8CC947B3D7E198B9620E2238DB3A2819182F03
14498B8CDFBA48926DA721920B221FB33BC21A8456AF10891403501D0F6415F0
7E041AFFE109F640E54FC1A365674711EFF94E752652A4C8DA62CDB1149DB899
2C4A4BD77A06E81E93C5698C05DD02F74A0756082738BDB53003B483752AE498
DD718AEA8F3FB5A6B7E2D2AE8F309065F3D556F9A34AB90C88833A54295E0982
209C466A301BA3372AABEE20D862C6DC6B6FAC1463C8CBA8AD766ED1B4C9D712
2BECB4E6ABF558D8AB5281C35726BB8D046982C0DDAE17BFFC9394125E4E84C0
B283977D31460B8EED4346CCB09F64DA0ACB640C6DBF32F2DC30D54668C1CC12
24C7280593088E9958C047125C323E9C842801346A9CE5F50413D69F6DE99471
65D2E387765E92EA4C43F17B467DF6E266D92551009C0E52E7219AE9F5E2E8D2
88852086FF3600BFB50AF3EAF8C009D8D5F084B510F792385F328F7EFA8C38AD
CDAB2EEDFBC6AA45F6DD7364C2F02DD2BE6C79C8361E83D4267CEC2407689864
B57B5D967FC80AB3BE8CA43955FB0FD3081D438437559AD24A7ADD484C1E4A77
B00BDCB0D1B121FEE983412E1EA5489BDCE5DCB4A7310135956B230C0DE7BBED
516369A92BC41FAC8D73490984942D930DC193BF0C774C1AEF627B969EE4B001
11381AC57815D7581E2372A1DB740B09F4A7FB4318B765DA4E7B44E8805CEF85
44EC3B10613FE7B397BF91B69A5CB2E9086D1E7A1FAE0A9ABF2A237A2D29ABFF
E392A18AEACBF28274E775D3FBAED4F46B982B9DA4602E24094EDCCBC9D6FC0F
67C60376879245606C0B9C9A678E8917516BE1CF097B1C75C9F0DDAD6899F08F
81FB7A198D45FE060CD2A550D9B8D58B882B969D7BC3EC018A1FE92BDB262835
26516FF97AC387EA525FF987E5EB1EAAE4EA5866C9CC043D183763C530F7D7A1
2070E4044507C4E5611FCC117FBE4396E0B24F672CD53D5FDFA56D561FB86D40
90A52A7C7F29A119DFFB694A8C445367746A49CA5FA83163BE448EB19625DF26
609A8C8672631A10411036CAA3D6C2F822A4B2505DCBE8E1CE6916AE515E78CE
E8C894B134BF811671D17C19248853131DFFAEDB24B15FF17EAC194662460642
48D23515AD434C68DF56753806FE96DB3A29F9D4980E0B6EAED7383F9FAD2584
8F85679D6D1933677ADF5D31FE6E43DABF137E834A1DEA632D36EA5728625159
8F33348893C9D1C510501628E4A9A80587DF6E179FAF68B158406A3EBCD726E2
AC17F2DF8B3607072824D2E5A6479F7BADE32E603E54E7A83BB2DFDEDB0D80CD
1F1BDD4F6C9025CC3A8A3685DF10A8183FA80CE0F0FE2BFF2500F76B1037AE41
56D2D7FB468C3CA7549E3599A2AACF66302572F1B35BC8EF7C23F6FC4B720228
1D673D903111CE378AAE83480B4DEB7EA84BB35F4F7BE997DD4FFF5A9B5E7650
3C7365BA0965B242DC369D03215651184024A08EC284F1798B0726152884B4D8
46411B3BC8F5CB53A70AD53BD7B1AF23528849B56CF2F75609FE715878CF6448
38579380688B47AE3D374B0DB6ECA5B8284414090123D47F3F9DF389E023F431
6B4C0DDEE4190DEEF4CA772742012754DA9A44A8F550FADA6D8FB0C512D5BA2C
BB7DF71B1DA41FB6936BA71B710CC6A80751E43436F0F5888F51AB370DD4A088
40F402661E08732C960705C7E0D29B8DA1A8A3E119409E51EE575E9655F47568
023977917C8EC610BEBDB9C1F4EBC192084D63EAA00EC87B53E86620BB5AE51A
579B0F8E1972CE1DA02832FC75184F45409DD9D413402C2FA27BCB0AE6DB4CE1
5AFB114E23232DE07C4674969A1FC94D152C6D3A611F029ACF4D949A2C0755D0
31C7DACDBB4DFCFAF7E87295CCF5D4AE28D87ABC3533D87EEF1507B9FF9063F7
F007DF03734A20BC3A198B049000C92D2849C62DDAA719FC28EB372793E20128
D786670E08948808BA45C4F6AA0DD8A8357CCC47228A760C5C7864853BD9C9A4
285E446CB72C5C9D3F03FAB000810DC5674061FA116153040743E846506CFA67
FA8770E785D7DBC7293F37389A0859CC22275B23C44B57B92A033A7BD194340A
D6BAC6E103402F8396A5394C617CB2A27D9500921D5DA06115EC81715EA8E360
4A95DCE8689CBE268B8E6C8B806CFB0ECBF634250243C9E1AFFACAD65311FA4C
1DB0988203537E5EF12B86FB454D06CF05E4F4FC4143D62920E99304245B6ABC
82E21192BE94F5E980DB21E07FEDF0EB0CAF4ABDFC20EF08A2A44A7940E2862E
08FABA516152DBA899D6CA561EB08C7C8298DD511084E5230CEBF28AB1D84C85
B5BAF4616C28FE05AFA4BABB3BA03F8CEEF3F3EB0D3034BD3D8D06629B8E9EBD
72484057E71C9EB4DFC7C2CE7749271AC926C2419D618FB0B60FD6F81F0F2C04
E529CC74DCC9E4AF32D935D7CA65FBD0842A7BAF162D08F782E65DF3AD9EFE69
198AFA9208B22BC21BC4ECABB9BFFBA84C8421B74748E1EAAACEB59E566838F2
C439579D6C75074F94493F7D5C8942D881AAE6302C37A61003AF77684EE99AD7
EB5EEEF050C52E75E4E842F8174470FA60CB213BB6F257EEB26CC55D1202931B
B981DE2535A87CF37BFF912220C117EE166CCAE58BBF624170FFBC0716726B36
304D698F2CA131675F7B1199E6581B8C812C4FAF75814282477BE2B7EBCBA7C2
FA6356B2876F89698C6C2493989E9EB252DE03BB374622A7C88B8EE9FEB4851E
02F85CF70CDCA7BED5EC94E81170FB557C3BFC6F32CD70B506E56A2CC5451592
130C6F570C679577C44D60A811DCEFB3535D855259B1021AC168DB76DD38B459
F1813E3DB20AD9275D58880CE94058490ABBBB0D8DD16D4A65F680B30057F15D
07FF54D779CC978E90A850A2D8D79961EE276BB26B594C16F56557435671A3D8
ADD3DD0BC4BC73B0652B9DA8462FE614A14A11ADB2214EC4910823FB4CEC8938
24354C5C62547EE5710FB5ECD93AA45DEA7411F6CA8D5B5FA222685E622AD73C
1BD5DFD1C8F253352D6C7D14FF2FACF07CA5EB11392C6A33E9CABFD99F743BED
55E8DEF49E07B9444171D1780C698E5B65B540F41F845AC188DC7C0C8B5BA5F3
546BEAAA4F29F0DF30D5AC12A60862742623100074457BF2D820DCAAB340C1DF
22FF26992DC02F276B40A7C528C84B72CD189A4088C90070486C49A1014FDDA3
5093FC12DAF309FBC063653E6A33E14EB51B081126AB5BCB8016E975060B796D
6CBFDFE6CB9E191F12E309254BDD6660E3227012F5DADE246B02B6D8127F1EE2
248F48DC5ABBD229748444420C868450602120664984FE3A8B2373232CE5CA15
E67172CAF7EA99F73A66AE33B1EDE5E8351DB02497CE3338930147873D4E46B5
E918F5592A21789FA9F46232BE693DFC33240E2649D6AC1940B101D806089436
F0CE230BF6D0363510378822891DBD3EEF3365430E74FB6C994BB40C8EEDA593
CEDAFEBC3B87C7C04F52FBD7D557A77B44855CDBEC8A8D26F44D66446B5662AD
15B6B79D13BD262D79BF51C09F8F690A61C7F11EC2E05F6BEDA273648E9E1EBC
3D5F1D6ED486797F753064ADDA8494405556D43D395B1487EDE877CCC1EAE954
1AEE2513DDA94897B733609E8179DFE1975590568202EF20D58A89B34874CC3A
A5579473AC65E0EE61545AEF578ADE10BE3FB3E2CDC96678F613E4DEF7BC1B38
8A551C93438A0540E292F65F1FA73D9AB30A5F545284085E4930A570C1807995
7108AA8194607304488616DD4AB189F8EDC5F4507AEFD7847817A8ECFFDD2DD5
DE95E04EAF2774F8AF661827229F01E769A32734097C457EB6FF056D90C46C5E
9F936AA6BF2EE8244BBEDB8862E56423F5845BB10C8809730B011D650EA18945
83C320A3F4ED095A5EF91929FC877ECC28A1C2CE74A53245E629BF46C6534983
307B1C94EB35CECDEE86551F0C308F66690E591C5D9D8FE14F534CF3F5DB6D32
39D7C799F392C4E65759B7BF61F4D8312E3B26C31466206A367A0DD7A90D25E2
805D36ED5CE0A4BEBCAC0A348FADD2D2AAD670E28BE6E33F627B4A9F35078B1D
6688084C4C18840673EF9B3526172EE14EF64E97C8B006C27DF6EF73BA6E6459
3608F10EB1EC4B824DD5360B42AFF2084788B165747AABFB2C9C0EBBA9C6246C
08F28143809315D6268E386F09BBAC54C34213438B56C386B34AA457D149CC39
A3C163F56E3C2E637C63A79CF7F2DE969EF3AAFF75F3F20499A9ACA61279D545
866FFE57D25998244F448AAB042B141952BD653007A889B1A716A4042CBBB827
C1ED5E3C616C22D5FCB39D3B3539F9B71D50D25ECD2E5D953C7A5194C867DDB1
75CE10B2C3A20E8CDE15AAE9F549D034838DC066CA649C31EE365D46450AF18B
893748D055DD88C72391FD92DDF0AA1A1316051BC756F87BC9A425019B2FA7BD
CA9F35E89E2229B3021DD24C9DF0DC3217F44DCF510116DDC9E92EFDA3E0A892
491C8961CA484BA29B8CACD2FED2E246FA7414F892AF7B9F08698FDEC82D2E4D
8C6ED1FD9E0BA2645663E7E97B0F780033D025F2EF3B364574C03F04FFC4E09A
3D4182BBFCCCD8CA54A92434E2208803ED36F931D31C7498B7FCEE4B78AECF11
B27123A10F031F9CBA36066680E4748E346D18FD0EFA395D1A9227530618ADD9
64D96C50A0172F712CB427E8F7170F8A1691FB95B247A271499F0E63676BD64B
167438333A3BD9CD9641AC637E0ADB17F1E394DF34AF5A2BD02030DD087BBA02
E1209338B74075744A9A9966039AB6D223F385E06FF359257913E6C01BF32F5B
A3640C7CA41A6C51F296E50DC1CD1D68491CE5D75E0ABDD4C5C4A97C8BE2BA35
D91AF9F8F38E7AB8C1778B06A212D0416E6137087329AAA2679C51D014CC4DEF
0F1543E2FD97621E552E19B29AA1368CB5046C188BA59B1E1875B25FB269DD2D
C0678A42CD310702465694F2BF302AEBC43F714F7C657505132DDA71CD23D17D
628BF3400EB5DDFCE2850F31B40C5913394649AA4241CF646F3939916C2077AD
C11F8C3E478586AA7931E327333FCD8A2EB31DF4B47AA2F31B999556602DD998
5848143C0CBD0B5187DF08E675550F2384D48C2954EA7D16AD2B94DF97C194D2
302CC47BF968CB1F6C9641A87525D5C6972ACCA1D4A4B4DA8EC54BEA6E7312B3
2737754A9FCBED3BA5F8220B751506BB0A5BB5CF706AFCC04BFD713A3BE3C842
9FFDBAA0CA5691D0FCE76134841A169970903843163DE68FF09649E99945DB64
491FD6D8B2DF237DBAF550D1B74263B3BF1EF6211F40D4DF2DEC46E4DE557088
5D458A7CDC6F34B8C3F5C76582C8B7D24A333AAE0B43CA67436F8ECAD7C50B12
35BAAD521033D8024E4DFCF01580AEC63BD5F8ADB778F822AC4FF0DA608EB7CC
1A52A51B9F38FFADC0D2F4D8394C5D598123B483AE5AC1215F24F2492EBAA134
3C58AD4E3B493AABDF753EBF1F04058C6981C353D6788C2D3294165B667D3765
7883A8493F5D772F789F73979B254BB9397FDE4F8B76CA6FFF312F4B012949F4
3EDCF1AC60FFF2681549DFF430B498405E79CB407DADFCEDCAB1E2FAD3B0F4C7
B575A33EAFF9F67D37F50BB06D06834EA683862991C5BE340D4A7F8D131E733D
289F72977870F9958102F5D835739F0F5A642E7194E8AF7FDA2937E5C0712CE4
EE15CB475725030CE0F238C32775D3EC95CE3D0886046E3EEAE322F59D423E83
DE88DDAB5CE0F70537487EBA5A16A9306BA7DDCA14A85A9F83B3BC3600DC9421
BDADA2704A5A24F7174A3A486ACE68739EC5960038CB44D969A594E97AE1F42C
42C1B7E3A456B3CDFC7683537B337AA8777F18CA45B22C8BEB18877DC624496B
9E8EF9F386B7FE4D94ABD5CE3B5786E76FE04A35909C472C04654A4405932EE6
A4A3E0F6DB088603FDD82F0EFCB85A962002A662D1AD0647A2F484B59075A1FA
9F4327D542ED7962620B998ECC3A95CE736089593461CED9B5AAAB05C2DA3820
5AF29B32904E1EEC357C8E282189C6D8F562DB11291091E6897E24CD8F8E2A34
67F35D261E01336152E69831B0CC6B03FF1AC7EA22B745F513A25FE10F70E74A
3FD71FE1EC9999BEDE7CFA6A97EA2DF621711BE950FF8960965685BAAEA71FA6
36F165573A0A6A92DAEE41A9B0C97BF03419FF6BA1F44524D00FD671EACC4233
9A857680DFD27B9F1E7A760058C8277B3761DB9969241D1824A7DADF70BBFC38
89C6DB9091E3BFCB36851CB9662B365A4B7384BDBA1D385902D1E5DABA72A159
63790096B927EA49299AE03E41C7F593F3B995D1155E91C62D5F68845ED3C797
7798B56858F96C2FE2E37D812873B7801767082A6D6B60602CEB94B7F6D7A142
72814734DC584A18D1FFEA7333D4C7E2DFE5B91E9AD92EB52533CA52FA888980
C79FEEDF0FAFB3B20B497F9AB668BDAFA364B405916526D5C48E57DC30BC35B9
BF684FDFAD199D9A28541327F3899AD505FBBBBB22F419E22E0149EE5FDD2B43
AF442E2724EC16934C307FA731F90AD1C76B74569B78CDEA7C19808233C6364B
D049F3F50A68D3EC5F29F2B96BC58C44AF90FE13F244B7129F14B5DAC3F3F310
B330E67CA4EB76F895DAC8025F11EC7630EEB4826B5721348FA38F28B2AEEB1C
5F7CA413C486C94B1DD96988F07F7A08D3635E28624878E55D4FFBEB5E183CB5
93014D8A272EBCF3A09133603CFFEF43A6FF059BCE525706D3795884FB495748
C8AFB50DB464459A5C36D7CD087631BC09C693A11BDF1C6011D9864FE66EE8C0
4824A42E97D16E017C0BB73732D4537E2A5BB283B3568950E5681364DBC1D6DA
058A122862A44ED85029A7B39F2FA7C362D859D0B429E056891339626AE6091D
74F6110CA32F8F3E9507216997E6AD1A2F1FFBE8B407C9880DE230E234F6FD41
A291851178BEAE5DB9DEB22E3443807E2BCEF12A4AE8C490AA9E3D2918329F47
42314CD258A0760DE5FDAC4AF7209CEB530B8508B278952A3638CA8491C3B493
516F461610DBAF32E923ACB834B15E2D169A10F2609EC0ACDF7BDBC777DD2C19
2DB330FD557D3B06B78824D6AB237D8F2D57A7ED35F02CFA9290ED6893B41657
A2485524A3F1642FF5808FDB77015D9467EDAC4A6BBE8A175833B1225A5554F7
2C60207F7A2632A4023255E8EF1F38C1B8216C9B03319B60BEC9799E5378683F
46E698FA75F2DFD40F17C603F3335F1EC70DBA1449C7A33EDDD46CC3DE4A6557
EE67BF349AA8680FDBF415DC527129288B5879500180F75DF80394EC7CF11BC8
9EE9A4ABD64DE3076A2963F83FA333F19FF74F79ECF36A87A31D6F125FD2415B
3F6A6FC33C179F54CA164835F3C3DB62AF444BDF27AFF23098C7212477F688B8
6F48D9AD080D544D57FEDD33D3D9AED9346CBB644C97C951D4AEEB2BF6F0CB18
E2517BA7ADCFD00FE44E290E731D53E5C0D762FCBA08004562DCE6A5EF2FBB74
B3053CBED3B6E896B1C3356DD9E8FCB69691AAF6BEBA0424D62B9F266D560B40
89E20A9F35AD4A7F65A7183761ABBEE0F7EF26ED3565A25516A3A5A57143979A
1EEED8CD52A69E4E1AE4795F3EE0CA21B9F4D166783A9AF54B08B6C56703932A
310197E328C6E6A6BADAA11D66A952964F31FD690082FA02D1E2A4512A9F2742
33B203FB770A3A1C7490ED630D0FAEB3066429D0237E18818EC368D0DA72EB08
1951C70139EB0DD59EB53AF5039A7618C77F6CED9F0A066FED6FEE0C0E328351
BA39746C1224A29D191D8B86491E0A306ABA070CAA2756C3A33990EB6DDF34E8
06EAAFF94AE6686EEB06A17D6D020D1F4E59428D533DB0EDA6434E6E1A478D5C
2A0D08CB39DA7D5F5200199FFFE3F41729478D4F63AE01FC0BF3B378FF6402D1
CCF7554B0EFE63453745582F9AA32CD5AA939031EE54F8B3DCDF3F22764A2BDA
0F6C1B24C24D386507EA0A0F893D86EA4957593B1EEC56F0BC4307C6A4AA4B99
8B51C1860703100A1DDBCED18D96E7862F1A39AA382ECC9D344D5EBE14B8BCEE
2DBC9264AB4A2C6A4423F3843EA8AC58FE61E7AD4F88EC736D8CB0702B8643F6
0A51785CBFFB762731E15A0A74444B0F08DF7910BFA03E337429B956EA650FB1
5C1452D3AD06766DAFCD148EF98FD24375566DCD087D95414ED0256EC45CBD66
E769B218F870721456DD113BBDE5E605D645BE5E56A65C74B2B559C1ACB0279A
5E7A7ABB595F6F6D9C8F618796CFD98400B2750613F8F9E174820861EC4E1C67
55A498DEFC24FD2B36676156F75CD272E701F8D75E5C5EE9E0B43A750D2789FF
8FA886A3795E7260FF7F4DF4DCCD6128CC406B6237C3E6C9EF19E52E196D5920
D78A27E9F8579DC9E240ECB21F137EF4BF25A93969E073C4F6CEB99CBA01A828
BAD5F026A538928255B58B3EF65A21443754056191ED386F71A7397D511E81D0
52C75EB22263DB290964C25CB7DE3E0BF64E6D6DF749F9185A266822AC99F07E
451A2D33D3B517E72FAB4E6716498A896B37F88D66A9446AC91EF727A0E6885B
314287A652C31AA5DCC5C7B6067C375F3C65EF30B0B888D3E4F7D3A14B673BE4
412D42DE9960FBEFA3FD1E21924D32F42305821D89852BDCB2F79AE1B5B38041
01AEEF373F63B0F5B2AE879E7471682854955C36648429B4C47EA464D4AFFAFB
A7E83624BB4A5CEAAF745735FF11723CC9BC2EABC48D30012831E41E3DA3E02C
2EE060ABACC5907328
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI8
%!PS-AdobeFont-1.0: CMMI8 003.002
%%Title: CMMI8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI8 known{/CMMI8 findfont dup/UniqueID known{dup
/UniqueID get 5087383 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI8 def
/FontBBox {-24 -250 1110 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI8.) readonly def
/FullName (CMMI8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 60 /less put
dup 62 /greater put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBA9B440A6DD72BF8
97084C906B05FAD969086ED21AF0AA1471613182B26117D7494DD9F9270EF3ED
8DA4D957225F75D060237B6DAAD5A0AE3E702B3D1C437835B93B8AF1F9E7D966
E739CF3AD5E256F90286A34069E5BB4122F94F18F3485658D0D25B938522A879
8215A417CA2CBD20F71C5C5FCDE21EEA7BB27876D93BA667868A419287FE59BC
F538980597DBBA743DBBDBEBC61E3286DA7977833DC8BFC5E52FF5DF5EFD9A92
D070EB769E31E760A50FDE012DC0057835E8B9B046FCC83F1A0C40326AFB4E3A
0CC3BFA35FCC64E32854F32EB7DF10A19F95830136BBB8139DE1663B7FD790CE
464EA431AC109FCA0E03F3E0D355FAE20AC8774D6B1CE233C27680C77DDA7356
560A27C75993E8C980CD1E3B0683F7E8A05119B3AD567DAB4851B66E418687B7
F9B21B3BEF607918D5973421B68E65DFD8B6C8DFDCF1CAFE2637D365148EBCE3
FA4CC00052A2A522205EA3AE3461CEE02042E1A3F11467CB6C8C849B200CCE3D
0BC188EC7B934CBBC0AE2BF5DEA228181DBF0F774119F313516E7D97FF532621
9278F856C166CA6547504F34991D588A0631A5CD06363F3FEE9FA0772C783447
ECD0A200929CB58EBFB6B72008E4082B5D14AA560C24915B9463A92F38237886
C35CBB2D4DD6D0CA8C1D4EC46093041C6181C2F6586EE3E7D4E647A107B6DB23
DAD9AB5A0C2905455FE58075EFF6B48597078BFCCDD84812B98986F34987CE49
7EFB19814F2A58B0233A59331F6F8EB66401F04EE7B1ECAD9BC90A2BCEBE213D
DDDB1F75C83609ED6A669A0CED58B2E269E76ECF73616D94F13CF827C9BF354A
E82202988DCFE856786B8AE569AFF3105B55C72C58D310FFC0E10B2ABAC8DB06
40D5F72E54770E9DED1AF4616008595B8481E3D9AF4191CC9A5BFD9DDD01C9F1
FE7165D21E488DB40879E863D470CB31CA06E5B5F1F8C3CCE04B697CEB0F3557
ECAA358D2EC2B370519CE06138FA702314BA01F1F33881825EAE1230098BB3C9
59666983275CA4E8D9DB34979F86535577E79393A72F84B0F768FE8C92692907
15E9FE9894E98A0EBEA490CBC8C7E5A9F3E43B24C2C5A4BCD71DAAD3CC0B8B82
AC13933543E295C163F61C9FD18371CB514493F90BF7FB460C029B8DD2E2BF05
FD66B451DF277864DE1EE42100BF29E01A50258C2758F3EDE211BB3457B8243C
20BE72983FD6FA2581C5A953D94381E32E80D6D6095F2E93A5455C101BA71E8C
E560D4694E4C167EFA25FB1E9D214AEA745CE34CAA5468FAEF8F6BDB6C6BE8F4
3D58836C26A2392E4C4DECE284A90DDB3858A16D6135FED655A600929DE71605
6CA32F6851A2A6F71A9DF3D5D657593BB729CBCA2F4B059365B7263DC08AB211
9C547096E6427F6AA53CB2EB87DF0AFE2ABCDBD15D7EF228D3396413B83C6B4A
79E41F9BA55A2688F62A10472675E5658F151F9FD6634EC94EC0682C17448024
CC1633077C07A93E4DA8749D974FB8F4332B5DECF97D749C10DB60D4C90ACBFA
E65AE928C88BAE19234690EEABDB30BEDCEF2660D7464D5071058C30C572A2BC
7DEE5384BD7614A4BEC4C84E18CF7EC81C810256E8CE6520466C033E2A36D3D3
5D6074B3857415011D8D9D49A474D994571CDBB89AF92BEA879BEBAF67663F5C
17ACAE809C2231EDD0A76641BA52FA7B19A2798D54A4A9B62C42F9905851229F
2CEE0191C8AA5AC12BB0CE9E5E3E862683AB57DBB4AAD6AC0FA8BA4F408D41E0
755F72B82B7C18EC6B13995BF7AFD66AF4BA0EA7523DA8B75EE751744EBA9CA4
4E8BC1FB37734503A5B24FB9F2C2D07A47CFC477F02413D55BD7DC180B0344E8
50248801FA6BE26C97F397797F5F9DF762967E7CD92CCB8B2E587C92177619A4
BF8046CBC72C6E69DC78B8CB6B7381A290080EF59F5B9F29C1167B261C932E9D
010D2D14BB425D157F22BC0305770AECC5BC80000F8CCFB9930255A68F299ED9
D3B5B83A2CC00E3305EB281E1A7054734661B175C6CA0AF168790985F173DF03
A8693B677BAFE23C3CF833FF6463B136FC370E4F0C29E322DBEF637F62C33CD9
B0A8338FD67EC628E3BF2FCBF7CF0347D5CBA1DBE6DE878DD670176B85F69EF2
3C5CCA1BD2B8A385F113EF1CE522F5A6AE053B9C1E39408C9459DE3E7FE2C4ED
77F026B0081BB80D40185458139C16333EA27F43EF1204BFBF80BC5301B2A3AD
B10F7EFBB4F5B7E04DA1167F68BB6D4049440B0F57385FF0A95E72760C6A12F8
1335BB31CB74081FBAA319180DC00113CF50CC5A41D2E751E055DA1429CD75BB
0060C21CED634FDA106C49A12B356129D010E29F2919301AA7F80222AF3905ED
672FF85C9897A70241E8DDB9A53034B6BB44E140D9E739848E7A782F24B98AC8
00DA09EBE4532787E5CF3ED815705F659D8E52DC2C2D4949374A3BF192BEEB99
1D9A90A4F3250BF8A1FD40D91F5B34AF2CC561FD02FED712500B24330D87DA9E
4AA46B6E34BCB40B1F73A1DDE07E002B9478E9651D2BF85E67585B6ED812BE03
A594874A235B1C1840C4BF4BA6D863583D8C12DB49EF7F8CC24DCBB6B21FBCA9
378F3E2DC406291AB324571F76E0805DF8826090F0E8B50599CA58D124653D16
16C782B01C91A6F3DA6346482E3163D28D95EA49866360147296838A3FD0CC53
920F91D895F839CB61FFD2FBA296CA4C6304EEE579782AE5FD33D0FA652BA7E2
CEC7C01DD0D3E0D56E6177EE5F609A396F7FC8EADABB465DBA7F384E215C4DCB
E64F807A50A461545107F9C3F7D7CC7D33E6EBD6D9228B1DCBFEF160703E6129
0DCED8D45DD54E2A36E698A616E7906A50901E453BDB2A363EB77144E9EA6F2B
6BD927495EB0EBA5755165707CCFBF8759CE5856881117C7F3EF6D494EDDA7EF
E499BCA56C86467AC573DA9C2724FCC74BEB331E736FB093DCB67DAD42296655
415D110F2729BD1D55E5C9CCE2E724116F45FB2E66AE0F790258851A5C808762
68B8A110BD326F8D3EC45004E7CC08DA42F6CB80A6B6E7C286F139534A275BCD
2F812993DD9C9A1AEB5E7E4BDB4805DFF3A7030263AB060C9B74F0C25C5B9005
965284884450CC2815DF28D5F9B0496DC7A3AA85E1E42741E1538797175C28D9
FD904699C771FB066397FFDEE8E8DD1ABBDF67E6BFEF95BB700A7C1BA91354C5
42EC3864F6E19B379E79A1CC3C786C0DA146C6B0B8E507ED58DBB1F12F613A98
0E1F8967991427A22ED323901C4B83336CD343212131E8B59C2F5D232702ACC5
7891BFD4EBA5D0FA35AEF9F3520CA82D121BF6885BBDAF15248A9E4649ADB94D
0735CC4D14E1D7275427D00C8E709579612F7F74DB6FC218C10C278CC63E2AE2
37EC996B10C0229D687F0DB5E38A8C4DAFB3DD8A9E7ED37186FEFC97790A1EA6
636A88FA9FB4D282234BAAD301A1F3AD33F252C5EEC49410562FC52809CEC466
A0F6D148E9AF19D6DA2337C8283FBFF6005C37AAEB0B7F7217A8DC6F949B9984
72DEF163E4D5ECE4288404448C96A7FF0AC76F732D50AD63A1D286C9180E80E7
C218B1F48E3034FCABA6BF262CEECC284AC29E9F3CA1CFC1639A681ED66C1FBA
666F073D45C84A286E05FF809D4764FE819B6A330E73695CCF2F448B4D4EB4B3
F63E94EC289807A2F9A1159CF328C002B467B19D6E9454CCE36FC19E0A214190
B251818DD456EF658B0398E275514B72D9C1DA5F806EABCF1DD56BC025D69FC8
A0C2FAAC1892B64D2AF79EA2F57F103CA623E440307600D50E783FAA998EBD40
51D23A0CEFF8D8649B48B982DC38D613F882DCCAE5F51233A641B3CFD783F830
D984F116DEA3ED8F0D3369AE629A006BAD4523F8E3C7C6B39A6C972508B67AE9
32613F28CCFFC4BBC86CF31A0C25C786554F7A1F3DE97F5CFD1A941F775067A4
784385E2D02EE1FF886701B1E87D966D3F500E15591A5012E645837FE2DBE3E6
A3D375C6CA0ADBF96B33EC3FCFFFD888D7344B31D40427B8A8BED0FEC6FBE038
1FB5F0714C4B5A0E607E215B5B7F76ACF0FEAA4C9790EB7E13C0E3933B7C63FE
5B934EA34F4B741C3667BF1735C685CECA63507E6FB9EB06AA010311F12AC1AB
4CE3FE8D1EA1EDB3C700BEBA516FC71D740B1CA1A60D4578003973CC3EE21DB1
58FB1CF7E2EAEB2A4A6C742EBC3575EE6378531C6EFA6E6986E68B8E25CEEA67
A59623FC1ED2ADDA9D72DBA627D179E47DC7F5551E07EA4D54ADB6CC8109D340
7279F288E552EFD79C17DA3431E53EED66D16F24BF86468C2FE7EFF421560500
12FB048D6CE2F370BE4E560F8B4AA12362ACFEBC839351C1D5100C625B14CFDC
747B66082D4AD5474A63EA0054E9C3E6295AF6B133348487B0471395857F4B73
4BF8337DCE2FE2E1A4EAD7E7BEDC822BDDCE42B79B308C11897C98E3ADE253CD
09CEEEC0CB1DB66AB072E36E1E04911F40B535B0FD85982C21B8A587D65C38D2
DBC5A07A0A26DFFF7460F10781069490AC1B611CF7312A14B4AA6005A4582C5D
336BCC30EB47749193BE8D457A43F54204B070DF5AC2057B6437E23705C7FE8F
7BB150560F7044BE3E48EFDDA539FEEFB0D2A7856CD4E405FCE0F5EB190D91AE
578E2EDEB9ECA218573BB1A8EF116043A27DD17A4047BCCC7C5F3C563A910778
45ABCA32C7347E6180ACC86F9D665FF025DD8AF514FC3724B5C3510F3C37E0AC
5101D1667C6ED4E8F37F06CC2BDF66CB5A9FB7C52CAD26344FD1557571336A1E
1E340EBA149B4EB99016D1A411FB874914AAB2A415CE3F5FDFBBF5AFD7959B9F
CB127BDC68D2A2F3F07FF3D4FF32046C0371CD2E68A6471E46B08413FC3C7A80
A107EEE57979DB387B2206D2810DB310B7232B2DAA385256C8A58964B512003F
A0C24ED21809E2576229627278118107B9C32345C1EE8C0CFB452CA362379369
31320DEB5371037AFAD093B61E8AC7A6DCF7D49C7F8EC32DC0ECEAFD7E892810
039570D2956289B15E078C2545911BF535F72F7DAC619BBDEEFA855BBAA81704
18F7D351B0936357085A32157AD8E27438A58B2397D69264E748B0B8D01B33F4
D04DC59326A7DED39E247A1C1A1AE49382BDBDE9478A1CB48F88BDF14A268B40
A40B9FBFC4C87FD3DF1EB2464C3C14E36CA41E09EE0A9B75FEB0769F9ECEB1BA
EBF73B818427FACDBC33BB95B9654F31C59A766E931C698A8608F15290FCDBD3
5C535D9036A19CB7B55BF54E96F9B2206DC71624E2E55FE632FDFDEC8757AEA3
1D83D190ABED5E7A7AAE2F41FCEBC7C18626BF58F9E9F02FBAE0C8AA85E9DB21
A3D8907522DCBAE4923C6A2A09FD2F08FE32215C544AB577B337D929E625E704
E041C2381AFCFEA37F3133B6CA20093EFD457C772E428325E56C9CBCC447EF9A
05A8C3F28017DD4FFACC51B38E4896C5044266EAB4EB7C13FE855E790DCF8A17
B61B1D30DD866BC57397EF6297C4891451FD6A5C6AD6D7446F58F56A68650908
224D9F4C31C6906FD29BB51DC947465B808438E6260325752808963C808A4AAD
60422ADD62CAF315F6AE92FACEC55D5B682089AC0BC051CE1E2C06A3874736CF
0DB5F7C8F178479E4F11665402781D80397C75456F5CDF0A4F382A19EC6AD64F
71A9275264800E178F212269154DD8352167C57EBC0A38BE794AAD1601C8E541
7E1AB8E969A76E1EB4092644958FEA2AD29635E70C4DFE2EB0D9B3E1644FAAD9
B27AD5466EFAC724718962B62E7B8C32F412B69DFFEB792587D571FB5C591D95
4CD441662CD1B07595E245FA537FA9EB5A20A97E5C9251EED22C9961B48B25ED
85BB7524F635F9CBA3714C6D60A6BF920C45A64F4C366C1F9D22F53084997C9A
EFE2D79FBE3347111F5093E271DB7E3770B35D253DAF93653F6A23FA145AD775
AF11E188EA0428137D9A14542E3EDA6F7B2E5AA86C9F3D3649A85ED2F020C696
01A339FE6D7E42BC548C8F92A4E3809C67A986C99418772403D16D0E8662595A
1F37563671D6DA0F36CAC99DAA8FEA215DF7D45E61314915A30A22FCA86A50D5
2FF2EF08E240F9FAC030D92BDFBE40F1972DF413E6B452024CD11792BFDAA2D7
C82716528AD4B3D637BB43E748336DCC86A952BE96F1EA423E31340FCACDC1EB
02EE932F58734AF3A5B2279361B63F1D824EE3BA9F4D2EC7B33A300A1CE8CA43
24616444176DB8099D85AC68329B1F85E4B5B16F3B396FE2AE7774F3065D0203
AA140DC128D6F935C44733EF585F89E8639A2096A225A2E5E49D447D8AF9FD44
CF6C1BAD5C5E5262AECC5543EC8199B00B72BE32A0F110F64A1D0D5CCEF38FD1
155D6198E9A343702F8ECF5052333272CAC2FE016681E12745CBE14E1065EFD5
407DA3686080989F6F6D650A9F1EB3A813B070C30C0D3B4A1E9C206E2E4DFD51
D8DCBE9AECF956640A2E79F1B4FD0EB8E0449AE1B8FFEBC43275743B4D7F6605
0673B61EB3189E74F51F3780A91E6A5C6464C8CF7D563D9958D46F39B1A12087
6BBD4898BA9ABA468AE1F24115891FD3CBC2195F75958E26DF8BF1B93F7B521A
C12112237AB23A8E5A7B7D0DC4C53692B35F3CD813EB463C0BD3A6486B0476C6
3B36DA71FE512E5745D097FD4AF5D056E434DEE2AF926B2EE79F7FC4FEFD4130
BB4B4BE01E5C720325A4884507CB51CBA4FFB615B78A4182444F0ECBE4161A58
E86FE1DA2E39C2BECBCF1F1D7B9B776A26078FC252128FA8108CB83F673CFD37
CCDA493234FB93E1550EF8D2DC049ED95B00A8A57834B024B277D3DF062E748C
B61F183F2D72AD075474F8165528CE75E4F40B38B0FAAE45751C1907F8D31619
E88EAB02EEED415F3EE3BC5BECC6AF565D34E0BA2958FF337A2B06012DD1858E
C53DE52C108BD5AAB76C882198C72CDCC958D68EA8FD26F76F04EC1A08B2AC3F
A6D0E8724D2656555DBC0C8C42A3E22ACA7E1BC8E9F897D9AB692E0FB9EC32EC
59E31CCA4516A3C3BFD5411BAC3DEDCE374D48681CE7D67DEAB93F5B5C5290AC
FEB29C5EA2C98095692873D36C7DA24847B66F31E4CA4C7AE5C79D7CE4F0532B
78620582E3731A2A6533A03E7155B33E7CD142FE79F72721862EDB24959B9783
F834CB616FFCB2A23497BA6D99AE34DC459A2F7B3E4DA2B54BED118ADCD92178
66C40F4E60F6E1327D5DBCA645A2A7C770807E6D7E47E1265C753F8793BD2D1E
BDCD749CC24D4AF9315A93F01180A0F9A7F420DA1B87664DA5FD967131273271
9DCC45C3D57EB9B8AF14771E8E751D88B98D2FFDC72F5011D402EC34FD010ACF
D3B0660304725191D64FEE106253FCB3470F1A16EB7B45C1489D3534BF94F740
C2781DAFA5E8A9E7B25A85BD7935DF3ADDE08C960E283D8FC3976FDB4085DBB4
B6B35FB239C28C785B18BE4FC98F3A5F410F562DB5FCA04E8074E4E790F4265E
F88117B3D0833AFAE6E8B8A71D7731BA6F14FD6F217EDA3F8CC687A494FC3914
B84FDC37C8C335AB1E7E0BEC7FB6B7A595C50CF8F0080C8D461BCB8B579A5155
F963B6587873FA31C3A6572740C63EFBE58A2EBB723B7517D2A243F6CB08A038
54F4DF0F6692022B2EE8C6F6B73735ED3166BAC58D9216A06EA6FC7B63B20031
D0F0F99D83D9030B413C2360DD2C553E34BD67851B743C3FDA676AD63C5BD759
9131358C6BCDF05FCC048F4EBB9005899ACDD8E9EC9BB8C5A08E83485047D263
0ED69B4D1869A38068FDA03524022A1D32FA2AE0BF728D2A654E52B6A6C90A3A
725F86627D7C3EC5AF5AC512976D35FE42AACA3FECB401788D0BFFD9F4743BB2
EC5B4E7891F216DCA5A69E917A171E0069A03FB214ED307DE947225049D46E0C
4707503F09811A597A9113921AAC23AB1CAA9866F81A02BDF349FAB129F23E86
E384C043053055938D42ACBF9F0EE86CEBEB011BD5BB7D5930759026189A89A9
B624BC5B352DAD55CFCB8BE6CF6F215CCF778E33BBE1B009AF1164AEF12E6291
751E80E442E421CBF7FF6167F47D6C101972BC86F7613F49091C3769036309A1
7B71E67AB9F310DB19E988397ADD4DDF1752A0640A3421099CE8A47255416565
57815AF08EF078727916E07754C3B14648C1778FAB2858F4B8FC6BB85A8A9E02
8083B3992781CC1B73C1AA677D1D72A90C9EAE85441887111E9CBD2BA3A86257
C5F46CA08FADB8635948CB5F5956A9913AC6C797998AE7C21A8BC19C5C61F46F
F45577142DA38FBEC87FB8C1BD2FFEE761A55BC88D9C5EE502CFA2DC6F901843
F57118C4454C55EAD8333619FFDCC2A156F102F883CBE0DD608230115A131617
0F8B0D84E2EB135E958166DCF9EA96D5B3DAE2BF36263C65F0F769B5CD362B7D
41411911D0D8D97E5DBCE9F65F59BBC51D5A5E95CAA66C567BCCD35AE533AB95
9087ECD18280487CAA22D36460C007713F855C6AB3C560E4417C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusRomNo9L-Regu
%!PS-AdobeFont-1.0: NimbusRomNo9L-Regu 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Regular) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-Regu def
/PaintType 0 def
/WMode 0 def
/FontBBox {-168 -281 1000 924} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E152A40E590419249F2E4
C36159F8E54B532468E36965A38646781AB0B7F6A3E851FD10CAA49ADFC1E546
2FD2EC6150DC6E19523050F6148348A561AD8D2E2721EFF8A570CB33460A745B
926C889304C09753C2D78FB0CA95DC6DE5B8C524752C83601E7E9F73DF660674
F05AD83A166DA9BE89F22FEABD4B2665960F6FB5BC32928E1230C212E5D69CEE
0B3311A1738A11747AE263106916D8E95F25B25B4BC6AFB03B79ABB95DDA518B
41A49458111D2A1433C043627EF9460D324FFE22935F4F6DA88B8B91AE95B34E
08408A34EC8EAC3F65B6AE3E3E2524867EE9D29068F81E4372F4470BEEB4D6BE
EE4DF956BECC0CB77F8490117B22B2FB75C938ED0A5E208D88BC38B2AB8B9CFB
F1D53084B6F43DF336481ECA0AA2D5317BC83FC0E1D4DB01D0B7707EEF217E94
A7F985102DED27D8E8B009F7EF6DB91B91E78BFAE7BD688E10B3DC9AC77CDEE8
47AA4DC8EC78241E593D26EC7A60696151A2AE5325D736E99E01BDCBDE69579F
92EEEC224B6757EEDC64A75455BB665DF42A0E4CE7B99BF3E7D66F8FFC8C13F9
D7A1FF7A9D5FF7AC43396779F11C9B008C33A2043D48B61B88B03104B1425F09
675B559CA4302C001EE80D2B739CC0FD1023BF4F1FF9C01E892E59CCA7C26011
B8E0B6D29CC29FC72792FDA5E7D5D88EF98F9DBA960C96534C399C54865EAB86
0FA2E0D6C7C44B553EAC1574D55E7970744D4792FFFBDCE6FB4365BDBC2965BB
2E9EDAD9E0EBF0B620DB415AD98297F5AE83D9C710436657E74D26E83957C745
89834337035A7501803947F6880B70E56A3A404C62D57B849D28804CBE0F5884
435A0E12DCC9BA414ABB732BFBAE237001F557DEA5E972BA0838A3C7C9EB75AA
4A050DA0A529BDFFBF9011C360564FD17A02C18860AF6B86EFD4E2C125686C9A
5E114E95C71FC89A5DE9C589BFE5AC0480CFF716345265D2435EDAE67CFC4801
5BC08E7A48D683ACDB91E05F469C0C8919D73A5D07A1CCB173E30E76680ACB09
02A40A3E11916198BD69F1A26E88330F50692D0D5917E99E7A01B327413E24AA
E98EA484E45897E6AE4D6997B6E8BBF61C9406E916D56985CB2BD297E8ACFC6E
CF2D2281AD84696B7C6CB584BD85CC20BA14ADD3BC3E25DB91124C0ACF22E902
3CFBF04CC40DE331991E9075D22AB5EE0E849B340050E6C417C664A782D05549
DB2EF572F193B1C12B4635C2B358747046DE585E93CDED901EE8B566E969C0D0
EC80D172940BA3ECFA1C2AD06186907A91B3C71C70AD476F8D6E6EC6D1476CA9
9DDEBB0897B97D21ADAEC5AC1FA34CEF83450F3CF96B23EFDB0B46E25392CD6F
43D5C842F87B6D8F433F9402B18339DEE85CE619109DC5B0A512D05CF9D7D567
453EFAC6B42EA67174348066E173C5D0B04A7DA04505AE8A67CD805EC55122BB
58CD67DDE0217905ED118A54FCEFBD129D6310995B58DF6D920A30C805741994
1A114E40863B737B002A6CA958B8C2397A96B4924A0C7D7AF0112FF1A1DFDCAE
E8B1B75A2BBF37F423BC88E6BDD06F2AF61301FD6091FDF2C662612531A23666
64EE40299590BDDE05228EC140AFB5D7E24E2B18FA0D5A7BAAB82D3297C9CEDC
20F9601CA9FEAAD87981D6DA72961783F252E49C5574786F45DE88FBF2D6B94F
12E4EA3A9BDB285BED832B3D6CCE7DA625F13D9C504668753AA079E9B24F0C3B
5C930C245C7C4B18D30A7046A27AA007D54F2A1B2596FBFA1E5C6668641E4C15
421F6D812255D98D2E89EE3BB7AB14D465CB0E4F622144E415EA54E08AF5899F
D8E30152DD5AF9200F8AC8B8FA39413858E8AAD7831B58CDCD3666FA965479B2
A5F85AFA549BEE2E8B72DEC59D297CC24DB89EC76930D071A679EDCE7A30FD98
2D182E86B3CB63C968430895741B98CC3150361B8901E76B80E3B89A01CFB003
D77233A407AEB2B43C524664AE0AB89DF0865E14A2374BC9C5097DA8A9EAC525
6F54531F9515FA7A9458A630D71D56B733A086394C076F82EC251D595E4EE9F9
BE26A986206B75F6E1151D7A6D811C66C3EE048CB2DB05D0E50A525C31CED2F8
389F5004865EE88ED4DE986F6029A4C0BCA95791D20C323193B70D462E6527E6
C2214EE691177F70C00E3CCA1E36E5111D74ECE14CE6896ED7628FCFC441C30F
108F0159505E014A35C21FCB5478A1CEE42E144601E47E3C44EF2B9C5ECE1915
13362AD091F6FFAAB185DDF759DC26288A27F32BBBB4087D2B948DED6C44828F
BFBF98843FD61AAC4452EE1E999CC3901A7FB96C757689A5935BEEA90CCB0F65
8995029D088B980C1BFE78F9D07C79345CAA69F4DB314DC2EEAC844E3320EE6F
8E895A70F5E23C13FDF9A7724A5FE71F2D7C6A9106D0E42E184317DF4428A4E3
D4A3C29F9EAB7F88C96F904A61C147BE8A77CFC638E18403A6E9FF8767233017
9114653F3E146573CB07E954A869F1BB6FED5048613BF39CA8CB9113D9FCD0CD
3CD5E120D17FE4D1553265DB5FBCC07B1ED23BF5A2D925263F0642D7F9D0C274
AAC6D549981CD8A5A23F0BE5153792894E2EC1D323677E92AEEC7F87B974227E
87E49BF062A0768D650B6AACA3735000E477AECFF9C99670502B08373AEC3A5B
F90CC47BA7E64C532EAF889F14897C9DEDC7FA6A9A458600D94973E8E9C2ED99
9BF8DA8733528484627BC648CF7562D5D69CBB241B5FE542AED77488779362D1
86F069C5BAF6F1D488AAC19F6AFDBA7D2F9B0C79E463DAC9531E164AEA39D39C
8BE741364E315E7A1E4C54C87A44ABC9F2A6F66D76D0E3CA4C1729D61AFB79F0
AF65F7263D94DB7D90B5F0EB05D672139182B73887AEF649B7E572B218E736F3
ED7CE2198FA4819FEF76221162163E0E6030CBAB2F5DEC8540F7894F04FCE9F5
85789F401D98B421491A006B52AD6A3528046683C9BC1658DCE2E31AE8196F8F
6636B82C823CE8FE2ADED8C8EFC9ECE13975B73F417DADB522141D21710B9D1F
B63542C8AC4157640D52E8A42AFCC7E10C35F3688B13BD129AA699D04482E9B6
0B908C01494A6E3DBD2F5E24463742B088247AA031B16F50DAA186DD0C099E81
618AF2A19313E987E209E1D792D8A5451711BCF103F760B3DCB112EFA57AC6E7
964CD6B38742F325B080ADF0C9EC376B8B6CDFB86A6693CC2CB60D4004DAE5FA
B0AE8E0E04E2A90A30E488F7BFC9308C93B748B3A350343ED8CCEC5F4A502090
96F46D9CD4831AF0DB23B343601C76450B50E0F5BF3AE85F088C8EA777191609
979AFA19329ED93F01B02EAC7F83EC916555287E238C700A9DAD172D005487D8
1FCD7EED6DA0AF85AA2FEBDD9838DEDC52BAE400A2E89ACBAD934122A6518D66
83C4D7F48A0A94D2B63CC5849424FD0A6B0F8CA07C3E84EBD2B4B6FE4E93B8F4
CEBA2E66131C9991A6010809DA8292F21814EA7DFFC70F609B38E66AB0708C37
B58104B07E78FB4D48BFC86792426D65752AA5EC954DB469270B5C04CF7C29BE
51A9B40FA4A4AB4BB2CEC3DAAA678B23A7EBCAF98097861710D733B5510790EB
12FFFE9D642464F431CD4C5AA463BA71CE104B525874F9D3B5509288ECDB5633
6D015846230D6CBDCD1D7DA837A40CA0A4929782F67156F05FF785FE50E8724E
529DAE3946A0C3A1DC023320A0166FE149667DB0CADB3DB95CE2C74D300AFC15
844C6DE56949F31D5077D0D23A9F679573B02EDE5223B38D2B734D802BB36576
5D1D092407A2870FD52C24D1EE2CFF632AEC235556FDF36D734438ECC21931A0
FC96813D697A04B2B3F3B0817DDA6B84F38C9D6589CCEBC4FE1A2A0B8923F689
5957387686FA472B0C469D8D97C290149FBAD1A52548E29D4DF19FB9DC0BCF64
B60BCC727F9015A060C09502E182EAB0E7D0D01ABC1E310F7D2A2E68F3F1587F
476AD6E7850D0ECB9BA3BBFD9A5E1B96FACC944BDF8C87B00481144E1428E550
30F5DB1C8F9E3C8D8B59C972627399F53074495D51EFD4976ACCE231CB8A6744
AB00B028B9FEF09C60EC7EA62551E76D6FB2D12A6604E56F26766AB98A44261B
400B19CFA88B959953691362BBB1FF3CE9758C0C3DC52B3D7F98424284CD9A28
0EC4310D52D83966B6E87E274F737A4AD179AED13C55F5B2395EE381841E8980
62D65F691C9337CFC51240CB91FBB1F267C4F40723EC60491463F4C49E4054DE
782E2383D7A66CA87E169501CE5DA6803DD88538D8DD38E22689D398BDAD5C14
5B1CFAF1E6F7EBF70A0D6A872A0A9B9874F1327A0333D0EC5A835B1352397BC5
4B113BF9DF8F1DEFF432ABF3634C8A4ED49F55EC482057D17B020572B3A812A5
36EAAC36AE82FDB8048CFC554962D553BE5AFA06E86BD82AF43D51C0EA3E6090
CB145B94451BE0B68FCA43840B1236C9EFA717434C2A95D55F2CB445CF6D9FF0
4EC2312D219664ADEA2F03FA22E81726885DAA0773914440DA3C0787FB5C84C2
4367DD6C3156B4B5722E1E4F5B61922DC4A068F35B9E7EB17E895A9862CA1C88
61169E68CA74E4BB24CA63C80C5ACACBBA97D1003181605A1CE8F509585C0ACA
D8E57397F9B7BE089A6C9DEED55254798FFFBFE2C853FF605E31FBCA635DD07B
98A6C76FEBEF8651DDA919811856CA6D1296CA1A7BE84FE3BBBBB9315EA6D786
9633F5E9B79231AFA4555DB50C7568911F6BABF3E498F4996B1F2A18D763DA62
36DDD7250442825D7CBF851259B0F872D5392470A172C6B48B8FCC44ED1673FE
D8B164E338A7C1DAC3FEF6CB5E603B1900F9FB86718A00A4209FB0E69E3054BE
A30E37578F21DBE61071F02FFF48DA781EC323CE9F04A6940F9B3C12E2B7B235
D514B13BF3E33CA454879E06105E7D7D313EB77105A65EB94AF059C5BF3FC1C1
9A7F085D9DEC3446B7D38E746F9E30FF31BFC9CB72C04132239D415741E550C1
1B96F6CAE997608D08B5EF26C1C7317D6A8D4BF72887D480235BFBA5FE221F82
FAE8B119141D7B41CFD13556569E88C05183A6B338DD38AB88D39F5E6E251D91
D5353F9560C83A3304973B70E1A4CD198838FAC38B735B33627ED8F43A4AB37A
B6E02AFB8BBAFF629CFE81D098BFE50548926CFFF4C00C1E197DD46DFA6CB091
44D952186962C49450BE0A667820B7B366133602D52539A4C2831017A01909F0
12AB89B1A81E894F0EAD4570BD037B8DA07FF36A4879B92AD6F73CD4B2C393B7
AB69E6FCBEC915F18F0170C5C214D83E06D819D57FC59A35B20F39A901067B1D
A8BFE99A676FB9A026489EC583315A0ED505141924A434CD7FB049A99E548232
17DAA510464E27EDE46F568791CFA42223FE124E12F6D74C2B699ECCC1820F9D
053B6B15049418E59C5418E699B68967704D31695637109405150D9B3A9D82BE
78BA903CFE41A030BAED3FD73752C693BB69DD309851430179B57D2AC8E9DDC6
1C0E9BEE7AD5DD407E9C24B5C70672D5613B831E9FA76E8616968E6930E10860
868D05AC944B7B713B63DE9465D57A2992CC43893291BD393C3107BD10F058F6
1B109606A45F4452068BC04A6F55241DCB44496CCC13711EC628A4A677DBCAC5
B938C7ED83799F0A16B3A8239F76E1D3B34CE214709FDFF7F0C20B11FDB0F552
29455C24CF54B6CBFDCCD8537C510BEEB69D403D267D5ADDBEB1A48B1597EF3E
34036AD1E20DCDB36324822CF1C8E8C4B2768EA2843A256BE75DCA9392D9F6E6
4F47C889C7BF19449A11807963BD02C6E586FF9A74ED949D368FCA6CD06906CC
A4D5FE82E13E99FE5A07AA6127A870FF2B0FBFC1F2B4733850A3D613C536616B
1AFE92479384A60160D456FFB8E396FA1EC77D82963B29BB0ED1195074A729AC
1D46459A36D8F643413C54F0384C24BBBC7F83A3DD56F92EBAED840C4918ABF1
9BD44E890380CEA0B0E0CD7A342D560BF8BFEA6EE0A240100F8D5A617EE61CC3
BFAAF1B415329AFE5324BF98B920FF47C0265A721F93E53FAA61998C854A0AD6
7320C14EAF892088DE7FBE38740DCEBA79CD5F19620451BDCF64D88C040B1856
3BD2321E4FE1EC6A122F4A2B51C20F5947D2CADC897778EAED1C49F8035E5137
1E4F340A57DCAB2B635F85832FA320CD9FE204CF2F99B0E1800708D97515CB6C
F112C2A89D2D44816E907413632AB021E1FE2A443AC56DAFE0CA144AB9E02C21
78715C846C1FF57890925A192A2CDA1BFDD81F7A2FC4E0191694A19FCD8E5506
3239A22723DA0ADC91D3BA889382F85EA515D665F6BEFD477FC3D2D0497A8FF1
20E278CFCD460AA15777BFBE815955AEB9C37A069476C96F52F1BA59AA153AEF
A7AAA0B5DB37982080D7FA0C00FBCE22ABE468EE44F6FB3A2E548B4F0E0AB5EB
81BDB29CF0D16A941307E86B644D139442A13BF94279A4EE1F89758C33D6ECCB
05B249C95DE657CFE8347CCC869A0A5F9F1C2DE3E85E5AE3CC87A1AD517170C9
05FD301758360960F3FF142E10AAE08B2DA6E1F5F9A10B3B2B1F35F993DE1484
BDC0572CEA4B78202C85CBBA637B50BC24CADB53363B7A4CBAFB38E0E351FAC7
04CE6D25C16A19E687510AF5EEEA901B87752564280289D0007C741BD5C69282
459F7527EE2BE9B145FB56DDA3F2BB8E6DB86650D0E4B4C930704776BDC8F587
351A0F32470313C5919DBDEC7204E96CF547F56244DC683808BA8B03784EF566
497DF949ACF8841F302BE362D48DC9D638693F0318A61A06F26C99EDF2D3BC8D
252111E851822B7074F66D1400CB8B71CF6D6772E5E7742C652136415D8D35C6
D0A1B332502F48DB2F5696E24B354AD9FE17A078E8ECA2D832095137F162BAD0
1CDB801DE1C40AB059093FFB211A95E4F490FF3325CA67FF440FC36E0E801F53
7814C4D778A9C500595A699F25F5EC596E9DC4044DAE413B0EC7EAE15BCBBEC9
80904227C2AC4E082CEECB6A871D1C1CFF8537FC172298E39F9D5B838C961988
292C1BB132ED87A5274D0CEC8F7E37F5F5EC05D1D63DFA3E63252D89DD8CC12E
79ECCAB56D0C25221C40BAA4A5324B79BE99EBCC1B00EBA7A59C6F1257E5E0A4
FB5A8D08B96311C845ECA7B4FBFDDB145500D77A97A8BF392606010F944ABA54
37B46FEFB4C4B82001A8B4E7DF01CAE49DE944C25FE946323AEDE5F026FAAB67
21853E0A4117D1B4B6FE63E36597036080C9C93BCC120E2E8273EE34C3A4EF08
8BE46AD9FA0D3E24F2FDCF57193CCAAA36A4B77425FE929D11197E2F42F5363E
6DF22BA29E867F335A421F20170A3AF187C72B119BE5F19E2D9777719D6D1C4D
5C5A20DF7A300E7DBA6370B48142B747B4373D23EDBC3BF495DF819FA518194C
6D281CB9F6F790051CF881AA21E8523BC287BAFD0D4CB5B549B69AC94FE49798
BC49D9D9D49B9CB9429CA197321B545625093729F5BE7849C3683FE698C4C99B
11D90001545C4F353B39777EA791A503CDE266BD99CE1D2976040390C6BE1938
DB4AB8F86636C0AEC29115B1A100E0941B86A910EC9C9749EF2864DAAFC2B488
6C6E9E9D214EF74920C44F798B2719D9BAF6807337B8BBE3F3002874511CD9A2
CDB39495A13475B594401F8BEA9ACC2CF2FE7F16ACC2F43FF9384AF0562C8569
4C713CE959E0FD12E786E0AD015C78FFDC31004182ABFC87710FA0AD8571707C
F683B84140BCFC5ACB0F725E26593BEDB115AD90FEF76D4B8F4E096E2029E3EF
35032DA7EE65899F4BAEBDA75217E0B805B6ED96C2607A0F1A814D91311F03B4
599B2563D5D0E368D6C6CC18FC4E7C07E9AA1F4D9C65C3A5B0D929234665B1D2
AD8D5160C7E9F656D93EB214E1FA04F01B66BBDB0AAD09C439797D92E1120186
B88DC96CED6B17F42258D65F1FAB9FBBE250F5A6C3D994EBC7F079E809BA8EB8
6992F1655E32EC0F3A909C9E8EC0A1213D3609D7226F568BA8A3E67E4F436A7D
FD63B73F243830183573838E83B1EE3C9854207B834F7A3F403F59A94BA9B253
B9A1AFA8B821DDE2F0C56CA3808FDEC5E0121F6CB05B2F13F52F77EE26F3E99A
3E422DBF10D8BDD44A2D4BC384F0CB459491C76838F536FD93AA48815F60DE47
FF22A646801EF848397FB57CC353D938E0D9154FD2BB8D104223BE87991F755B
2DBA4BD765F7A4F966BDDBC0507DA7B048F6F0A0829375589E07DF4BEF2EAC37
E9F37378901E11107F16AD70B17B9AFE2E860F4D6021117907FEA549013FD25F
743FFDA8A8C3C346302B79E9E395F5CAB8B4337FA560D02ADA19600C8FF1598F
39360D40639AA758231303650FB2E3EA7DE767F74D6E84A91F92861BEC15CDA1
4FF3FED905D29F842D1386163DBE244D3BCF71C666B0A5B524E738B89F8D9946
33E3E7682A570CF3E3C2303CF2EF210D0BF5CC1901F96732A98009CAE553A317
E908C6DA4596B2AAEE63B34E5735F198CEB491BAD5520D28288FDA61D5BE5A81
0A7232169565A5DD0DE97BD4B5D31DD2AB3A158924974C6CA677643FBEC5FFDF
853FF1F6B0E45E4BE3E27C553D7531FC15E50A0184FC8E0E3A1B1A119280F511
C3BECE1822371B61F012CF18F19B6A1A1C1BD83DB1393F038C937F3EE4F5006B
C4B6D0F070BC75CDB41BFAA1032DED90A59EA43320F4280071E75171D49C7184
2FA5F5B01C531E2A766D5DE4DFAF25B85C69FE5108626CDDC9D3D6101F697B09
48C4DFEF4BFA0430FD5C5A29242A09645F651BD5098F05BF138C75E890550774
1C1F981D36DA5896DC0E976980DAEF12DD33C53EA5A6062DBB19AA5F78C06E11
E8733AF4185105ADE2AC03251048A69B7E74E20C2AADB14A7E1E22C4D14414B2
5952FB9F925B1664907CA473A1FD2E01CB1197990EDF8444CC83F1AF7B279352
13CF690386FF773A42C48EF4AD284AF072BE982CEBC1898D2AEA861D0A93C641
9A595D11230573426A6754FDFA0AD910DDB31E7B4B4BE5EA212C4778F0571827
0018A852D6C63DB94895B33CC8C54E71E0756B492C763C4E867062C7A01A91E4
BB031BAD701C7BD1D0505E273F6BEE5C42399F8701A2D48B53A5F2B5EEF8C116
0389165522669C4030E2F0216F900B46753C7CA45D103528A79957F08BA5661E
890CA864D596BD43683CFC0900E0E011E8ADFE1DF19CCB2D51118CCF9BC2AAFD
7057954894FA6AD509AD38F50260E1792E31E4E20DFC391D647AC01C9AECD269
8F5B288669923D064C63BEBD65B4DE6458366ACC525CC69ADC4C399BC29D23CB
6F7A032E5EBA6FE6AEBC73D95D187EA52C2DFE95F7EA6A493EAD709322CA41F4
85B59EE7F1F9363CA966EF360755DFBF7D9A9488A7CB94C6F19B2493E5C30690
D68322F53C06880A71972D27B22A652AC7CAE0A87B5A0D8A371DBAA2FE592ED0
88AF9179C8319500243FCB57788C0C2E2C4BCFCCF0D6A762032A3FE5ACB41FDE
76C5AA5693DF81DA08CE18E9C45DFCC09EDA7AE963D1D391B205364B95B779CA
6F39929D7E57B80AD9F009C1B5C349CFAD8F885A3D4CA30C74613E0205AF23AA
2212D7B1C75D54053884EF88586CCB05FFC5891EEA9F0753E5FA7B1B2326F31C
AF13F8837BF5BD6C157FA02C1092D67952B08A5ADA04CA88C6B83F3FD610AD4D
7A1CC4D1B822E4B30330094E3ABE26398BFD765F3320924BC463D8228D3EF153
54BD07CA101FBF649A8F4E6B9DD9C3BBC4FEA8C2D1E5F26968F670B4A317F2B1
32400C3C7E12D4133CC51FEFF5F61EC846CEA41FDBBFDDA32EDC2824B00EDA64
442DA36262475EA8D6CB94127775162D04380B6A6A8650DEDBBAADED2CBE7650
3F3FE34DF9CFA2A2317D4A1D2390B36E5A8B62F31D3438BEE0CCE92D425DEC1A
A5CA22093A222AF420A9ACC0C8E0397EB5BB488D476D4EFCA5BE692C241108AD
B1ACA0A210405C9B5CDE246D0A15B36307EAD2720BD967C4C9B9F35304E24275
846157B02B1C6E9FCD7713EFBAFDE51948CED6F7B5F83024E9A3C46A12CDC92F
67387D81D444E63815FB24CF67EEF52F9A6DC92D19E70D2CACA87CBA61DB2FA2
0868587699A6BB8989F98B1BE4A9A869F8823C1F878A86EAEBD025791900F35B
D0FC57252612383FC19D2C56CA2CA535DD667C5F2CA7DF4BDF61FEB4AF5EBF6F
08D57FFAE34BFD1043D94CC8A34EF1C8404E486B51CF84F064A59940C67BDA61
16DB7C7D20B4330BD116E08A716D370F8F7E41CD376520CE39FD2A9ABC0B9856
655F9D9DA1ADBCBA5EE8339ECECFBD03C4D31652F4BD758B0748B26C9613A649
DF9D95D5D24C4B6B2795D94BDEB015C731EDF9EF916C94394D91C7EC0AA568F7
684A6B37CCE936BB42EC9B09E4DF37F7B8FD8B789AEFE644F929E005007E3694
2154EDE3A9BF589E24299FD34BD13605ED1672C9A5E9E34CC6B6717E8B794AB2
DBFDDF3A89648C906439AD57F5CC4D74549A52F36BDDFA8FF067549F3C6CA9E8
E36F19848614C5B184B42EA51452F540CA75E18B3418B6E63FA12606BF77E16D
1B038784CF9B7D4F33888BDB1947AB4B0247B4D041902FEF9E9E01688BF7A6A1
0749DD2BC565ECB955AE7E473476A0EBF03E3AC9E2D08746E18A701332225FC0
4635FD61D65A26527DC055BD861A6C23340D68B237D3C3618F2C2F86FEEE11AE
5BB62F5D5C0694D0F15976CFF3B13A19C14AF6552E6670F15F9CC15C9669D200
9B137EDE2064C8A2951F771CC656BF21141581DBA2D8F195DEED3CBD04A0149B
46C785ACB631650D95BCEA3BD95E9CB117617DB5FAEFD0F1E5A0647A794BD741
DD07AD6D39661CD267430125AAE44673821699EDFA81D9CD2E754E54C923F148
3F71B646634A4C5BF4B2C535FE5A29973E45876D27C65AAFEB563AC785C48F28
9CBF17C55D7A56A704DAAF9C494B9B47E1D85A98CD8D71BA013AB81CCE05B318
E4E966AF2DD3D0BB8F68DC37DFE2A910C88DC88FFB06B30063335EBE7CC569B4
CC25D26F4730ADC2846D60742BDA0722CC7D5C625F67192E457356F108D13FFE
53C044B40B95071142C5D976C36BD291C2D646FBCE8D38053537D8FFD3D7F4F3
A279294C9ADD9C3208251B6C177645D222A0C80BF3A8CCA876D474DFEA1579D7
9C7A78AF586FF0993EDD8D59CD411D5D2587F435EE214B8E33CC5DBAF0CE2FF3
C51F0E0A2FB2353D30CD025624C7B916A90B3FD13A58BB2F63EEBBC826E2C4F5
8AB798EACF5421AEFBA84C9BC4094C7091D3CE68F936908AAA25DA5F0B00EE25
B590F30CEF3BF5F590FF08EF7ED1A229D28B8E0E4568B3E086A102B8737FB9FD
AA0075C1FBCCBDAC9A0CAB64076EB9E9DA323F057BF773EC435F824A953C3AB1
F0B3CF95A2C2804BB5EE7BF0DBCE700723B454A8D9833B330F1AAA69E59FB3FA
6634CC694638F582CB1E6C7ACA5E857BBAC1D38941B000DE9E9245943A23E881
1E23AB283A35B20C5D87E15B724B62BB0C18F16F5F6A6EC1C3314567C88BE22E
0A01D250B6208658CEA6EDA0C0E69FAC766FDDB8E3D2C9946D021BC9F43F892C
EF56B1BF060B39D5CD50C2EE66FDD6947B83EE6F0FBC4E20095CE4C0F54C84EA
F18C232C028645A5ADC5E4B6C66AE114AFA7D1E58696A70135CCA2F848BF680A
F03858590E0974F2BCCFDD28FC5040C8E79920BFB188A6C909313B76269DFB1E
0E70C3EB905A56A7460FBC732DC15A037770B423EEF91E8CBE380C2EC84FB6E1
7F418B7300200F0C8DA37EFDEF65BC76D277DB7B455E4A937B004A3DC9776C9C
34508263844E00D8209A0D7CDED19AF16CF1A83DDCD78D676E71B6C51A64A87F
D82AC7FD782B89275261B6783FA8DBA0D35DAB6BDDA0F50004527B99DE185059
049FC2FE51835AE909D4638E8EB11C4114060FAD5D2A483EFA78F72F3AF83A22
333593A449E15701C778C5D004744F043FAB21D036E1017B60DB4C6E3ACCB243
FE9374F4B30C1A770195485E6B1D3E4830ABCB80D8FA6CC4AC85EFC2D28CFBA2
CA28A13B812424BA4402FD140BBE8806C33FE8FDA8E6703D5C9A2EA5B1E4860E
9DDEDA522704C5A927FC4F091B5900B9BC08B02AD6405D778C1749C31756BF9B
F02D5C797218E4A3284605BDD0F5D0E3024F40456A65D9D5472EA4AB02F0D34C
0B2BC6AC92B769213ACFDE70EA659682F45187EAAD570494103D598F013EA141
1EF3726309D198B7D05743D17711B8E138E42C9E9B2D346DA8E6EAF582DD36C1
D29166CDC5A658EE2DDDDF061E63B1BA2716124F6D3AC184BDB890A0DD4D7C62
B15DC40A9F810CB98D32B706A177AC31603F49A26F9E5F210DF60D4C22BE50AA
44C469EADEE3FE6E519F3DF7A42DCA87A9000DD5DAFFE353929EE3344130879F
2032497585DD01A6AB0D63050DAFEF2B2B970EA384CB6EA25D04E27AD6D30909
01719F072158DF40AA7C78D128AF38AD368ED4F736708280E7BC03A0FAFA64A7
C5FED819BEB1A91743CA1C9E6512F0FA82155AE155E6E458B4995D760C77B167
14C321E6E225B5250B8DC675AE6D23B7C82A5D1CE3C5DCF36ADC1931FD14E4A3
933805DAFBBD58C272D6208492E7A448B9AC27A37B81A7C0A7618327CF034A9C
96B52C7C69EDE11B274909FE3B79D5E020790534D6B52A4C6EE60DA2A9CE7073
E023A480EF8863FFA943948FFA7E16597B55FF86834F5C97E0891F9695060A31
89700AD11B06A9B43333BFD29109081403D96CD219C780181F8034395A1BA59B
325E5240139298877221F88A95C3B351AF4F7F6A0DCE2B0774EC139112727891
3456C5F3CE6C9CF23CBD507627DA646C979B95C08D758FF6E6B13FC009410C40
AF15C299D106B4762957F9AAB35FA5C74AAE3A3C08417119CF95677FA160B0B5
4B3C331CC8DF3D047F8C04BFBE22B7BB19B27498D264E5A199EC2ECD29C06D1C
6C4892250269E6CDA2C46A1574A39B61A5EBD0D519ADA58003995587F49909A6
399C1AC4D093AE96F31557A70C4542276BF29DC7C9DD280AE72E332B074E6DCE
1DA35C76424D7622840105B28113B5B51E066A91B8D7347DA871E7A52A069B0D
6D365206D43C86F4FA49723381B62D0FCD262677E3328017107CA00D0752C1E9
A19C49904081F0E8F9D7DA279097919A2254314FCF21D618A11C8FE5D40C0CDD
3716B714C94D0F9376E878ED733E90EF3EE62673FC1B354D93546A29395A5BE6
6101EC0A83496AF08772E3A0080CF4DFCACEE5513EAF3E903BAB38790E872974
1C15EBF54C4625875B72920956E2CA57CEFF63AA97377436395A3CC04D886FE8
0B0E447A91BFAE343170BB2E7CA8EC5A25E732C79C2AE5F3261266942D6FB60B
927644E9F7779AE1BAF3B8AA4BA26DC69F2A2446FE9687C6122F18ABCC0D24CC
7CCF80E57B87137DC95F002EE3DD35101D1DD0131C46E14DC4AA757196F84046
57430F1CEC5378DB3CCCC501550E3ACB7E4F31F88A4B4CC91386C4A6096CE3AB
0AC6745916FA18BB8FC92916419F76ECD4DC9D1D8E6CE20157EEF9F11D9AFE30
0853D10D3182F5726157123FEBE6D71C9542ECA2862DD8797666719E4F49F79A
A169C792898142A856E41F5E18106932087FF4370D1C25711478FD4AC8E03BE4
A2829D2E33F96CD42386C234A9447B82BD519B639D87A4B8D0506B959EB1924B
D4198FA0051E364D03B20E1E0ABFFBD3B6C69E17A074031B8EC4BFCCC16DC273
D4A0190EEAB7026226603DA37D8D9291E25AF279829F8D47B16A8D8C6ED56E08
10AE5994B981AE7B6F030E18F7DDF584AC60242A4A4EEEC6955407F7993C2377
B237D578107712792333087E98A8C64083C6E51F0E0BF508297839A84AD35C19
48FDAF5135B23328CC9CEAC2D7BF32B597CB5CEF31255442BF04AD5B8F08A115
B24EE66E1D478AA9DD9EE23415073D9ECE4E68732662EDD17BB9E76C94149A3F
1E42FEF77EB3CFFF3022D1FFC91F9CCC28753AB1207E3D42D770829E6F950670
6434FFEF6D6EE24BB3983C3738E3CEE8170E3EAA118610FC5A8BB9DE10073F81
20490BC325B1E2FC8491C1C996E079048596734F0904DF5280531C93F0F9BDFE
65C53A66FAAD8EF6D6DD77674A3480CBFA62794496BF393110A51A8AB48CEFB8
5094854BD5A9FD967B5248BB9A0F8469BF8ABB73228AB47F0553A63027049B65
22EB1E1AB3744E7272B884E70302F513CD902CCAF2704058DEB846AA69DA6D8D
66C632B5718352E4CE45F0DE522289AAAE11CEFFB301E58DC97F2FFCD4DEF3DC
9CA9ED578F76CFCCA3C746EAF4041F572B49FD9A6E64863AA8A231AA987DAEBC
0C57E6CAD3A619EAFBC59BF0404A36DB4A079CF92AFED25998FA67C8A3B8DC37
E7C7C0CA4DB5C3993FE8C1C4A90327065F9A7CA11134812A55A8E3C9062E52A6
DC77BA1872B603C41D1CB81B1367939AF0BFF66F35F6816A95BB8C6409910B44
ABE68C2A018FAA8C57D30B7F86BA9A04184604B37A1800BA18A9437C91EF10F1
9C2DCDEE1EDDB0B6F449AE81BB4191F5A5700F9070E60CA384045DC239D4F588
DCC82E490A7E7D1DA3C64540A2F496D11AFCC60486B2EA25AAD168DC1FB54BED
D4AB856B9CBC75EE6DE463472EED7539873F934C88858F2682DB93E1526B66BC
38B0CC96E79E03297F35D5FA5C9B2D9784067E7EC896471574DD4546756FF8D7
1FA8C3E86D0C4D421E4768793B173D6AEF2574AD670BC807F381129DEDB9A655
EEB6AD6EF313F2B572D24F5D87C58CF662519CA46A188906CA1BC9CE8BD9A037
F70ACD0BCE3565B35548B0DE86B0CE938A5EC6C3E097387949F6B314BC345FA9
A8A658ECE9E355799F07F37EE23305DA6F63EC5259AA59872E6BBCE47B48FAD7
25F0C1BB1C6BFE84368AA2FE9B7BE781517E892ED6175059391CF2D91FEF86E9
85E511D69656EAF29B758DDA55A200E8E88C1B796178303BFED270FDE42F4C08
CC310DE480319E73EB4DE79F4304BA9222F9A10F47A67CC274F09B84A0EBB69D
6A3ECB57BB1FA6B6D4B04E5AFE3E6104E4F25B06BFF4CB772E3D45B831E5F141
8ECEF24A20923F231C4AA8EC6D617FBF62F3C85CFF6FFD206D7CD92EF9284097
66426767E0327315690B98736165BEEDDA2248741C90E199EF7D47B1E8CBD4EF
46F7C37AC5744F1E4B621119873534499F2B986290B2526670113D5EE7B15C46
4F8CB815F4D0A77A74912C51BB2082527F0FD3C614DB94B41EB70093103C0CAE
4A564CAFCF15062C9EA70F90FB89A1208A522206ADCF9E627826E8A7178BAA35
9AF13790AC1D90D2C3B6552F3B31F7B599F8FBE554BD27786B87971F6A650C0A
1EA84ED6BDF80E19C476EA95111E9CABA73BCF72DE9929EBFC18A0F1E6BC1670
539FF79822A88DBCB2901C65256DBCD4CB439848158956E897B3CE03D8AAD5EE
DC862FAD02110E461071F147A4188C0BDE254F180FC419EE60E3D95D58640A7C
DBD7F50AE27DFFD0E354CB55B509BE3C7F2DBB918F7914BB2FDAB949B7972491
2E9179459895B9D4552AB99D119CB560C7C07EAB3354CB3016B277BE9F492E4D
135669294F74B115FB006E3177A410CC05FB3D626BFC07951552E85F2E149475
55CB93A122B11D09536A57E6CF30F3F698FD203C7039AA4723E68C5344816CD5
9F01F603F5027F70358BBC59F6AA441F796CC900EB5074139871C292AEA01F5F
B2BE829658AF2757EF46F97CB3E656DA612AAAC48FCEEABEAC45641D8D049272
0D6CE75AA9C1A46F943F662FD352B76B724D32850236BBBE3E38EF2397BAF757
1878FC1049CBBE7ED45C1D685F595CADE6F1EDAF2C91A86FB24BFC9A8CC0A016
1CE7D8132365E46272C69CFD4A02E8558D4FF6DB589D8D519F6D5D4D4EF18691
86C4BFA43D260971690161B10687EB166FC39AFC13CC2F9E028E7A9156C41C1C
BE4F1C9389604A15B1304AD0C1458D596E212FE0A67A7DD6BF5D7295556422D1
1C4025F95FD10F7539EC5FBB38AD6B9A54234FE3D9EFC713E69CD91E50C52884
22D3B512B5A594769C8D8B5C89479548766B85DF83D91FED01988026A1961A09
E1D1D041729CBBB6FF656757BF5C73E93804F1006F78C8FB2491AF97FDC58056
B0B43EE2F043EAF7CE690F7BD22F9863BEDEDDB07E42107770EEEF1252E109E7
C259C0B6FD84B209301A22A6CE827B92651A7254C7BAD2156CDA89A023B05D7D
AC3D7EC0A983FA094D5D71A3B162C73240AD494F73CF066C2B9C5D6ACD69747E
F6C794E81D2F03FB7FFEEF612A6DAE105F1E1C12B0E6175158966EDB39D22F40
B732604DBF79C6730EE3FEAC8C955D13374B68132A3057FD3AC9D23F054DD247
D40D983FB06A7F5B14F4A53112A87B15A0FF1F8D64C1FA5DF3FDF2F97A7DA204
E0A195042DBD31CF0BCDA3A4D9BAA1CE13ED916C1BFC3F6C19DF8F5F53A2B60A
D2CA6D79BE140FA0DAF38F27A90EBFC7239216B786C4082EC9B3CDB57D772A84
C84E8D8B65D859822DE47F3F91C85C41BA9D6FB2594150BECD1F680B28DF4C53
E07B45683DF91409D63E90AEA82769C92B7DAD33570E298A784232D378DC48C1
64E5B0440844F8F48066129F788E3834A8EC8A509960E04B7C43FF5E79D094C4
4CCB3B4F9943F2AC30E5929AE583F28E808CACC7DA897DA4A23DF6C7A54A9787
AA1EAEA60196540E06B136349C764C3B4306D0A5E19C24D36C7B4A1DFC605E04
1A36B6D0BAA768DFFCB9446D1B0CDF380CA1D32FFF16CBDBB6CDD6E6FB23C7AF
D5F98CC3978FB4825A6E1CDD0839CAE782B59F3C4CF0100006871F0A9607FAC2
45DC1F11C9A925DD73C4C95C655645DDEE598D915ABFFCB13E6C36B0442FED09
CD358E7EB05B2A2A87C20C1E44BC06AADB6B404C6EEF1F6E50BC5D0A5C88B1AA
81ACA57D41A106681D0AC2E192BADB44ED087476FB52A1D3B9D2A937045BC988
10F43B98668A0361232C9D6C6872A1CC227B22DDB84508A1F9D3B955C7D34761
5ADB8DCE5E6651628C15C047C96614469EE8DF618C769B921DECE01F6773B24D
80B55AAA0CDA3E953E7078ABFCF8E3D9EB711F866D08301AAA8B6E782C91C6FA
36A2A75F1222C3773F8141A0708ED0B84110BE148C59F74EC1F227007AEE08A3
5DB1DC07309BC6CD34F1EFE837F67DCD073283664AEFE0C59EDA9F23E7AEFEA0
D7901768A70319A777E584A30E95194C3EF96B445EB21BEF9F984B9409E4B98F
7EDC0EFDB85B12E2ACA8205CED7A9D105349E1F2E70BD2B4F3F1674E7F4B76E1
83449A9CCBE9934901650829CE219B8BF092C11361A1FC3C8E0AE9BEF00A1DBE
D90C99B3B099F93831E8FA2A180D10D1980BF44BBFD4A2955779F633A59BD27E
477F023E4F4A98161891F48898B6EF57154DEEFEF68A9AD76A57B42BEF17D9D7
D3BBAA7BCC1FC72B5BB9296F5B87540FF74CE4714EF68A62634D39CBBE05C3E1
4616874AD27F53BDB53EE73F726D0DF74135D52C44E1A55805A8E0745251B19F
BA354F4969574DE9C86B4F4487B705CF04965063824BEA0BF32DDB53C50C022C
15C6BF57A97EEB2EF79D28B060DC438F5C01E55574D6751EC4D5755343D7C749
157D59CCD8E4C782E5B216E313604AEA44168759C294FBEFA10308773F151043
E9DB356CD66E743C27358D281D7663529DD3A63A93B038FC43CA4F59B3F3CF68
42D6A9C42540E93F5F673F946563AEBD54DBFC4FCD2F7BF079E4557A47725497
C6185833DBA83382D517EEA92D7291EB4BAC97ECFC11B62612EE45BDB143D140
DC3C7946E35DEE7FF15C01B65742618F243AC8439A37411A466AF6EAFD3B20C9
F83D063B4B3ECE024BC844D9EB4D03AC0BEAAE9B66D114C0805DBA7E5A4CA90F
8D350952B9CBAF8CBAE6EFAAF74AD13F098C262FBD350E61320B23C4C8DFFA37
ED13C8B6D56D68E6B5A0F91C5601A980C44D805A6B614361731012E0C94EDF59
9D25596DF7735DD28645C046BAE3782D45299D659144AFEF2C9894677BF08A34
C9E564AAE8A96BA015656871D2E3FF37333B61A645A681C239663488232FE43B
6F7318B431CF9A17A230F36E69A377828724F3BF224766FCA40B671ED24C488E
46FA259AF1E57001F1A0AE55CE21CCB680BE850BC6E4337C79F7323007E726C6
D519928EEF76796C26CC2BF2A0AE9D70458D0F760A7F8DD434B78CE44026431D
BB179293D39A004F822474981BF52FC224B40F22747EB2A0A3A04D7CF9D2F0A2
366B5A5C9DE7F43FF60993FF31EEE7634C33BC7CAC1B42F4FF3A6220CDFD92F7
78F86B5CD53D7EB296A29F930E2EF8CB6658F33409A8D50974B8516723525C90
CAC27FF9894E4B0D12D9FBBD4B5AED34B99E6FDE07D4C10E9883380CCAA056F2
380CFA8B94DB80C95626C15C9949B5A6553D5D8CEB55B4BDBEEC9D16060A1828
2C2C6FFAA6A81493F176B819E1754AA0A0B7A9E7A240E94060E5A6B045D66CE3
ABE1CE5A9F1120E79B14EE90E3E76B3114B7F61868D23013243BD6880B10D7EB
CC635228132D06FB18494F7D4E1FA00E80D7CC48EDE33E20FD0238D4C1BE06C9
B6C45930A9CDF070D6E3A2080ED5B0E37058030AB68985C52789910C6BC03CD6
C7E02F6649F71E83A830962548C7DBCF967D14507005DAAE24AA0E850066B379
4C043AB6EB819D377588D5743F4197F28D3F733F141DFD3647184EC8D29EF512
04774304A73D1A16C406293DE7D1AD330CEF0220B2A391968C26A847736F9DEE
02D06634C416861AF555F5854E0D9ABEC4BD9786EE1E31B90859956444CDF051
28D13A825B4B69C672ECA5109BCC9E37419EA77D3B0870C3496D54AEA6FD604C
57DEE14D95504B733E97609F432D6A854805B7A6DD15DB18D0727678D188EBB8
422DE3A8EFE3985541083FE961B0448F581EDEC94861D72ABD2DF803CE77B0A1
038766CE19F21BB7FDFDBD6E0CAD35378408D3082AC9D361452BDB11CB873143
6D63434FE6E5B3B593F33F2A32AFB2FBD010F5333E911E805B2D511F96C0C362
5FA1770F4588DD6090630FD6B0EEAF5C10EC704A686F56126BCE34B1CE2C8A1A
CA3C965A51AEDE8C7B1A9F14C0E4E045C797568DD5D1F0C058215493B92B1BBE
43AC5B8CA3121C5FF47A954DBE912109796C1C7ED9DC293F577A83003BA15C54
E61D759187A730BD77D5AEE843617939A1F8E1568E4366D95E69B7A6F56EA3CC
5A964273E0DE7EAD1AFDC07FD3487D2D4451E658ECBE99AC150452EA124B7235
95CCBB47F74BDEBA9F8C17498583950C73E8FA0E74830E3010EF2C1C7D65B856
E54F299DD0F07693475816E6EEBBA862FD56302E2DC64A9802E03C5F8F979FDF
FD4DD48FEB19113FB1AD3B3E02A167622899A6CDA1B6BADFDC040B9414F01CA5
CEF501ADFD66E7B7DB0FC286620B8BEF8A5271650D826E55F9602B9B1015A62D
653BFDBDA5D8BA148291D195FB1B51B114B9AEF720F393CBB98FA03D23B35C31
CBB2FEA6992B3138E9F0748D3F6E86C7C4067B80C0863271E5E114A75342A9A6
E28B40B0E1A43F95F495E2DED766394E0001CB9B65DCA4711AA096C51A6204D1
FF16E60481D8D3019F8EA8AED71723859AF2F1E538BB4945EFCD912EA179B59C
8B9938D7AD3E5019D3CB46D3A904810C8A9614CC8E8F9C3DFDDAE07503422800
149E30BD9E74940CF2B937A58A9BB4E745A435640B93B2576D857FBE5428E10D
56116AC84FBA671CBF3B0262CE0FCACB727EBE8E2B80E77EC978C1EC2616219A
435172F43B5AEB8C5CCD73F70E47664DBA5C617BED8158AF330DA67877D79892
C866317893D9453079A16CCCEA01A1E624584EA2A9774296A1CA20D6E08FC6E4
685CB7625E2C4398A13C7B43B8ECC64D79A3BD5515395128ABBA31EE04F10F56
D208C87FF6810363EA39850381DE16843C789961BE77DF523864C13FB93FA25A
BB23C444F0866AF78C6A20247B49CE4109A3649DA94A36B20127BC815362A7F9
914075562B68CAB0500E0BA5E2A1803CF5D4CDFBF04580C93A43CA324D679835
F7EAE1FB61845F6B32179D32729F4A27B499E806F17FF8EE8D76769E88AE1EA8
73426F3D1BAF3FDB0BE3B0AC8C2DF16097B57E0A9A9ECC182714634E79816BF3
6668924A6F690F966A6E9E7452CC01752249E66259AF4F3188A4AAE84983F726
3325BB320CC3FCABA51D49EAB7ADDC8EDD290516B357656B2B7B73E4F886263D
413753B352014576858A26485AE88B16AEFE7E2970E0219080F8CEA24B463168
690645F707CC1876E5C90C4E6A9A146B49346E1C512E20ADBE201CBBEBB22400
F9C858B4651D528A130C4E48C34949D977BAE1FAA64C4D082F0A79DFFE7FDDEB
A4A001157DA007E5A5ED809475EF2DBAF469FDCF090FB17F6C021DCB13685E03
690E035A282E9F733D97A30E9B8CE16F978701859D3FEC30B959F7512A7D3408
466F63C549CE02CF4141D88F3442DEE47897F6A6AC9E9FFA2DB4113C1239D181
61584867D0BEED6622A410952CCEAE4EF9BEE159290B8421B2F57E7C596466A3
7AE1CDCEAB2EACA9146082B83EC2EFD858B8488A7490DCF75353BF0CB3E744EB
B6EE5132C8EB6FA00779AD420BF4BB30C6931865A99E27E030557D0037042621
C0668526BAB08296639CB486ADC40750B3DF7253204CAFD2302F3A63C0103B5A
7FA020F748489B0D7E766623F07E2A7DE69712A003DCDEB16CBA4B082979AB18
F66D9FC3A748D3AACA66D8AA8E684428298C4327BB503D7002E26A6873481B31
DFE3274F87825A55A3C2E7D426966EC1D2488D77A8C397A28A1425D2A04A34E3
C882CF7F6FAAFA2DE0DBE2D0D6074418973087F8C5A2F438DD78B1F0294C4246
881AACBF67AFE10E3AE010CCBD6DD1638F85AC875BE6005F975FF83EBC9B1B69
2AE639AABAC6789C31B47587BD3B6D7B6047980F16384ECFD9F8009D89186EF6
AC39604476551D975C48A44CCC3E730C6C24DF6EFB4394D9A1AD0A8E7C5AEE74
E7A6992C5DEEF6098B54FF965017BC6F5B76EF548F7F7E5E19F57EB8F1582221
3C34F999D3714FA0C499C45A6B6EAFC22B82FDF03861725E383E4A06E3A07D55
EFBF825F3CAD0A66C8DC76B588FB0D62CA90CDF9564D4EBC6D56E1C2B9945BBE
5A56650445C9025ACDF38EF97854EE930225906127EBBE72F81320A14A76BBD6
FAC83BB477E4DC7ED45AF2A7E885A3E7F478D8885FEA8F23D82F1E46BC882810
994621606851D2680227F360862031C3B3D8190B06B28567F39203E5E0BF1D09
24670E496763F63388089EC1409F743CB4B405A839B527CEB7CC36B5F2A08764
5C3576DF2984E2A87C86EC469B68F4A80550952B0B0C41C86D963EE24A93E2C9
B4CE7A425647B261A65AD34020D021ECCF8D00681B736CA7E3B0BFB4E6186E3F
772EA149A09B8EAD8274452AE1D6B7D47369EDA244982518A34C4385ECEF2BD5
7503E2D8850A12B57CCCB283E1473CD3BCCF435AA6701C540D7A5A898E7AEFAA
0D08C6C892516FE9C2443EBC0B4A591E8427979948E75AF05FC9C618E2321D6A
A24819DB36F1063AAB208177250F22AF96B479202EDEF768A6F8174312AC2F73
382D219CFA82FBEB38D5CB230649E0868D1F6069DEC4D959D77B500A8E3DBC16
AF85602FD55B8C2992A3DAF6FA94B4ED92438A8FC1AFF726ECF5D66E69D68A51
40DEB9887209C1AAC17AA455684D328E4545E4FAA796F065419FA6AEC9D63A16
C49C07BEDA6A23D51B92E1CFCF37159E237994F92D3436634B1DCDE87E28D602
3FFC927D506AD177247F0F2A471E125FF1C321DA15CE326C9EED285EFD226726
44886C77BF24B293A82225A0E2F210DC384FA02CA5DA6F0E419B35B8616E5F08
4C94FC6DAAFF8ABC9D3B36B660FFE2ADD4F487466B45CE9EABA7100E95A40406
EE3464D22CB8D0891A2C4F7A4BC18B57A8A2DBD26418F590C47D889E3809BD1B
A16AACF4E9825850AB117E3C1709CBEB1DEF48AFC9323B8072E04ACDEF46A945
BEE1C90538642BBC486826FEC61270D0106C1C61EAAADD4929538F0605851AA6
3FB1CEB076A021F092A0914A83BE484E2E3C1139660B233626527C997F935BD8
78EBA338C6AABB39E9415E3D6B59007FC262EA7480C46D3BDC3ACBABAC7A0BF3
6FCCA875C59168449FF0CE1631BB548B6F03EAA35C511930DF0241FF1AAAA43E
8A575FA428981D6312678EFA10BEF27FF229F55CF845AEBD8BD649856CE4DA02
B604399A8E25E959A7F1CA4FC12969F517DD206E34DEFCEF557AA42F8FD291E4
C312BCE02843BF1D9F54D06FA2F6B4DF34233D0713A64F9471739A161306BC40
981C4F33163880CCBFDEAB549872DA346524FB14847A87640759B4414FC084BD
DA3CE86430090FE5327BDBE8B2C1F9A072AB26EA5B1BDC9AD9DF4202E2B8A44E
0FA73E31CE5F188F62FABBF8F4E1D3F6B73BC9F5E09558D3C1946A83D4E4C6A0
F5FE3ACF8656433AEDFE4D6D5D71C4E7C6F32651B90F1482D776B432B6F7A038
89F075B14AAB7F3FEB4A9C9F843C969B7EE0A1521608738CD643F97B72EF8CFE
448715A17F09CFA800BC068B04764376188B233D7AFC00970CBBC1B4883733E9
E75EB52E70FFDA66751D39339C87762BA9A636BAFD7B775E2C8EA93E338C3BCF
42D72BB2A3EADA7C79996954F36C5C09A995DFCE817EB1D9E01B74866747ED2F
B4C7DDC844363C1D7CB5D8FEE73C69CCCF39F6B3E0DD578DBBC0F7D449A69DAE
4F9ABED69AD6D949E7C5FFB37D13D9B349FF0BF8CD525542BBCFB7862C47BC48
07C74CE6694B7C27FC49EA4D25283506EE86728BCF0EB306BAECD6D61F6F53BD
843F766724EB5B87684650F7776DC6D78133EA1EA57674AA8DE3B033E16B4C09
26EF1E3D9DB26743AA00DE9126FDE231DE8ECAB6ADA5D79304D0A5A461A143B2
5A417A7DC79C7F8DC94BBF6281DB9FC1FC9C0FB8093C32FD2FABD47C81117713
3A25AE3BF255D206CEFD6C1AE11162B91FFB953C72DABD26CB85E17090A97C59
11741F3FBF04B57E0BD583728FADE07304D2CAFA04052F9541FDF845B6BE5E2D
7E3F3449D166B892B85E14A939D2A29F7F033767CB7268B848CA55AC5F599BA3
1D75BEEE8084EF7CDD2FF9614D7983AFF2D45661D8898566CD2F4093B1B73831
29D960CE967FD61F280644DFB1DDC41E26F8F5637CE864629121B6D2FAEF83EE
FD25DE18ADFE899E4DEAFC68B7B722D2ADD1BDE4B752FFFC3123D8D82BA53777
B604CB4FE1C4F7A53B4605D2D5F8E39585DEC0D7AF72CDB82296B9CA21603BE5
F30A27E578A3A727997429463A7FA217716FE2B09058D8C28C4E3FEB821B77F5
1E22525C5E4E97EB113DD2466AB11572E3A07C7E1ACE1E5EB96B98BEFC4B5C11
C6310CA5D9D2AD7293ED80FF9023144D99A71EDB69F4128026F6C3CEE3767D2C
5D440DA665D7A999525085FEC1D8CBCE5FFEE90CADD6D285A03D27D55F7429F6
0E7A94DC2B00D2D69B635259F0955E3DAFB376F3337D6C313BDA6F6FB429D6CC
E8CEF19CC23D2E1AAE1828B1E922597CC8F8FD26DA2653CD065FFC102B81EB47
5567EEDCD1B0A88BF558075DA4C70DA2309465ACBFE353DC7BE5711520B7A166
A0435C6B8C4D792412639580298A44818A80E6A7749A8D997FAA468741739178
5FEA61B02FFE9D9448575726AA6373CCD8B4458F39AFAD4F03919F7D8F69C95D
64B86B065E4E2B5885CDD80D035A38FE04B8F55E6C9B98F2C4C3B4E495563CF6
552B07ABDF68684F86351F78B6A77E6D941AAF57124048B9E85484C9FD3DC05F
06D520B70333D62212F8D9630F8CF6A7E391E1526B66BC38B0CC96D4B40F2B25
DE8DF1516A6659E56A3E1D141B908E067EA61E32555F247388E4D0EEB99CB894
BEAEA59F6E87726CFC1E7AE22849F6B2DA527C9831DEC9551DDF8FD6380E81E3
7CC32D0F50C8749676B91FE0E2D77A1C11D525D7F8C129D1EA54A2642FB25204
220371A678717978D5CC698ACD5A9B3E27B0B38AF1DC5A38A940ECB4E6ABD532
ADEBA078B9EAB7BA24A8294C452AB7C2A6B5C7030468356F6079C5992E25993D
4C6D4CA954E48F68C93F269E4FD565F839FC80962913685B49718875A21ADF7D
A1D1015D980FAC69FF4A10C2A56233107CCBE59817DF118B1EB1F84899BAE943
288B44A7331213AE8B600E9FC07E1B00F84C9274680E8EC0CA9D064163DB8B13
AFEE208FC8314F00FFF86C71CFFD16FC17C85A25B02A1D3B7C1BFCD63226E00F
0CA2C69E2EA7CADBF8EB83B9634ACF8973EAED80F22801939759298583540B11
9C6E64181A7ACA3E7ACD0B98ECEEA3D878ADBAC5A57D4BAB2CDC18127F528EBE
A8F76DE81DCD195FB48BF9A8079160A997094C9A64EC0EE74D059CA5AE23878C
F415068A55FF27718EE5B4CA5F5CE9333BF4150E163492EF61C0B736A545E8E9
6604E64A67C4D4102D4E5332DDEBC83B6E32EF6D2595B46E93483B35288221B0
09EF04A6EE710DD1043CB4837A5B354E4A8B50ACFDA27E859621867FDA346D8A
B828611BAFA612CFA855ABA2649B374102BEC2C049A1351F793FBD2C98BCE1AA
8605078135EC6EC9E847FE8DF29BFAB91A0212657C5BDE18EE50C4E6D09831D9
678333F7BA32632F1590497B174328A26F9F5A6EB4AB4696B80568BEAEE19E6C
8B72D93B34A19E858D80BED004E50151C166892AA29AC730E19629DB7A852157
2058C5F99573D876F39EE91A7C1259A4766052F7EBC5B60C44F39E86860A2BF0
57C2ACA62FCC61B7C73F61E47707435D6FE9E5F52DB2153368280EDD9C8CE9F8
F67267B452132C04884D11B5E5D0A6D33002C4040D674101BDB9B509BD60E358
845D3083C75DA2EEE5F9F3A32A20DB2B61D3FCFCE3634B8BABDBA6372A6616B8
26829A8684B26CB90F17B1FAEDFE4E36E4E57211943850E3F53D9BEAAB554FAE
C511DAD0B250FBA7964FF229432D1ED85644FF38A80F1A039A9D9155D080C3F5
9C68C2781D9440DE616E86765857DB60F81468A4736C11C6B56E58871DE2B400
63DFEDF8DFF667C136CBF102449566E6A132DC8C441496B824E83944DFF505E2
5AC7C19662680EC066319191D8B17F9682731BAFB803B797422D26871A359D68
D295B8C29352C566B6E83BB041F0A33BA7E4621332AEE2D1E938B34AF54984A7
D32E3B1EB2D1E1B7F8F8FD76A28801761DD24789BE12BAFECEA3F750E6EDF0EB
58CACB80A31243B05BEEDEC8F0BA6DD8E0BEF4EE8D49BD11076EE05517B644D4
A2C41A464DD1D34BAF55F6698FBD5BB26CE1D503FD597F2B8695C8940006FFD5
D85B4A45EA39D0EDD18BB04A26CAC400CF91F17A70FF27A3B12E145AAFC22584
5B23BB944FC8B3BFA5B54DA1CA168170C1CF80E0B2B07B4273C793472011B1F7
AEAAC3B3A5CC1C97954119AE5C10EF747A2B53102181365EBB5C6F31E57D50D4
8FA8C34D721FBAB5961A1069F8F6D6BC886484AE7A85E2CFC9A9E2FB13814668
E29A72FD14D90F45CF46F89951AD470229E4FDE77BF08598B0DF87DF883F9E10
EE1CFC643BC8BEEB29CB906E045F726901D2C0079C624E572051D4D4D4761E78
EDBD576B24B686E627A3805378009D09C2DB715B498246229D0A2DC96EF1FCA2
1D501A60C903C0AA28DEF7C5C12300A0A6DCE24D9918C8DACDCE9618DAEBF974
23DF0160EB561D541BAFA8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusRomNo9L-ReguItal
%!PS-AdobeFont-1.0: NimbusRomNo9L-ReguItal 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Regular Italic) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Regular) readonly def
/ItalicAngle -15.5 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-ReguItal def
/PaintType 0 def
/WMode 0 def
/FontBBox {-169 -270 1010 924} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E134D4CB5ABCED39AC635
DA001E9934C198A7F9B9ED0028A85E9AE00421DFD8EAA3BB3B4B4CE45D209303
237BD51809FE4D880900B1EEB236ACA87B9FF6EBE6B994A60AF5D67CCC42BD56
77295C346EB4C62BDC1EF22EE07DAAD928DFB73455F091F32408ED6430B97417
683AF27A03718A156E3F6E7B6E4F2E8177503CD82DDBF4557A3CCFF4C858AE7A
F7EFED6CC521A28342436B953E4650B5792BE85EA2F989EB6D986905A61FA38B
96E1BBC830B74469150FB0B598A794FD80D10870084A877273A9502C3456E5EF
74350E6E3BE5863E8BA185EB59FB87B36566AF71200B6ED389D1287D4E925E33
B2383ED05D87D48586E698FBC5D562ED9D8A09EC3EAA1B1F300224AF20C23F26
A2EADC74562571DA84B3914D1D80B127C6FF4706C7046BBB372A0013E0AB94F0
C27946583871D272BF4F20FA84E89D745DE7BBA885CC09BA72E0F530ED4EF7D1
864B3C67007ED98800284235372F0A70C912E21E851AFBF812165B8DF912CD1A
013E271F0B347967876C68AE4C4107EF8AD1F170916210034C66394A9D971B68
FBFC1131E37FC178EB97C1B2A0F573ADD9D7C0BF944E6529734DF8A7EF54485B
A3375CC30E9E328943733CBD352BC15B06C85BFB4A96994291C72A0EAE84FB01
0F1B24D0125FB8C16D60561DF8BB7AA7DDFE9549AFB70C1E89424214609FDE41
9A142892E30F02754FD234CEB3C59A2A04C06BAB7AE40E8FDEC50559B8347684
391C750987802D5452C47C1E0B5F222DE9A0EEAFEE19D796FF375A1E1EF0AEED
1BCAC4F485FCAEE18AEC585D1A9D80F41871DDA45FEF1EAE82C5893118987BEB
4D9E345C27C7419FE65E4853B40537D822E34FF1E0BD2819D21EF607981259E8
9F1040A2D708D7463858AA5381759AC49DF4DDDEB209A278FE60BD2508ACA0F4
6A249A05B652E4C7BF1B676943CDC463BC49115864B5B5A6569C59D057CF2A8C
FD282B79BC3FA1308A61476AFF58D91BFD63D1BABC326C4FB78A42CA08478425
E8038116DCD68406DCCA2F5A85858019428DC1DA7A7F42131319C2B08B6B93C3
64413BF65B6D8554C69AF4C1D98BA42AA91660B2AE57BAD964F6AE9BD13DC93F
44DC05BF90F7E1C05C954ACAC42A93DCAB215675B1C7894E2A0D724B606E9DA8
F016953104BF247B66A7BB05C64AD7636D951338BD379956280919E1F6CCAE67
34BEAB789A232E1082DEA0383E98A6F55D8C71CEA9D1554E7A796586577CFA8E
0A1567CA0F3C0A445EC1752A47E705F4EEA6268E2323E3C3369D97355E3B32C3
3CCB9F39E828B8B8317E4E50F94EFED6873046F14E850D30BCFD2B6A49A29126
CABDEB8551410ABFC1BAD9D79E03CAE74D67249247577F67F6E02B76C71D6809
A3ADEC3800693DF0FC7EFEBB1BFA166A088B8F232012896F122727523E1AD51E
E1D8B35EC2E6B2BB0314FD0E2835FB97FF4BC59F9E64756B4B5F2119B20D5BCF
AB27289A93B316981EAC33605FFF98C7D011DAF6ED1AE0ECE6A43A7A29E27903
3C4AAC3E18B02E195E87257DEB8A1F6489CA0115898F910F38FD25CE03F740C9
69FCD8FC6085A66D841ADED0348EF0A843D0F05CE3F579148DC11183ADE03A18
83B216F1DA8BD7F20B32D5A200D311AD5B70D8D7A6DF940E23FDF870E2858CDB
C2A33039814B0C5363F0ADB027A201E35FB4C9C631CF85C30F422B9F568B9ED2
25D9D69B6581864E351CA800EF635224885516C2A291A8A4132F4D2503B8C48A
50FA52CA3C85E11C1DC9E4C2143267370E240E581EEEDD6C8F062E85A8523B5B
3511CB2A4472AD2F31CC926B1958BEAB365EBCFD4E115498E2DC2DF2B4188BB2
9A5658D4C194A0990EBA589A7478D96BF1C37B5E81CC928D77CA54740EEA5E26
E4651F258EAE949DFF86E8DB2DF54D851AA72052511AF53DAF63F92AFED25998
FA67CBDFFD53A6555556089ADAB4DAF9B826BC53D97B40BBC5557A6F90A3CD9F
B434F4D12484E03E14C9CDDBF4F765FD970E1F82C2659A38F8F63251495D697C
3F327951AA40567B7814B47E0942C7C29DAE116017F2944C5B3896F2C6874D6C
2DFCD61239687859229DB42614A5B98A7D3FA3AF2B684E14ECA5F1D8CC2228A4
535D50E634A34B39B207AB9E19F1D0F9A3D164199AE3990B883C694F45EB4010
6D9D0A74457681B33AE82D43F91CDCC088B7CBB56A58F75537F5DB3EDA34C00A
7587453EF62C1B76C54A55CB06C9FB6DA682A0E8AA89D8DA7D5E73D4963BCEE4
E9CC30DF643409D204B4268CB85949955094B5DB7E151039696AFE751074A4F1
B42E4A51858735F35E232AEA286E5C67C0B1A1E97CA83241B091503FE2B00E5F
7579AEF49A3D4F22DDAF5EE41814285EDEC18B272C7113B1118FD1A2803784CC
B5E4C8DFEC0195E99B6E47CBE1D39D1688196552256E113EBA77A94CC74507B8
4868330F7D9D1CAA950F8A1F66D4720DDBEDC0E0857B057D019BB4C214C50AA3
FECF8A05B094AF75E2869314AA2F33B098683FC2E8D8E14D1017DC8428791C90
0E377B7845994F9B4238067509B89C71E9B881551E150BAE5EAA9E286AD172CF
9DD1B8DC9E23D1751721FA293BE262D47368244A2EBBB9310ACA9EF05193524C
4E85AAA0DF5604D7FC78F584294508A53A987160E858F76C4FCC9C8A286C4E76
A6B2EAEDFE2FDB17FF267D0F21C3590DACA10EF2A46B53BE1C1A79DBAC9CB39A
6BC253A90835725506113918E5F29C3C662800E45BF5E62E68BF117158A4FBAC
084708A6D5BAD32AE7178C9A6EA49B0C46BAEABE84B14ECB5C44029F31424206
734017DB130C7894555961414D80FD52A501F5170916FE8C8B654027C87D72F2
7B03AF9566A50E5580E6A912C1995C4F268AE31BCC4F45CCAB4A4D2E9F3EFB65
68E42CE70C176511C790E8F34D522715A6B6AF9510BF7F6212C66D3B8A090120
6EBA17B752C8438DA7B9389683F83B9100ABC2483CD15889A210E09E2544919B
7F958878004EEC9FD62817F1E5E6CC4198205FD27C54C27B527F459F4F73095F
E6C2124BF6CC8601D236C9F09FD545FD265A311E9F99EBBC64F64F12CABEB79F
7DB0D4B406656B8B8F77390D2C6596D68B8EFCD41B61C3CE96A14F061C733CC4
C85A1DE3EB175FA989640E9B1DA9A6A004834A23BAB91561D07F3A76887915A5
D26105B85F6BB781408C91BCDB000B386472F480A08459D6E042863D685255A2
3A4BA8B1CF42C9D4FD2A2EE813B63D66396F8A1AE9DF20F80F922DADA3728C9E
3E0893C478B3F7443D9A332101D29645E34FC40DE4F2C1AB3B8A063D0C75AEF4
964668AF246E4BE2349868E7722DAF5AC823DF21A5EEBA2F53EC562808CB0D98
FC87B893D2B604D77A609B503C416378E81CF88EF1B4ABF193F6F0F901537ABE
3F131E19A9C0B0BB98EAD3B5ADABB830C68513A5DFAAB3A79BF8F1E840D5695D
70DC4C97884A824855D271FD0D4616E8BE9BA7E7041A0DBA006FD9963174FF86
3C057C202CAD95C87793D5F78FF22EDE240535D6E3DE8897FCF8347448BE6E53
709C51019EB4FED063631C6AC0FD4F6B67255DF8BE27D7D83589632EEF618E6E
8FC46751A5689967512AC84C42DFB2D9C47204DC6546A1D3B7C6EBE87F52DF66
04706FCAD31A30036E5273CF77DB7551ED76B595C1196354909804319F1E3560
3ED0D7D893D279F20F49DC077635FB7B4127AF4FB8CBAD62D9F9637C90DBED77
EE1320DE8512F9A6A7431DF5AF880413AE6D09938EB5829383672590BD7BAD05
108F254C68873020DCE8EDE7ED92FE5BEF69C07D20F723DA8F077AD1F27EA249
348302285906960DF734AFFD735A58E8F2C4F71816D94C8E440572B6217EECD9
5A3143BFB2F52D38C060E2CA02D6068BC51D025719B1FDED382B03C8A9DB1BE3
E134850FD4A28421223604BEED52C7E8066F72336BBD4AF203A1F841F620ECE2
14B27F0AAD54AF12485A083867D66E714BA3410F62DB82342DE145B2240B2852
2C365F76B9A88728A311B4CE3990D640FCC121BDE3085674C6048345CCD18108
EAB153DC42BDFFF1A5DF553823BD04EAC244CAD6FEA22522EC18F41F738AC7FD
3ABD6EC50BFA7ED45DC6842091EB36923F31341B9DF942E732F5332C616238CD
44B644EA7EFCB02B512A970E75328A677A7DCEFD846AF233C3C2792A42338D89
2C8E1C2DAB56438F1E8E97108015B8187CA6C46B291E02081BB5652A867F8DBF
928B644276D106E370C9F20A160173B95A0509E78A1B06587ED0BFCD31833B1E
ECAF947E67DBA702CB457FCD38003882A66A4CF8D7B1E2803CCFC1C9FAB55DBC
8C1F90FF30BDC97107DD0F2BE9148FD403D43AA515E869D196B6D0B8B8AF6825
E252BFAF0D5B63789DAFD2048CEC24861DDBB8DB69386D274AE08FAC40317060
CB54C640DCDD7CE47338B92353B26F0CD9940DB8FF54513822A586932D1B1219
BE525A61FFE4E15C0097F2232963F743EA94C249D28C16CAF04762A30002E932
5FD23F5E98F82DE74998BAC5C9FE00BF8F7CD242F34F4F47FAC184362866F8B5
34249B0DC2944E5D783537D2B57CEFE23ABACEC756F5D1EA5DA924A48442CBA4
CC50F8131D57840E71A49187CA91A138070D638C31423D3285BC22340A3AA3A2
8E38ED00FC5C77003D7D6D883D119EBC56794F1BC72C67D8D80B90365CD2332F
E51CF618CE52C0DD4C8934F9F9043F14268CAFBD8ED1783402A06CF5ECCEE0AF
7CC4E8B440E93A51F5B6257A82708B4F4CF5F8074FD2A7CD307FF08821C6397E
36FED57338816CE50B05FEC276B53FDC21DE0755EEE6F50AB0DBF46A74AC94A0
9D60E190C548172D2E1D8F212951E0C9041CB8AE33E9C8D193CEF94FC02C79B3
E9EAA54D2AD930F7F724A305C4DB7BBE9E3E9D166FE9AF6A82B93FADCB635068
816C561272059E04597577BFF8A3D175E39EDBB8852D862D7D7AEA53A9EDE168
2E0D549E39247A5CB3F9C37AF849E9C5F06214A5701137FF81D82CC875B1AAF3
E7D136D5F64A21F7629A735EE75362BFA0749412DBBE8555379084F02BFACA2A
F2ECE7607851DEF4F1E9B18DFC8633BE473FCF2B89C25231EE8ADC6ED94AC2E4
982FEC0DFC4D300010E07F87CB047973F45A5EB675A08EAB203670CE65465407
D7AC161D95D2B4BFB895D6D3910AF7F6FA2EF32F3FDECFC89A2E97886A668B9A
FCF224B31DD3A1EEFA94EF13D2E9ACF64EF0602C18B6A4F40A7C7E885EA1DD17
590E8EDFA7C7C277BBF9E386D35F95636ECA2E9A09B2350CB1C56BB44AA527B7
78B1CE3416EAEEA707B64A02EA78678703ABD507B384E325AE5541B303E4EA04
99485D1CD4A3681A84D170419BEDF7D5ADBB845D20CA27E2AB8EFCFF3B1916EB
0E2EB07A09A94DBAE606ABAD123322A3B0DC696248FA4E6ACF66489102F42339
A26BEB23CE1F2659E11290FFB397C8CFC5F6FDA3736F070F722370550144AF35
7A32CD3E8B6110F5A45D25F9842ABE8DB5129796AFC141BAEF43871D61036AF2
A021FADF9F78E2E8FCD23B55D05BBAE7F60CD9DCE16DD6F34DD2B526E69A83C4
02EA0D0CA106C7B1527C88DF63EAF03508ED1C2A457029FE5C930819FFF889D0
A0941D879C5A383FE2634586CC0287BD3F0B144AB9F8F5B74F9BBA9C7F44DADF
A31E4874F37BE8AFDD835A1E2999C84445E8374304A1C27B1AFA29E83DEFAC87
134AC40144DBB5958B9451E9C6C0410E42E18BA9A3411B9CD4F1F81FA522ABA0
6424DECDA1C48B6C691F988E98F9B9162A9F12387620BC67C7411FF8393214DE
53C510BCFE9A4BF0B5095A6DE26177B05FBE0A5E975891CA821B56EFE1DFF237
2116E45504B42ECFF323951721E2F133686110E9F28865AFDDBEF0181E9379C2
A112ADAD4BA3410C344225456EF015C18644942E93B1C51E20F7B23D8A22E7E6
01FFB800BD9B73E650FFB71DEAFD8526EE87B9D959731386716E35797AB50B2B
B2941322FB03EF4EEFF077930FAA87A50C937D31ED5CADB274E18981FD2B469D
B9FC95ADB5429695878508B3B572FB4278903008AE213BA719904A48D9697590
6B89D8C746885727960E3A6E8C5E5FBE34DA8572E88FF4F5F60AA94021D31E39
7D4232645DFEFA1E18E6D573665902E845536140756ABACD2094CC28A53CBD97
5838877D604C4E7192D8385D931F6BF1EB31665878FBE0719EE667071CA18620
536FD8A0D93ECDAD88BEF8B3F710C28B533FBC9118859D4D4E64348083188D68
0E46FEB2DDF4C8C14D8D087E4AB1D8166F291810B1B957FFB084920C4114F376
4154D083DAEF0AC2F8FAC89720BE0C02B7F350BB9577C59C3761D7DC054B3857
6C6EB5FBEBC8C4B207E3D0971C3BB83FB3BC00CCDB9C95F43E76FC6BDDA4D7CC
657493A0ED9C5EE9C89DE53A6CE6D6D7F3E85FA053BB39C99ACB1D08282BC0DC
2B7C5DB99DA76616179F4E92CC7D1820223B6389B463011FE19CE80E8CDCA5B7
8EA304630D74F1C0DE59D6662DFA5F610E2AC4979D3437E33D684C9A4DEAB264
603F244BA4BEB8DBFDB625836C94F281B69364EF6926F0E1ED9254513D20894E
5BCD089479CD212D4339F0E65FB740E2A860554861E62F717860D2A274CD739F
6A9A79D371A05935BD0F7BABC366D48392F6BB113C0896171E6CA430C7B52D28
F9F1B2A65142694D570C895F36C99B3C9EB011B10F20B5D0774B192AED8FD50D
A47E6F9275A21BBA0CD4F2E540FEF8A4EAA36622D2316B213F8243B1847292D7
D4C7EABDB0E4064184CC0FDD2BA4838284DF3301A707606734572F807049EB84
5BD5ECDB84391C46B9CE61C958091ABD707D44EC4E5A1A782EADA542E45E04E3
FE7D4DBD6446A099D69E30F2426699565B7C640E6D5832614AA425DB7F35721A
6AC4CDD943FA3D90C2A8D90D287D20DCE9274D5316E282FE6DBBC14475CB8E9F
99D71F36518F0B1F513678720C170F75F31199338C073CB7CC089C55EA2FEB83
D59A5A971CE3968D1F03F4F9FE7FB848D99F49900ED5C09A5F43D2E9AACB6E16
59234A26352A03C5E3D4926586972938B92353B26F0CDFB2C481CE68D91EC6D5
B05686A2E58B76BFDE15A4AF1B34A88C700439472BDD5A7B8E16D6067DF4E50B
7C92DEF6DFF655DF005F580565C0DE30A81F2B9635460B120AFAD7B4D347F26E
E5E7357B597236A9036611BFC0D4746F7519ABA522773BD102B857A5992B7C49
D489FA720077C60CD13D202DA6177904AA4C86C3684345EFBABA06CECD35051B
0786B7911FF40128F7061F2E6C53FEE40AEDEDDCA4C09D6B20681C125FEE99F3
48FD9AF176168D964913D9EEE86730BB49C8446C44B163499F817DE76D7AFEB9
6AA2D19232D24D7CBC947D9AF2AEAFB3A2673A4D43C933CE465D077CE7E9091C
9AA76BB067D5BD36AB0139093F986517DEEAAAE9189D44F0F9792F56E90A599A
952208CD8C7973617B326C26130180B89DC4F46FF9216F1C43F4414B7C12B611
46A8751A3C1A3F922161EFE9A0C116D2FE00052B22418B330B24A05236151EF7
155B1D434F1B0B6E1EE09DAA9685AA2BBB94EF6B784A5FB24EA33594AA17FEAB
B0D7FDDBE6F96BF07935F96663C55FD620B9E938829C5ED9D5D0D64B07DC4E00
668EDE9BCF5D580234945FF6D3C279A09E8D3D124A031102FF1DAE19181F3308
A496093B9D9049678041D80AC36E78C1F1DE04A8CE577FEB3FA5D85CB50BF0A2
29D2664856D62E28396E0DCDAC2C7056A4E6F7E883DF06492BEC78C972A3FC53
973F48CB30D76BDAA84DA5EC5FA45944B0D7A248D093D4251B45876CC27253A7
53D499024558EE17551D5F34BBF7721B482F89388A39801C3CA98E0481DB2B80
36206784F17A104AD43CED97BCA41007ECC96C7BB698774D1A2C10825DEDC0E3
624DECE7892151E0CA87DC05C83C06A68F27F0C761E35FA8BAB164DCE19F74CD
84F11523355CE5639ACC32CD5E37AFA26516404980071B7E7FA90343E369858C
BCFC7BF4EE4EB6DE54FBDF4828A3D4F3DB002B9B223FD0CDA5DEA4667236D860
F2BF662D37A2B10C0A1C752183622611A0C547D46998E08B67C48EBEE3B51FCD
39B81300889850D260B2B9A6BE505717149F4200DD53397B02197B6FA86ABDCF
97ACC1B898DC7C15AA35A3A38930B1009E63C4D6EECAB8E869C01D1D68C9E4F8
5E3CC5AEF1EAA75C658E90F0246C18C21CF3856099E9556526F5E5F2205DD641
EE39A4BD6C8EC20A30A9A563B6A59B12647827BC6F11BC2C3CD7CDEF8DF19C1D
83AD46C7FE256D4615B6069F44ABBE7BB826A024CA42A5C5BBAEA96C1A1EB92A
E681289413865BF0135D2E83AF39D2814139E38C4BCAE9E1CD3174CFDDA0974E
2BE41F2D969EB0B7E169D0A3EC24C9454987D9A8FFE06C78DB1D4D77D17EAA35
BD7DEF5A54D050720CEB18CC797F447FCED40BC94E7465C365A2FB21BABA09D5
377A5D0E66EB10A2A8A57A14B7F2D4815E0733979B9FE7F1372571A60B1C9951
D8A457A4F1CB344477D7A65161309BF4A30682892C8314CEC9BD005A5B061021
4F0A6CBC29515A07564A9D3C2275458700FD01CB5E99962B8E8EB8262B07D742
C3BC581F463B390F50E1D2DDF3FDD7B29E0FDF00FCF17756073A09ABFA792C31
C37AC9C62DC742B117E37CBD332EB57640CA4878CF17E822E395763A5C5EE581
0F201E3B2C79E92012950167935869EC0E7CC3CEE3356119D1E4BD658E9EB5C6
4396D14E541FDA2EE60499B0CC5EA988A2944C7FC65D53B5A106F63E9DAA0D2E
6001E9305D4D6C43906892A62E27D5B5C693F734786BEC56BD9E20989C124A54
C76F9B24CC4D386E894791DDEBDE436A8BDE59944B07A91D9307598D5208E1E3
019BFDD9019E92D7F6C47FB73E1CE9B0E9F4705F8350EB8FD8FE92A2093C90FD
3F74257F0549BAA583BCF53849472D34CF34AB38B5B3BDC9B4B19F8262AB227A
5EEAD3076353E677E4C2C71C939FAC2B4CE0108583463938A9ECE765A6F5C39C
5A27A1661D9C192421E79A5C0C5D7E15D168F2AC55F33A1977FA4D3C0B6E5655
214FF174073D25F737D807E2CB59BD81ABAC51D01B15D0A65F2F75DA5F3469BF
C41E342FF7CD42F6B821E75DADFFFC8BB282A85B58BA201F11BE07DA0E6C440D
1AD07D3EF482CD61AFE9D26BFF842E08752064C9D149D5AB137C17291ACB1BFF
C7A1246653E07A2614E51D3DD986B213BB2442040B5255F62BD2B6A93C68B79E
9026102990E067BAA1B355B302DA747B08208DE0CE3BCA949E690DC708FE3402
0ED7EF071525CDB93880A24EAEADF171B5C0745FEA433AB4F7CDE57AA7490C08
03B59CCB38B77BBF8E07734226D66FF0FCDA9E9B8B8CB59150CA66DB631E58BA
DC735387938B15A9B4D9AB149FE14A7427E34466031B9597FE30F301D3BEEAB6
F9716275EB86A05E8F774ADA90E07C887741C0A255A16DCC32BB7BB54CE2DC59
D098944FB0008BD647A448A8CE29ECAF881590FA30DD9CCB98AEA7484F17687D
2F3900B9524B578BCF2CA6C2E6674B52F65CD9EDBBF10DF518D2436969674D4C
79B5F598DF53690FAF7F415B3CCDE7AADBCF72697BCC9D14646760A2AE944CDE
DB8CB0483DBAE03637CC4C30DF26DC2E3E13C4810125E03F6EB91BA510563A49
CC3E4BAA3BCFB0D40010E62BF91E5F195DC0623C166172A1F73B7EE27DEEA5BE
7EF0EF6B0BC1B1E12087CA692EEB2A093A623A45CE402700E4F6522AC928BB08
67AA56FADF3E62F6E447F9AD8CF4505C45A38D08DB2EA29D2C00B939B2671157
1013AB6B2BFB92089431CEE0931D3D2FB8641D31187C842FA0FA9505D9A09C8F
5D0C740BB585B39D0958C64BBEC27B375164FCF528FBA7EDBEB6143DE2769992
0C5120A2E602483D570AA96551214BE8BF96D179904DA5EB8D875D02AB33C8EC
DF430B9B73AF085C8071B69B977C91DE3F59715A408618A96473B2E7319235A3
0863408FA5D977E2DF024669A9F4C2C4D06BD8CDF8B66D6D77EFFC0015674152
4F3B68439D0246EFB30D7A3CE3B08F9B1A786239B307B8409C7CA21266B87C83
8592DBCDBE253DD44C03139606D7B3063E90D049DCC8216144B9F3C13D8F625B
6B077DFE87CCC0A7DE3B993B548044FA30D3283898F9B1FB569CCA75C6C49120
2E67B95CF2CB2CCA30A53178877E48D99594ED41CDEFEA730E8FF05E276266F3
19F9A6E6D3B313FBA7A191576F27567BADCDC447667E43A1B8656600B6694E78
14729A8379C202637FED56E5C6F3D8914361E421FD0A8F07D6C7763DBA5D9511
2272114A97942543FDE90924C95B2B966F3F6E7A9BED4B688AB4DD3B88714CB6
60313475534A0A4D616C46EE7BF56155C3BE053600CF6D6A44A0364102156F60
8E08CCAF4D4954F03252AE1076204199B175440376E4B907F8A12D7DCC013715
3993B7335F200FA0E935F077BD05C6A9D9B06182B109464425CEBB71CB1DF1C7
5C987701B21DCE9F67854CEC51C130E0CEE49867D42E9D074727D922913BA17B
4C1ABBC0CA412C774CF4E8B89C6F3FBC70894EDD4B1438C88F7634EA32ABDE9A
03B72AD9E2760002D06CFD9933F73B4F903EE544DA2EB326708738B6C89A4D1C
8F07376001CF6C37357C95146F66B9C5BFA541FC5E95927715BE90725442E112
F244A14733093CE1B240F696BCDDD1A9515D777E4FCC5F3C6941CA8EA50D200D
6A455A876E4D340879A114B70CB407CDAE0694DBE35398B962EED437A12F223D
FCFB0CB0BFBE710AB5F1742D1EF89E12403CC4AC24D7D076458BFC8806F0206E
239826617E9FE89A49C1F580EF644E763CD96C5984C51ADD21DAA99B214EF626
8DC931E8EF1F84BA691BB7BFA6D7F6BC8524A331747F022BDEFF63AE0761F6AE
99892138FE1BAEB4A3FAE737A3819AC0A6DBC089EE5B7C75ED622E9383F12433
5CCCA953F2DE4CEBD66C9093396AC0DE1C9691082FF4A76D691AAD97E8D88F7B
18A75FB7A6CF238BDE09666B1742F36D6FBFF5BF07644BE345E1980AB788FC93
3F50987177BFF4D057D6D8AE4280B82DCB13F0C508210B060EE627C23A0BF99A
220F2D6ADAED1C5BAA9D7F6E62456BDF846EA2DE220356E5466C18DF225126ED
0BD50FD0EADA94CB0AFCF6E1A833C795CCBD408D09C6E13C0F938CD296E02226
60686BD8EE95E04296E3DE128BED7183D73CD93A9B396BE697609FC184F78351
66998D84F66E707FC79D742E3B5468E5993142977D1E402AD0FB60727D550E46
DFE31F9928A9638C2CCC63D17B2F0CBD35C95A1C14C3B8BC05919C92B50CCF07
29EA5A026CE47CF6A3D2D3D4496D9CD4B8C06C5C2AE4857F15461406803FEFB3
6B1953C7DDB410F4036F96C62BAB70AADC10F66B94AE100EF9EA0CB14E78E062
DA19646BC3954E27E7E82297D8E6612C943FDB54076C7C77CF5C8CB246840F28
C46EA189EB7AF81830A228EB879C0E45BE958A3840C765318F598ECD643F1802
A7BECCA0845DC704CBDA5376B238A94A5329C68909086E79998FB6A7B56AE8F5
9123486AB676CD15413835EE537EF26FE08F74435C156363454313BDB47F52C6
FD247454E6D02E4DAB4912FD86ECEF0D858E7D44051BA7CF99DB4AB7339F7AC4
ECC50528F7436EED65619142AE86885813ABA7007534EAC8E74911F0402C325E
161C5FC53F44EA35FECA19085600AE6B1221A79A8AA1219497EE44BF5B7A7460
98784E07FB95E6A9554AC9E35656CC9F8DBC669A66104763F196EFAE2EA7770B
2182F055801F9205543B632EDE4C96C7D317714C6CBFEEF4D5C579A8EB9940CE
B50A8CB268CFC85E6FAA156F533726C3B808E727E537B69151F4D03D8BFBE566
8A8794434283192C815CE0B4275BFD621BE107374CE272DB7159ECFC99CC7718
018DC769D021D2B2F3201065015E9F5E468287136A69E694B77F16023C215B99
67618963740774CDFE4C358F34A3B6C7F8D4087DAF00DA652C22BF49B27C82B2
2647B5A7434131F760B74AD221BD61F016315A7035EF87036D1FA54D62E29E41
EAD706E89229C4BC6BC0BEFF388E5EA2968387E7711FA9394C48B5E4A1AC8DA7
543E74DE826D56D233AA9FB2047E761D27D3F9568F69495C575A6C4373CBB7C1
220C5FE3670BA1BF3226304FE2A15B06AB8B7936E1C1486995384B5657DDF12B
D03B7330B22D73639835D7A0F6B509C1FB4E710451A064BB1D1FCB987CA30965
1590C70279546819911DF0561A738D57E17E70928FB4DAB03AB65919CB32E07B
D4BF85C2B8F50F8E99D7748CC5DCA3B7EE515D32204CFA6720D38083F4E9B4EA
C20BE54D06F8029E054EFCE2BB9E3A8CE5AD69B66C69CB66A2F59980C9543135
27C6BE34031AFCD0FA1737E07BF5CCFBB559F9DFCC8F73C912C9D902815BAF2B
F376293448C3B2B7E505B8CF8D43E1905834C6C956CF393408DB368AE8DFB990
70C12B62F1FFBC0262358BD4BBF550A0255BDD871BF30DE6A4FF41B6225A8E2C
316858FF13B2136E01D039BDAB34025B6721FB0E7CC395A0E3BFFFE810F076D0
07A3D93A1396AA96E00C9C2A2EA04EFD2F9B95D9FAD77CAB808FB5463133411C
B7045F12BDC5A61C9D2219B1005925F673A880581CD498A66AD2991F011A3C11
4028AA3ACC7A410224A626DA9475A10B0CFC3502C704EED5F0D5A166C0D6EA4B
E02849C39D4DBB991A1760A29A375CC4B8AA10DE1FE681036CEE800D650FE25D
0E5707C97060F8EC879CB288F9EB3E8F698CFCF16551EDA012DC1632C43AEFCC
5742C0326BE29991A727D841DA38137792D409149DD6E170A7D01BF35D380CD2
A7799D8163B910980663E7A9A6E8D85E705DDE08A08A75E52985FCB426D33D3B
43E9A9FBC59AA523912354A4AAAAEC04B9CE129E69B5CC6C921D01F9ABA32CCB
467DE3AFFD1ECA74945DDC508B2DDBEBD6C8885290DCBE6F3EA7368EFF2BEB0C
56BBB18CD1BC8A8CDF0678D56BBE0CB98D9AF878C35115FD054EC8E4A5A71990
B98FA15250C7793771C37B8E04E0906FE11D7E6FB18D7B61F38D93051FE65FE5
E7FF04454A49B7AEBCE5A41FA0536359BA674F1CC6BB490A86D5AF2C9C7DFEE9
14B0527EB58710909D0ADE9503639904EE505C1FBA17D226E782A841B9BAACCE
9E0C35AC397776F2CBC79C04334DD44ED38335693818EEF2D8E1610D03C3A3DC
E858716D642963236D4DE6AD051E90DA2573A71B6744478D687B07097898B57F
71399CF99EED9AABA70EBC9CB29A9E8A0BA02DA3B7E7EF3BE620429B376AA762
E15E30D2612E865EC9A18D2601D5BD7FCBF267BA17D1B60FB728C4D3238C3CF7
CCD0AE92A9546EBFC601BDA8ED82A0220FF4BD10A0457127C998D89FA46D0C60
0284B0B0EBF4E8362361DD41BCD3954EE6047A290FC38F7EE582A8156231BC1E
929968CF47D04840C0D51533B13FD2A9533C4FFC3701D4C6E2DD1A65B55A4308
AB6857836EA5A62298F90FEDE2C97C6EB372C3E90C5D63C8500FB4171ED9DEB9
E6B78F66F3E8B7C077A5882AC8132F1FB067228C8E11A8D74D3D99209B7C8C8E
8801C84A1F0C574BADC12770285ABE71D41D6A15A99497005A70B3295D426DEA
0CE481207856A3DA7AC4278EB4404AEAFBFECC685B8A653013AB6EAEA4F636FA
204E0224BABA19CA093196D2D927D2D2120B61D8D1998C6CFAE9657CA7DE6BD9
4525384F92897AF11EF647811A7B43C9C4BE0F83EA8842006DF451269540A126
A982C732D9FDCB66205A145E11099B0833FD671DE591510BB6B11D57645C4306
205F90E4E2BE8FEF518136B257D23C4636F43392BFF141047390792AE13F1107
79E925A1EE5716D45752B91D6A82207BB9699340E307F7C650908CEE3866FC30
8E11B4820BD1BD65685552219A9E6F0B830C567A4E05693B3A51FEB1744B163C
E0A84B2B769F066D2C46C505D085E6AE259EA0C1E0D612795FB2ACA7FF3FF72E
F9332DA4A99B799092145C43513AE1C5FA807A9ADDD6ED9F4D7A93EA4C4557E9
DA7CCCD9B3D47AC662A7BC87FF46F4BA142083597541BBF65658429A24EC8069
32460B044CC1159FD322F29B80F1975090CA690FA83F7A9EB28F2DD610A34530
E5E9F6206B4C540D7E22FA5C86C2E98C8D46AEB41DEE40A4EE7BE342DBCD210A
BD9F8282437F944356C0D97FC4C148224AEFB68AFAB23ECBAE3728A77B6AA253
B149520A822BE885F280FE89DD07552D03334CF75F01A3EFD273A2A0DC147E21
E4A57D76AE0CE07B71323279347296FBCA1E2C170DF0A72BA1A1416DD5957ECA
F14CEB6646C78B443F4DF1476B484F90B173ABD1B3F81F0EA3BE798D6631474D
241FE7B13960F171C0E233949AC53713315AB6840C29386289EBD7CCB6316991
FC82C6869DCEF9DE9818CC576192613C7DF5D8943098090966CEB07B3F081D2F
3E0E0CBAB44CCA069D463548AB5A3E7FFEF5E49AE0386D9626304862F93D905F
893399A0AD703800D80E41C9821FE13B15084B89BECECA90AB02E9BE291E723C
8E51B8DF3423FFAB8F55
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258437 52099151 1000 600 600 (main.dvi)
@start /Fa 137[42 1[28 32 3[42 46 1[23 46 1[23 3[37 1[37
1[42 9[83 6[51 11[60 2[60 65[{ TeXBase1Encoding ReEncodeFont }15
83.022 /NimbusRomNo9L-Medi rf /Fb 152[35 35 101[55{}3
66.4176 /CMSY8 rf /Fc 193[55 1[55 60[{}2 66.4176 /CMMI8
rf /Fd 107[29 29 24[29 33 33 48 33 33 18 26 22 33 33
33 33 52 18 33 1[18 33 33 22 29 33 29 33 29 3[22 1[22
3[63 48 48 41 37 44 48 37 48 48 59 41 48 26 22 48 48
37 41 48 44 44 48 5[18 18 33 33 1[33 33 33 33 33 33 33
18 17 1[17 37 33 22 22 4[33 35[{ TeXBase1Encoding ReEncodeFont }71
66.4176 /NimbusRomNo9L-Regu rf /Fe 203[29 29 29 29 49[{
 TeXBase1Encoding ReEncodeFont }4 58.1154 /NimbusRomNo9L-Regu
rf /Ff 133[37 42 42 60 42 42 23 32 28 42 42 42 42 65
23 42 23 23 42 42 28 37 42 37 42 37 3[28 1[28 3[78 60
60 51 46 55 60 46 60 60 74 1[60 1[28 60 60 46 51 60 55
55 60 7[42 42 42 42 42 42 42 42 42 42 23 21 28 21 2[28
28 28 35[46 46 2[{ TeXBase1Encoding ReEncodeFont }68
83.022 /NimbusRomNo9L-Regu rf /Fg 133[33 37 37 54 37
37 21 29 25 37 37 37 37 58 21 37 21 21 37 37 25 33 37
33 37 33 11[54 46 42 50 4[66 3[25 54 2[46 54 2[54 18[19
25 19 2[25 25 36[42 3[{ TeXBase1Encoding ReEncodeFont }42
74.7198 /NimbusRomNo9L-Regu rf /Fh 139[25 29 33 14[33
42 37 31[54 65[{ TeXBase1Encoding ReEncodeFont }7 74.7198
/NimbusRomNo9L-Medi rf /Fi 136[72 1[50 1[39 33 2[50 50
78 3[28 50 50 1[44 1[44 1[44 20[61 72 39 33 72 3[72 68[{
 TeXBase1Encoding ReEncodeFont }19 99.6264 /NimbusRomNo9L-Regu
rf /Fj 138[50 28 39 39 2[50 6[50 38[61 6[33 58[{
 TeXBase1Encoding ReEncodeFont }8 99.6264 /NimbusRomNo9L-ReguItal
rf /Fk 134[83 4[55 65 74 1[92 83 92 138 46 2[46 1[83
1[74 92 2[83 11[120 1[92 120 1[101 7[129 3[120 2[120
19[55 45[{ TeXBase1Encoding ReEncodeFont }22 166.044
/NimbusRomNo9L-Medi rf /Fl 136[78 1[58 32 1[45 1[58 58
58 84 32 1[32 32 1[58 32 52 1[52 1[58 13[58 2[71 9[71
71 1[78 12[58 1[58 1[58 58 58 6[39 39 40[{
 TeXBase1Encoding ReEncodeFont }28 116.231 /NimbusRomNo9L-ReguItal
rf /Fm 170[102 1[78 3[102 79[{ TeXBase1Encoding ReEncodeFont }3
141.137 /NimbusRomNo9L-Regu rf /Fn 166[82 2[82 1[69 63
75 2[82 82 4[38 1[82 1[69 3[82 65[{ TeXBase1Encoding ReEncodeFont }11
112.91 /NimbusRomNo9L-Regu rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 0 1
TeXDict begin 0 0 bop 0 0 a
SDict begin [/Producer (dvips + Distiller)/Title (Progress Report)/Subject
(Progress Report)/Creator (LaTeX with hyperref package)/Author (Krisna Irawan Jiongcheng Luo Drew Hamm)/Keywords
() /DOCINFO pdfmark end
 0 0 a 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-158 -435 a
SDict begin H.S end
 -158 -435 a -158 -435 a
SDict begin H.R end
 -158 -435 a -158
-435 a
SDict begin [/View [/XYZ H.V]/Dest (page.0) cvn /DEST pdfmark end
 -158 -435 a Black 0 TeXcolorgray Black 0 TeXcolorgray
-150 -150 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -150 -150 a -150 -150 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -150 -150 a -150
-150 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -150 -150 a -150 -150 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -150 -150 a -150 -150
a
SDict begin [/Count -0/Dest (section.1) cvn/Title (Goals and Purpose)
/OUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -0/Dest (section.2) cvn/Title (Current Stage) /OUT
pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -0/Dest (section.3) cvn/Title (Problems and Solutions)
/OUT pdfmark end
 -150
-150 a -150 -150 a
SDict begin [/Count -0/Dest (section.4) cvn/Title (Sample Code) /OUT
pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -0/Dest (section.5) cvn/Title (Retrospective of the past 10 weeks)
/OUT pdfmark end
 -150 -150
a -150 -150 a
SDict begin [/Count -0/Dest (section.6) cvn/Title (Overall Retrospective)
/OUT pdfmark end
 -150 -150 a -150 -150 a
SDict begin [/Count -0/Dest (section*.1) cvn/Title (References) /OUT
pdfmark end
 -150 -150 a -150
-150 a
SDict begin [/PageMode /UseNone/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 -150 -150 a -150 -150 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 -150 -150 a -150 -150
a
SDict begin H.S end
 -150 -150 a -150 -150 a
SDict begin 12 H.A end
 -150 -150 a -150 -150 a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 -150
-150 a -150 -150 a
SDict begin [ {Catalog} <</PageLabels<</Nums[0<</P(0)>>1<</S/D>>]>>>>
/PUT pdfmark end
 -150 -150 a 1079 -50 a Fm(O)8 b Fn(R)g(E)g(G)e(O)g
(N)40 b Fm(S)8 b Fn(T)n(A)-7 b(T)8 b(E)40 b Fm(U)8 b
Fn(N)e(I)i(V)e(E)i(R)g(S)g(I)g(T)f(Y)447 563 y Fl(Computer)29
b(Science)f(Senior)i(Softwar)l(e)f(Engineering)g(Pr)-5
b(oject)29 b(\(CS461\))1727 704 y(F)-9 b(all)30 b(2016)639
1140 y Fk(Head-Up)63 b(Display)f(Alignment)i(System)1364
1457 y(Pr)m(ogr)m(ess)d(Report)1777 2046 y Fj(A)n(uthor)o(s:)1663
2162 y Fi(Krisna)34 b(Ira)o(w)o(an)1625 2278 y(Jiongcheng)g(Luo)1688
2395 y(Dre)n(w)g(Hamm)1811 3642 y Fh(Abstract)p 0 TeXcolorgray
0 TeXcolorgray 141 3767 a Fg(A)40 b(Head-up)h(Display)f(\(HUD\),)f(is)h
(a)g(transparent)h(display)g(that)f(presents)h(all)f(necessary)h(data)g
(that)f(pilots)g(need)h(in)f(their)g(\003ight)16 3850
y(en)m(vironment.)35 b(This)f(project)h(is)f(a)g(proof)g(concept)i(to)e
(e)o(xplore)h(a)f(potential)g(technological)i(inno)o(v)n(ation)g(for)e
(HUD)g(system)g(that)g(present)16 3933 y(critical)28
b(\003ight)g(information)i(to)e(pilots.)g(The)h(primary)g(objecti)n(v)o
(e)g(of)g(this)g(project)f(is)h(to)f(reduce)i(the)f(cost)g(and)g(time)f
(required)i(to)e(precisely)16 4016 y(align)20 b(\003ight)f(information)
h(to)g(the)f(HUD)g(by)h(introducing)h(additional)g(sensor)f(to)f(the)h
(system)g(to)f(mak)o(e)i(the)e(alignment)i(process)f(more)g(dynamic.)16
4099 y(The)k(product)g(being)h(de)n(v)o(eloped)h(is)d(a)h
(demonstration)h(system)f(that)f(looks)i(to)e(include)i(a)e(MEMS)h(IR)m
(U)f(mounted)i(onto)f(the)g(HUD)f(and)i(a)e(ne)n(w)16
4182 y(alignment)30 b(algorithm)g(that)f(utilizes)h(this)f(additional)h
(sensor)g(to)g(determine)g(accurate)g(HUD)f(alignment.)h(This)f
(document)i(will)e(co)o(v)o(er)h(the)16 4265 y(progress)e(that)f(we)g
(made)h(since)g(the)f(be)o(ginning)i(of)e(the)h(term.)e(In)i(this)f
(document)h(we)f(include)h(the)g(project)f(goal,)h(purpose,)g(where)g
(we)f(are)16 4348 y(currently)-5 b(,)27 b(some)g(codes)g(that)f(we)g
(ha)o(v)o(e)h(been)g(w)o(orking)h(on,)e(and)h(the)g(retrospecti)n(v)o
(e)g(of)f(the)h(past)f(ten)h(weeks.)1678 5538 y Ff(March)g(20,)h(2017)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 1 2
TeXDict begin 1 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-158 -435 a
SDict begin H.S end
 -158 -435 a -158 -435 a
SDict begin H.R end
 -158 -435 a -158
-435 a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 -158 -435 a 0 TeXcolorgray 0 TeXcolorgray 4021
-327 a Fe(1)p 0 TeXcolorgray -150 -150 a
SDict begin H.S end
 -150 -150 a
-150 -150 a
SDict begin 12 H.A end
 -150 -150 a -150 -150 a
SDict begin [/View [/XYZ H.V]/Dest (section.1) cvn /DEST pdfmark end
 -150 -150 a 1513
-50 a Ff(I)t(.)46 b(G)t Fd(O)r(A)t(L)t(S)24 b(A)t(N)t(D)h
Ff(P)t Fd(U)t(R)t(P)t(O)t(S)t(E)-67 75 y Ff(W)-7 b(e)30
b(are)e(w)o(orking)f(with)i(Rockwell)f(Collins)h(through)e(a)i(proof)e
(of)h(concept)f(that)i(e)o(xplores)e(a)i(potential)f(technological)e
(inno)o(v)n(ation)g(for)-150 175 y(their)35 b(Head-Up)g(Display)h
(\(HUD\))f(systems)h(that)g(present)f(critical)h(\003ight)g
(information)d(to)j(pilots.)g(Speci\002cally)-5 b(,)34
b(our)h(focus)h(is)g(on)g(the)-150 275 y(installation)f(of)g(the)g(HUD)
h(system)f(in)h(re)o(gards)d(to)j(HUD)f(alignment.)f(The)h(HUD)g
(system)h(needs)f(to)g(be)g(precisely)g(aligned)f(with)i(the)-150
374 y(aircraft')-5 b(s)27 b(sensors)h(in)g(order)e(to)i(meet)g(the)g
(desired)f(standards)g(when)g(presenting)f(\003ight)h(information)f(to)
i(pilots.)f(The)h(current)e(alignment)-150 474 y(process)i(is)h(costly)
-5 b(,)28 b(time)h(consuming)d(and)i(requires)g(specialized)g
(equipment)e(and)i(epoxy)f(during)g(HUD)i(installation.)-67
574 y(Our)d(primary)e(goal)h(is)i(to)f(b)n(uild)g(a)g(demonstration)e
(system)i(that)g(e)o(xplores)e(the)i(idea)g(of)g(mounting)d(an)j
(additional)f(sensor)g(to)h(the)g(HUD.)-150 673 y(W)-7
b(e)25 b(hope)e(to)h(sho)n(w)f(that)h(the)g(initial)g(alignment)e(of)n
(fset)i(can)f(be)h(calculated)f(by)g(taking)g(the)h(output)e(of)i(the)g
(HUD)g(sensor)f(and)g(comparing)f(it)-150 773 y(to)j(the)g(kno)n(wn)e
(reference)h(of)g(the)h(aircraft)g(sensor)-5 b(.)24 b(W)m(ith)i(a)f
(successful)g(demonstration)d(system)j(we)h(will)f(be)g(able)g(to)g
(sho)n(w)g(an)g(alternati)n(v)o(e)-150 872 y(method)32
b(for)g(HUD)h(installation.)f(This)i(alternati)n(v)o(e)d(method)h(has)h
(the)g(e)o(xpectations)e(of)i(costing)f(less,)i(requiring)d(less)j
(time)f(as)g(well)h(as)-150 972 y(alle)n(viating)27 b(the)i(need)f(for)
g(specialized)g(equipment)e(and)i(epoxy)-5 b(.)-67 1072
y(Our)25 b(secondary)e(goal)i(is)h(to)g(include)e(in)i(our)e
(demonstration)f(system)j(the)f(ability)g(to)g(\002nd)g(the)h(dynamic)e
(alignment)f(of)n(fset)i(as)h(it)g(relates)-150 1171
y(to)i(airframe)e(droop.)f(Airframe)h(droop)g(is)i(a)g(real)g(problem)d
(in)j(which)f(the)g(HUD)h(becomes)f(shifted)g(from)f(its)i(precisely)f
(aligned)f(position)-150 1271 y(during)f(\003ight.)h(By)h(including)d
(a)j(sensor)f(mounted)e(to)j(the)f(HUD,)h(we)g(hope)e(to)h(\002nd)h
(the)f(alignment)f(of)n(fset)h(dynamically)-5 b(.)24
b(By)i(\002nding)g(the)-150 1371 y(dynamical)g(alignment)g(of)n(fset,)h
(Rockwell)h(Collins)g(could)f(impro)o(v)o(e)e(the)j(accurac)o(y)e(of)i
(the)f(information)f(being)g(displayed)h(during)f(\003ight.)-150
1501 y
SDict begin H.S end
 -150 1501 a -150 1501 a
SDict begin 12 H.A end
 -150 1501 a -150 1501
a
SDict begin [/View [/XYZ H.V]/Dest (section.2) cvn /DEST pdfmark end
 -150 1501 a 1584 1582 a Ff(I)t(I)t(.)45 b(C)t Fd(U)t(R)t(R)t(E)t(N)t
(T)26 b Ff(S)t Fd(T)n(A)q(G)t(E)-67 1708 y Ff(At)i(this)g(moment,)d(we)
j(are)f(on)g(the)g(stage)h(of)f(hardw)o(are)f(setup)h(and)f(preparing)f
(for)i(implementation,)e(which)h(we)i(ha)n(v)o(e)f(been)f(spending)-150
1808 y(time)d(on)g(analyzing)f(the)h(problem,)e(clarifying)h(necessary)
h(requirement)e(for)h(the)h(project,)g(sorting)f(out)h(the)g
(technologies)f(we)h(are)g(applying)-150 1907 y(the)34
b(project)f(and)g(the)g(planning)f(for)h(design)g(details.)h(Hence,)f
(we)h(ha)n(v)o(e)f(mo)o(v)o(ed)f(on)h(to)h(the)g(current)e(stage)i
(that)g(we)g(will)g(\002rst)h(acquire)-150 2007 y(all)42
b(necessary)g(hardw)o(are)e(for)h(the)h(setup)g(and)f(get)h(f)o
(amiliar)g(with)g(all)g(speci\002cation)f(of)h(the)g(real)g(hardw)o
(are)e(de)n(vices)h(such)h(as)h(the)-150 2107 y(Microcontrollers.)-150
2220 y
SDict begin H.S end
 -150 2220 a -150 2220 a
SDict begin 12 H.A end
 -150 2220 a -150 2220
a
SDict begin [/View [/XYZ H.V]/Dest (section.3) cvn /DEST pdfmark end
 -150 2220 a 1370 2318 a Ff(I)t(I)t(I)t(.)i(P)t Fd(R)q(O)t(B)t(L)t(E)t
(M)t(S)25 b(A)t(N)t(D)g Ff(S)t Fd(O)t(L)t(U)t(T)t(I)t(O)t(N)t(S)-67
2444 y Ff(Early)h(in)g(the)h(term)f(we)h(f)o(ailed)f(to)h(meet)f(the)h
(e)o(xpectations)d(of)j(our)e(clients)i(which)f(led)g(to)h(a)g
(communication)d(breakdo)n(wn.)f(Our)j(clients)-150 2544
y(vie)n(wed)37 b(us)h(from)f(our)g(\002rst)h(meeting)f(as)i(being)d
(underprepared)e(and)j(lacking)g(enthusiasm.)g(The)g(problem)f(w)o(as)j
(compounded)34 b(after)-150 2643 y(sending)28 b(se)n(v)o(eral)g(poorly)
g(written)h(emails.)g(Some)g(of)g(these)g(early)g(emails)g(contained)f
(poor)f(grammar)m(,)g(and)i(spelling.)f(There)h(were)g(e)n(v)o(en)-150
2743 y(cases)f(where)e(we)h(spelled)g(the)f(names)h(of)f
(clients/professor)g(wrong.)f(This)i(problem)e(of)h(poor)g(grammar)f
(and)h(spelling)h(carried)e(o)o(v)o(er)h(into)-150 2843
y(our)34 b(documents.)f(There)h(w)o(as)h(also)g(a)g(problem)e(with)i
(miscommunication)d(in)j(that)g(we)g(were)g(gi)n(v)o(en)e(speci\002c)i
(instructions)f(that)h(were)-150 2942 y(glanced)27 b(o)o(v)o(er)g(and)h
(not)g(put)h(into)f(our)g(w)o(ork.)f(This)i(problem)e(came)h(to)g(our)g
(attention)g(after)g(recei)n(ving)f(email)h(from)g(our)g(professor)-5
b(.)-67 3042 y(T)e(o)26 b(solv)o(e)g(this)h(problem)d(we)j(\002rst)f
(had)g(a)h(meeting)e(with)h(professor)f(K)n(e)n(vin)g(and)h(Dr)-5
b(.)26 b(W)m(inters)g(in)h(which)e(we)i(discussed)f(our)f(issues)i(and)
-150 3141 y(formulated)e(solutions.)i(W)-7 b(e)28 b(decided)e(on)h
(making)f(tw)o(o)i(primary)e(changes)g(to)h(our)g(w)o(ork\003o)n(w)f
(to)i(resolv)o(e)e(these)i(issues.)g(First,)g(we)f(w)o(ould)-150
3241 y(come)c(together)g(as)i(a)f(team)g(to)g(discuss)g(the)g(meaning)f
(behind)f(emails)j(recei)n(v)o(ed)d(as)j(well)f(as)h(discuss)f(and)g
(peer)f(re)n(vie)n(w)g(an)o(y)h(emails)g(before)-150
3341 y(the)o(y)29 b(were)g(sent.)h(F)o(or)f(our)g(w)o(ork,)f(we)i
(choose)f(to)g(create)g(our)g(documents)f(in)i(google)e(as)i(it)g(pro)o
(vided)d(an)i(easy)h(w)o(ay)g(to)f(peer)g(re)n(vie)n(w)g(on)-150
3440 y(the)f(\003y)f(while)h(pro)o(viding)c(communication)h(support)h
(via)i(google)e(doc)h(messenger)-5 b(.)26 b(After)i(making)e(these)h
(changes)g(we)h(sent)f(an)h(email)f(to)-150 3540 y(our)h(client)g
(apologizing)e(for)i(our)g(pre)n(vious)f(beha)n(vior)-5
b(.)-67 3640 y(A)34 b(consequence)e(to)h(our)g(communication)e(breakdo)
n(wn)g(with)j(our)f(clients)h(is)h(that)f(we)g(had)f(to)h(put)f
(additional)f(time)i(into)g(\002xing)f(an)-150 3739 y(early)26
b(document.)e(This)j(e)o(xtra)f(time)g(caused)g(our)g(\002rst)h(and)f
(second)g(documents)f(to)i(be)f(turned)f(in)i(well)g(past)g(the)f(e)o
(xpected)f(turn)h(in)h(dates.)-150 3839 y(Not)h(only)f(did)h(we)g(end)g
(up)f(putting)g(in)h(additional)f(w)o(ork)h(for)f(the)h(\002rst)h
(assignment,)e(the)h(w)o(ork)f(we)h(had)g(to)g(do)g(w)o(as)g(pushed)f
(into)h(a)g(later)-150 3938 y(timeframe.)f(This)i(later)f(timeframe)g
(came)g(into)g(con\003ict)g(with)h(other)e(assignments)h(that)h(were)f
(due)g(at)h(that)g(time.)-67 4038 y(T)-7 b(o)31 b(solv)o(e)f(this)h
(problem)e(we)i(\002rst)h(had)e(to)h(pre)n(v)o(ent)e(poor)g(grades)h
(that)h(w)o(ould)f(be)g(recei)n(v)o(ed)f(for)h(late)h(assignments.)f(W)
-7 b(e)32 b(had)e(to)h(k)o(eep)-150 4138 y(an)c(open)f(line)h(of)g
(communication)d(with)j(our)f(professors)g(to)h(let)h(them)e(kno)n(w)g
(of)h(our)f(dif)n(\002culties)h(and)f(ho)n(w)h(much)f(e)o(xtra)g(time)h
(w)o(ould)g(be)-150 4237 y(needed)e(per)h(document.)e(T)-7
b(o)27 b(resolv)o(e)e(this)i(issue)g(we)g(had)e(to)i(play)f(catch)g(up)
g(and)g(put)g(in)g(e)o(xtra)g(w)o(ork.)f(By)i(the)g(end)e(of)h(the)h
(term)f(we)h(were)-150 4337 y(turning)g(in)i(documents)d(on)i(time.)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 2 3
TeXDict begin 2 2 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-158 -435 a
SDict begin H.S end
 -158 -435 a -158 -435 a
SDict begin H.R end
 -158 -435 a -158
-435 a
SDict begin [/View [/XYZ H.V]/Dest (page.2) cvn /DEST pdfmark end
 -158 -435 a 0 TeXcolorgray 0 TeXcolorgray 4021
-327 a Fe(2)p 0 TeXcolorgray -150 -150 a
SDict begin H.S end
 -150 -150 a
-150 -150 a
SDict begin 12 H.A end
 -150 -150 a -150 -150 a
SDict begin [/View [/XYZ H.V]/Dest (section.4) cvn /DEST pdfmark end
 -150 -150 a 1614
-50 a Ff(I)t(V)-7 b(.)45 b(S)t Fd(A)t(M)t(P)t(L)t(E)25
b Ff(C)t Fd(O)t(D)t(E)-67 75 y Ff(Our)33 b(demonstration)e(system)i(of)
g(project)g(uses)g(a)h(Metro)f(Mini)g(328)f(board)g(as)i(the)f
(microcontroller)m(,)d(which)j(is)h(imbedded)d(with)j(an)-150
175 y(Atme)o(ga328)22 b(core)i(chip.)g(F)o(ollo)n(wing)f(is)i(a)g
(piece)g(of)f(sample)g(code)g(in)h(C)g(language)e(about)g(implementing)
g(an)h(T)m(riple)g(Axis)h(Accelerometer)-150 275 y(as)i(the)f(model)f
(MMA8452Q)g(on)g(an)h(Arduino)f(UNO)h(R3)h(microcontroller)c(that)j
(uses)h(Atme)o(ga328)d(core)h(chip)h(as)h(well)f([)p
0 1 0 TeXcolorrgb 3526 275 a
SDict begin H.S end
 3526 275 a 0 1 0 TeXcolorrgb
Ff(1)p 0 1 0 TeXcolorrgb 3567 218 a
SDict begin H.R end
 3567 218 a 3567 275
a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (cite.sampleCode) cvn H.B /ANN pdfmark end
 3567 275 a 0 TeXcolorgray Ff(].)h(Speci\002cally)-5
b(,)-150 374 y(this)30 b(sample)g(code)f(demonstrates)g(a)h(basic)g
(program)e(for)h(setting)h(up)f(the)h(accelerometer)e(for)i(the)f
(microcontroller)e(as)k(well)f(as)h(reading)-150 474
y(data)d(from)g(the)g(accelerometer)-5 b(.)-150 623 y
SDict begin H.S end

-150 623 a -150 623 a
SDict begin 12 H.A end
 -150 623 a -150 623 a
SDict begin [/View [/XYZ H.V]/Dest (lstlisting.-1) cvn /DEST pdfmark
end
 -150 623
a 1 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -150 720
4200 75 v 0 TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray
-150 698 a
SDict begin H.S end
 -150 698 a -150 698 a
SDict begin 9 H.A end
 -150 698 a -150 698
a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.1) cvn /DEST pdfmark
end
 -150 698 a 0 0 1 TeXcolorrgb 3 w Fd(#)p 0 TeXcolorgray
0 0 1 TeXcolorrgb 14 w(i)10 b(n)g(c)g(l)g(u)g(d)g(e)p
0 TeXcolorgray 46 w Fc(<)p Fd(W)5 b(i)g(r)g(e)19 b(.)13
b(h)m Fc(>)p 0 0.6 0 TeXcolorrgb 286 w Fd(/)h(/)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
62 w(A)7 b(r)g(d)g(u)g(i)g(n)g(o)p 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 55 w(W)e(i)g(r)g(e)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 60 w(l)13 b(i)g(b)g(r)g(a)g(r)g(y)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
64 w(f)e(o)g(r)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0
TeXcolorgray 0 0.6 0 TeXcolorrgb 54 w(I)5 b(2)g(C)p 0
TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 57 w(p)11 b(r)g(o)g(t)g(o)g(c)g(o)g(l)p 0
TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray
-150 795 4200 75 v 0 TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray
-150 773 a
SDict begin H.S end
 -150 773 a -150 773 a
SDict begin 9 H.A end
 -150 773 a -150 773
a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.2) cvn /DEST pdfmark
end
 -150 773 a 0 0 1 TeXcolorrgb 3 w Fd(#)p 0 TeXcolorgray
0 0 1 TeXcolorrgb 14 w(i)f(n)g(c)g(l)g(u)g(d)g(e)p 0
TeXcolorgray 46 w Fc(<)-7 b Fd(S)o(F)o(E)p 359 782 34
5 v 30 w(M)o(M)o(A)o(8)o(4)o(5)o(2)o(Q)9 b(.)14 b(h)m
Fc(>)p 0 0.6 0 TeXcolorrgb 46 w Fd(/)h(/)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
65 w(I)10 b(n)g(c)g(l)g(u)g(d)g(e)g(s)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
65 w(t)g(h)g(e)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0
TeXcolorgray 0 0.6 0 TeXcolorrgb 49 w(S)o(F)o(E)p 1635
782 V 29 w(M)o(M)o(A)o(8)o(4)o(5)o(2)o(Q)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
49 w(l)i(i)g(b)f(r)h(a)f(r)h(y)p 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 34 w(,)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 64 w(t)h(h)g(i)g(s)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 65 w(l)h(i)f(b)g(r)g(a)g(r)g(y)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
61 w(d)8 b(e)g(p)g(e)g(n)g(d)g(s)p 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 50 w(o)t(n)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 56 w(t)i(h)g(e)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 58 w(i)f(n)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
60 w(u)g(s)g(i)g(n)g(g)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 49 w(I)n(M)n(U)p 0
TeXcolorgray 0 0.6 0 TeXcolorrgb 1 TeXcolorgray 0 0.6 0
TeXcolorrgb 1 TeXcolorgray -150 870 4200 75 v 0 0.6 0
TeXcolorrgb 1 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 22 848 a(m)d(o)g(d)g(e)g(l)p 0 TeXcolorgray
1 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -150 945
V 0 TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray -150 922
a
SDict begin H.S end
 -150 922 a -150 922 a
SDict begin 9 H.A end
 -150 922 a -150 922 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.3) cvn /DEST pdfmark
end
 -150 922
a 1 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -150 1019
4200 75 v 0 TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray
-150 997 a
SDict begin H.S end
 -150 997 a -150 997 a
SDict begin 9 H.A end
 -150 997 a -150 997
a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.4) cvn /DEST pdfmark
end
 -150 997 a -3 w Fd(M)m(M)m(A)m(8)m(4)m(5)m(2)m(Q)47
b(a)10 b(c)g(c)g(e)g(l)26 b(;)p 0 0.6 0 TeXcolorrgb 65
w(/)15 b(/)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 66 w(c)d(r)g(e)g(a)g(t)g(i)g(n)g(g)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 58 w(a)6 b(n)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 57 w(i)11 b(n)h(s)f(t)h(a)f(n)h(c)f
(e)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 63 w(f)g(o)g(r)p 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 59 w(t)f(h)g(e)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 48 w(I)n(M)n(U)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 48 w(c)i(l)g(a)g(s)g(s)p
0 TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray
-150 1094 4200 75 v 0 TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray
-150 1072 a
SDict begin H.S end
 -150 1072 a -150 1072 a
SDict begin 9 H.A end
 -150 1072 a -150
1072 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.5) cvn /DEST pdfmark
end
 -150 1072 a 1 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray
-150 1169 4200 75 v 0 TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray
-150 1146 a
SDict begin H.S end
 -150 1146 a -150 1146 a
SDict begin 9 H.A end
 -150 1146 a -150
1146 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.6) cvn /DEST pdfmark
end
 -150 1146 a 0 0 1 TeXcolorrgb 8 w Fd(v)c(o)g(i)g(d)p
0 TeXcolorgray 60 w(s)i(e)g(t)g(u)g(p)22 b(\()12 b(\))i
Fb(f)p 0 0.6 0 TeXcolorrgb 137 w Fd(/)h(/)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
64 w(n)10 b(e)g(c)g(e)g(s)g(s)g(a)g(r)g(y)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
64 w(s)h(e)h(t)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0
TeXcolorgray 0 0.6 0 TeXcolorrgb 56 w(u)t(p)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
57 w(f)f(u)g(n)g(c)g(t)g(i)g(o)g(n)p 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 62 w(f)g(o)g(r)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 57 w(A)c(r)g(d)g(u)g(i)g(n)g(o)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
57 w(p)g(r)g(o)g(g)g(r)g(a)g(m)p 0 TeXcolorgray 1 TeXcolorgray
0 TeXcolorgray 1 TeXcolorgray -150 1244 4200 75 v 0 TeXcolorgray
1 TeXcolorgray 0 TeXcolorgray -150 1221 a
SDict begin H.S end
 -150 1221 a
-150 1221 a
SDict begin 9 H.A end
 -150 1221 a -150 1221 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.7) cvn /DEST pdfmark
end
 -150 1221 a 331 w
Fd(S)12 b(e)g(r)g(i)h(a)f(l)25 b(.)19 b(b)9 b(e)g(g)g(i)g(n)18
b(\()9 b(9)g(6)g(0)g(0)g(\))20 b(;)p 1 TeXcolorgray 0
TeXcolorgray 1 TeXcolorgray -150 1318 4200 75 v 0 TeXcolorgray
1 TeXcolorgray 0 TeXcolorgray -150 1296 a
SDict begin H.S end
 -150 1296 a
-150 1296 a
SDict begin 9 H.A end
 -150 1296 a -150 1296 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.8) cvn /DEST pdfmark
end
 -150 1296 a 329 w
Fd(a)10 b(c)g(c)g(e)g(l)27 b(.)e(i)15 b(n)f(i)h(t)26
b(\()12 b(\))23 b(;)p 1 TeXcolorgray 0 TeXcolorgray 1
TeXcolorgray -150 1393 4200 75 v 0 TeXcolorgray 1 TeXcolorgray
0 TeXcolorgray -150 1371 a
SDict begin H.S end
 -150 1371 a -150 1371 a
SDict begin 9 H.A end
 -150
1371 a -150 1371 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.9) cvn /DEST pdfmark
end
 -150 1371 a 0 0.6 0 TeXcolorrgb 0
TeXcolorgray 0 0.6 0 TeXcolorrgb 328 w Fd(/)205 1386
y(*)p 0 TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray 1
TeXcolorgray -150 1468 4200 75 v 0 TeXcolorgray 1 TeXcolorgray
0 TeXcolorgray -150 1445 a
SDict begin H.S end
 -150 1445 a -150 1445 a
SDict begin 9 H.A end
 -150
1445 a -150 1445 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.10) cvn /DEST pdfmark
end
 -150 1445 a 0 0.6 0 TeXcolorrgb 0
TeXcolorgray 0 0.6 0 TeXcolorrgb 324 w Fd(\224)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 16 w(a)10 b(c)g(c)g(e)g(l)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 27 w(.)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
25 w(i)15 b(n)f(i)h(t)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
26 w(\()d(\))p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 17
w(\224)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 61 w(i)j(n)g(i)h(t)f(i)h(a)f(l)h(i)f(z)h(e)f(s)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 65 w(t)10 b(h)g(e)p 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 60 w(s)h(c)h(a)f(l)h(e)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 64 w(s)h(e)g(t)g(t)g(i)g(n)g(g)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
64 w(f)e(o)g(r)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0
TeXcolorgray 0 0.6 0 TeXcolorrgb 60 w(t)f(h)g(e)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
59 w(a)g(c)g(c)g(e)g(l)g(e)g(r)g(o)g(m)g(e)g(t)g(e)g(r)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 32 w(,)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
48 w(M)m(M)m(A)m(8)m(4)m(5)m(2)m(Q)p 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 46 w(s)g(u)g(p)g(p)g(o)g
(r)g(t)g(s)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 54 w(S)o(C)o(A)o(L)o(E)p 3801 1454
34 5 v 33 w(2)o(G)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
11 w(,)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 1 TeXcolorgray
0 0.6 0 TeXcolorrgb 1 TeXcolorgray -150 1542 4200 75
v 0 0.6 0 TeXcolorrgb 1 TeXcolorgray 0 0.6 0 TeXcolorrgb
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 334 1520 a(S)o(C)o(A)o(L)o(E)p
540 1529 34 5 v 33 w(4)o(G)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 46 w(a)c(n)g(d)p 0
TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 45 w(S)o(C)o(A)o(L)o(E)p 1058 1529 V 33 w(8)o(G)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 11 w(,)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
60 w(t)j(h)g(e)g(y)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 62 w(r)j(e)g(p)g(r)f(e)h(s)g(e)g(n)f
(t)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 62 w(t)f(h)g(e)p 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 61 w(s)h(c)g(a)h(l)f(e)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 60 w(o)d(f)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 51 w(+)s(/)d Fb(\000)s
Fd(2)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 5 w(g)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 16 w(,)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 54 w(4)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 6 w(g)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
17 w(,)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 57 w(a)h(n)g(d)p 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 49 w(8)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 7 w(g)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
55 w(r)11 b(e)h(s)f(p)g(e)h(c)g(t)g(i)f(v)h(e)f(l)h(y)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 34 w(,)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
58 w(s)7 b(o)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 58 w(f)k(o)g(r)p 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 1 TeXcolorgray 0 0.6 0 TeXcolorrgb 1 TeXcolorgray
-150 1617 4200 75 v 0 0.6 0 TeXcolorrgb 1 TeXcolorgray
0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
345 1595 a(i)f(n)g(s)g(t)g(a)g(n)g(c)g(e)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 35 w(,)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 60 w(u)f(s)g(i)g(n)g(g)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 54 w(2)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
7 w(g)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 55 w(s)i(c)h(a)f(l)h(e)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
62 w(w)g(i)f(l)h(l)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 57 w(b)6 b(e)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
51 w(a)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 57 w(f)11 b(u)g(n)g(c)g(t)g(i)g(o)g(n)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 63 w(l)i(i)f(k)g(e)p 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 58 w(\224)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 15 w(a)e(c)g(c)g(e)g(l)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 27 w(.)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 26 w(i)k(n)h(i)f(t)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 24 w(\()p 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 8 w(S)o(C)o(A)o(L)o(E)p 2971 1604 34 5 v
33 w(2)o(G)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 9 w(\))p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 13 w(\224)p 0 TeXcolorgray
1 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -150 1692
4200 75 v 0 TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray
-150 1669 a
SDict begin H.S end
 -150 1669 a -150 1669 a
SDict begin 9 H.A end
 -150 1669 a -150
1669 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.11) cvn /DEST pdfmark
end
 -150 1669 a 0 0.6 0 TeXcolorrgb 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 178 1684 a Fd(*)220 1669 y(/)p 0
TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray
-150 1767 4200 75 v 0 TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray
-150 1744 a
SDict begin H.S end
 -150 1744 a -150 1744 a
SDict begin 9 H.A end
 -150 1744 a -150
1744 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.12) cvn /DEST pdfmark
end
 -150 1744 a 2 w Fb(g)p 1 TeXcolorgray 0 TeXcolorgray
1 TeXcolorgray -150 1841 4200 75 v 0 TeXcolorgray 1 TeXcolorgray
0 TeXcolorgray -150 1819 a
SDict begin H.S end
 -150 1819 a -150 1819 a
SDict begin 9 H.A end
 -150
1819 a -150 1819 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.13) cvn /DEST pdfmark
end
 -150 1819 a 1 TeXcolorgray 0 TeXcolorgray
1 TeXcolorgray -150 1916 4200 75 v 0 TeXcolorgray 1 TeXcolorgray
0 TeXcolorgray -150 1894 a
SDict begin H.S end
 -150 1894 a -150 1894 a
SDict begin 9 H.A end
 -150
1894 a -150 1894 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.14) cvn /DEST pdfmark
end
 -150 1894 a 0 0 1 TeXcolorrgb 8 w
Fd(v)8 b(o)g(i)g(d)p 0 TeXcolorgray 59 w(l)g(o)g(o)g(p)k
Fb(f)p 0 0.6 0 TeXcolorrgb 256 w Fd(/)j(/)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
59 w(a)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 50 w(L)t(o)t(o)t(p)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
54 w(f)c(u)g(n)g(c)g(t)g(i)g(o)g(n)p 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 63 w(f)g(o)g(r)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 59 w(c)f(o)g(n)g(t)g(i)g(n)g(u)g(o)g(u)h(s)f(l)h(y)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 66 w(u)f(p)g(d)g(a)g(t)g(i)g(n)g(g)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
59 w(d)g(a)g(t)g(a)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 56 w(f)c(r)g(o)g(m)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 56 w(t)k(h)g(e)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 60 w(a)g(c)g(c)g(e)g(l)g(e)g(r)g(o)h
(m)f(e)h(t)f(e)h(r)p 0 TeXcolorgray 1 TeXcolorgray 0
TeXcolorgray 1 TeXcolorgray -150 1991 4200 75 v 0 TeXcolorgray
1 TeXcolorgray 0 TeXcolorgray -150 1968 a
SDict begin H.S end
 -150 1968 a
-150 1968 a
SDict begin 9 H.A end
 -150 1968 a -150 1968 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.15) cvn /DEST pdfmark
end
 -150 1968 a 0 0 1
TeXcolorrgb 332 w Fd(i)i(f)p 0 TeXcolorgray 62 w(\()20
b(a)10 b(c)g(c)g(e)g(l)26 b(.)d(a)13 b(v)f(a)g(i)g(l)h(a)f(b)g(l)h(e)24
b(\()12 b(\))21 b(\))11 b Fb(f)p 1 TeXcolorgray 0 TeXcolorgray
1 TeXcolorgray -150 2065 4200 75 v 0 TeXcolorgray 1 TeXcolorgray
0 TeXcolorgray -150 2043 a
SDict begin H.S end
 -150 2043 a -150 2043 a
SDict begin 9 H.A end
 -150
2043 a -150 2043 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.16) cvn /DEST pdfmark
end
 -150 2043 a 489 w Fd(a)f(c)g(c)g(e)g(l)26
b(.)20 b(r)9 b(e)g(a)g(d)23 b(\()11 b(\))23 b(;)p 1 TeXcolorgray
0 TeXcolorgray 1 TeXcolorgray -150 2140 4200 75 v 0 TeXcolorgray
1 TeXcolorgray 0 TeXcolorgray -150 2118 a
SDict begin H.S end
 -150 2118 a
-150 2118 a
SDict begin 9 H.A end
 -150 2118 a -150 2118 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.17) cvn /DEST pdfmark
end
 -150 2118 a 1 TeXcolorgray
0 TeXcolorgray 1 TeXcolorgray -150 2215 4200 75 v 0 TeXcolorgray
1 TeXcolorgray 0 TeXcolorgray -150 2192 a
SDict begin H.S end
 -150 2192 a
-150 2192 a
SDict begin 9 H.A end
 -150 2192 a -150 2192 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.18) cvn /DEST pdfmark
end
 -150 2192 a 0 0.6 0
TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 652 w
Fd(/)15 b(/)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 58 w(T)t(h)t(e)p 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 56 w(f)c(u)g(n)g(c)g(t)g
(i)g(o)g(n)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 56 w(\224)p 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 16 w(a)f(c)g(c)g(e)g(l)p 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 27 w(.)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
20 w(r)f(e)g(a)g(d)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
22 w(\()j(\))p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 19
w(\224)7 b(\224)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 59 w(w)k(i)h(l)g(l)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 60 w(u)d(p)g(d)g(a)g(t)g(e)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
55 w(t)c(w)g(o)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0
TeXcolorgray 0 0.6 0 TeXcolorrgb 57 w(s)12 b(e)h(t)f(s)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 60 w(o)c(f)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 60 w(v)k(a)h(r)f(i)g(a)g(b)g(l)h(e)f
(s)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 23 w(:)p 0 TeXcolorgray
1 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -150 2290
4200 75 v 0 TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray
-150 2267 a
SDict begin H.S end
 -150 2267 a -150 2267 a
SDict begin 9 H.A end
 -150 2267 a -150
2267 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.19) cvn /DEST pdfmark
end
 -150 2267 a 0 0.6 0 TeXcolorrgb 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 652 w Fd(/)j(/)p 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 64 w(1)10
b(.)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 59 w(\()p 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 21 w(i)j(n)f(t)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
22 w(\))p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 51 w(x)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
16 w(,)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 14 w(y)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 16 w(,)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 16 w(z)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 57 w(w)f(i)h(l)g(l)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 63 w(s)f(t)i(o)e(r)h(e)p 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 61 w(s)d(i)g(g)g(n)g(e)g
(d)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 53 w(12)o Fb(\000)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 12 w Fd(b)k(i)g(t)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
62 w(v)d(a)g(l)g(u)g(e)g(s)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 60 w(r)f(e)g(a)g(d)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 56 w(f)d(r)g(o)g(m)p 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 57 w(t)k(h)g(e)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 59 w(a)g(c)g(c)g(e)g(l)g(e)g(r)g(o)h(m)f(e)h(t)g(e)g(r)p
0 TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray
-150 2364 4200 75 v 0 TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray
-150 2342 a
SDict begin H.S end
 -150 2342 a -150 2342 a
SDict begin 9 H.A end
 -150 2342 a -150
2342 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.20) cvn /DEST pdfmark
end
 -150 2342 a 0 0.6 0 TeXcolorrgb 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 652 w Fd(/)k(/)p 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 64 w(2)10
b(.)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 59 w(\()p 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 21 w(f)k(l)f(o)g(a)g(t)p 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 23 w(\))p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 53 w(c)t(x)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 21 w(,)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
15 w(c)t(y)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 21 w(,)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 19 w(c)7 b(z)p 0 TeXcolorgray
1 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -150 2439
4200 75 v 0 TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray
-150 2417 a
SDict begin H.S end
 -150 2417 a -150 2417 a
SDict begin 9 H.A end
 -150 2417 a -150
2417 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.21) cvn /DEST pdfmark
end
 -150 2417 a 1 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray
-150 2514 4200 75 v 0 TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray
-150 2491 a
SDict begin H.S end
 -150 2491 a -150 2491 a
SDict begin 9 H.A end
 -150 2491 a -150
2491 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.22) cvn /DEST pdfmark
end
 -150 2491 a 1 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray
-150 2588 4200 75 v 0 TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray
-150 2566 a
SDict begin H.S end
 -150 2566 a -150 2566 a
SDict begin 9 H.A end
 -150 2566 a -150
2566 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.23) cvn /DEST pdfmark
end
 -150 2566 a 0 0.6 0 TeXcolorrgb 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 647 w Fd(/)524 2581 y(*)p 0 TeXcolorgray
1 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -150 2663
4200 75 v 0 TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray
-150 2641 a
SDict begin H.S end
 -150 2641 a -150 2641 a
SDict begin 9 H.A end
 -150 2641 a -150
2641 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.24) cvn /DEST pdfmark
end
 -150 2641 a 0 0.6 0 TeXcolorrgb 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 639 w Fd(B)q(y)p 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 52 w(c)13
b(a)g(l)g(l)f(i)h(n)g(g)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 62 w(t)d(h)g(e)p 0
TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 54 w(\224)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
16 w(a)g(c)g(c)g(e)g(l)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
27 w(.)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 20 w(r)f(e)g(a)g(d)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 16 w(\224)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
55 w(f)h(u)g(n)g(c)g(t)g(i)g(o)g(n)p 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 32 w(,)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 63 w(v)i(a)g(r)g(i)h(a)f(b)g(l)h(e)f
(s)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 53 w(x)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
17 w(,)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 13 w(y)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 17 w(,)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 14 w(z)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
19 w(,)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 16 w(c)t(x)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 21 w(,)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 15 w(c)t(y)p 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 21 w(,)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
19 w(c)7 b(z)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 56 w(i)i(n)p 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 56 w(\224)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 16 w(a)h(c)g(c)g(e)g(l)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 20 w(\224)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
57 w(c)i(l)h(a)f(s)f(s)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 59 w(h)c(a)g(v)g(e)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 54 w(b)g(e)g(e)g(n)p 1 TeXcolorgray 0 0.6 0
TeXcolorrgb 1 TeXcolorgray -150 2738 4200 75 v 0 0.6 0
TeXcolorrgb 1 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
702 2716 a(u)h(p)g(d)g(a)g(t)g(e)g(d)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 26 w(,)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 61 w(t)i(h)g(e)p 0
TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 60 w(f)g(o)g(l)g(l)g(o)g(w)g(i)g(n)g(g)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 59 w(c)d(o)g(d)g(e)p 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 56 w(a)i(l)g(l)g(o)g(w)g
(s)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 63 w(t)h(h)g(e)p 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 57 w(p)d(r)g(o)g(g)g(r)g
(a)g(m)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 55 w(t)i(o)p 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 62 w(p)k(r)f(i)h(n)g(t)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 61 w(o)c(u)g(t)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 62 w(a)14 b(l)f(l)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 64 w(d)d(a)g(t)g(a)p 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 60 w(c)g(o)g(n)g(t)g(i)g
(n)g(u)g(o)g(u)h(s)f(l)h(y)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 60 w(o)t(n)p 1 TeXcolorgray
0 0.6 0 TeXcolorrgb 1 TeXcolorgray -150 2813 V 0 0.6 0
TeXcolorrgb 1 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
704 2790 a(t)f(h)g(e)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 56 w(A)d(r)g(d)g(u)g(i)g(n)g(o)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 62 w(S)12 b(e)g(r)g(i)h(a)f(l)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
61 w(m)c(o)g(n)g(i)g(t)g(o)g(r)p 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 25 w(,)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 57 w(a)e(n)g(d)p 0
TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 57 w(t)k(h)g(e)g(s)g(e)p 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 66 w(v)i(a)g(r)g(i)h(a)f
(b)g(l)g(e)h(s)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0
TeXcolorgray 0 0.6 0 TeXcolorrgb 57 w(w)6 b(o)g(u)g(l)g(d)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 50 w(b)g(e)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 56 w(t)k(h)g(e)p 0
TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 59 w(d)g(a)g(t)g(a)p 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 60 w(t)f(o)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 56 w(b)d(e)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 56 w(p)k(r)g(o)g(c)g(e)g(s)g(s)g(e)g
(d)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 52 w(b)t(y)p 1 TeXcolorgray 0 0.6 0
TeXcolorrgb 1 TeXcolorgray -150 2887 V 0 0.6 0 TeXcolorrgb
1 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 704 2865
a(t)g(h)g(e)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 59 w(a)g(l)g(i)g(g)g(n)g(e)g(d)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 66 w(a)g(l)g(g)g(o)g(r)g(i)g(t)g(h)g(m)p
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 61 w(i)f(n)p 0 TeXcolorgray 0 0.6 0 TeXcolorrgb
0 TeXcolorgray 0 0.6 0 TeXcolorrgb 59 w(o)f(u)g(r)p 0
TeXcolorgray 0 0.6 0 TeXcolorrgb 0 TeXcolorgray 0 0.6 0
TeXcolorrgb 55 w(s)g(y)g(s)g(t)g(e)g(m)p 0 TeXcolorgray
0 0.6 0 TeXcolorrgb 19 w(.)p 0 TeXcolorgray 1 TeXcolorgray
0 TeXcolorgray 1 TeXcolorgray -150 2962 V 0 TeXcolorgray
1 TeXcolorgray 0 TeXcolorgray -150 2940 a
SDict begin H.S end
 -150 2940 a
-150 2940 a
SDict begin 9 H.A end
 -150 2940 a -150 2940 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.25) cvn /DEST pdfmark
end
 -150 2940 a 0 0.6 0
TeXcolorrgb 0 TeXcolorgray 0 0.6 0 TeXcolorrgb 497 2955
a Fd(*)539 2940 y(/)p 0 TeXcolorgray 1 TeXcolorgray 0
TeXcolorgray 1 TeXcolorgray -150 3037 4200 75 v 0 TeXcolorgray
1 TeXcolorgray 0 TeXcolorgray -150 3014 a
SDict begin H.S end
 -150 3014 a
-150 3014 a
SDict begin 9 H.A end
 -150 3014 a -150 3014 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.26) cvn /DEST pdfmark
end
 -150 3014 a 1 TeXcolorgray
0 TeXcolorgray 1 TeXcolorgray -150 3112 4200 75 v 0 TeXcolorgray
1 TeXcolorgray 0 TeXcolorgray -150 3089 a
SDict begin H.S end
 -150 3089 a
-150 3089 a
SDict begin 9 H.A end
 -150 3089 a -150 3089 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.27) cvn /DEST pdfmark
end
 -150 3089 a 650 w
Fd(S)k(e)g(r)g(i)h(a)f(l)24 b(.)g(p)12 b(r)h(i)g(n)f(t)22
b(\()d(a)10 b(c)g(c)g(e)g(l)27 b(.)13 b(x)j(,)59 b(3)8
b(\))20 b(;)p 1 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray
-150 3186 4200 75 v 0 TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray
-150 3164 a
SDict begin H.S end
 -150 3164 a -150 3164 a
SDict begin 9 H.A end
 -150 3164 a -150
3164 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.28) cvn /DEST pdfmark
end
 -150 3164 a 650 w Fd(S)12 b(e)g(r)g(i)h(a)f(l)24
b(.)g(p)12 b(r)h(i)g(n)f(t)22 b(\()d(a)10 b(c)g(c)g(e)g(l)27
b(.)13 b(y)j(,)59 b(3)8 b(\))20 b(;)p 1 TeXcolorgray
0 TeXcolorgray 1 TeXcolorgray -150 3261 4200 75 v 0 TeXcolorgray
1 TeXcolorgray 0 TeXcolorgray -150 3239 a
SDict begin H.S end
 -150 3239 a
-150 3239 a
SDict begin 9 H.A end
 -150 3239 a -150 3239 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.29) cvn /DEST pdfmark
end
 -150 3239 a 650 w
Fd(S)12 b(e)g(r)g(i)h(a)f(l)24 b(.)g(p)12 b(r)h(i)g(n)f(t)22
b(\()d(a)10 b(c)g(c)g(e)g(l)27 b(.)14 b(z)19 b(,)59 b(3)8
b(\))20 b(;)p 1 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray
-150 3336 4200 75 v 0 TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray
-150 3313 a
SDict begin H.S end
 -150 3313 a -150 3313 a
SDict begin 9 H.A end
 -150 3313 a -150
3313 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.30) cvn /DEST pdfmark
end
 -150 3313 a 1 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray
-150 3410 4200 75 v 0 TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray
-150 3388 a
SDict begin H.S end
 -150 3388 a -150 3388 a
SDict begin 9 H.A end
 -150 3388 a -150
3388 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.31) cvn /DEST pdfmark
end
 -150 3388 a 650 w Fd(S)12 b(e)g(r)g(i)h(a)f(l)24
b(.)g(p)12 b(r)h(i)g(n)f(t)22 b(\()d(a)10 b(c)g(c)g(e)g(l)27
b(.)15 b(c)t(x)21 b(,)59 b(3)8 b(\))20 b(;)p 1 TeXcolorgray
0 TeXcolorgray 1 TeXcolorgray -150 3485 4200 75 v 0 TeXcolorgray
1 TeXcolorgray 0 TeXcolorgray -150 3463 a
SDict begin H.S end
 -150 3463 a
-150 3463 a
SDict begin 9 H.A end
 -150 3463 a -150 3463 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.32) cvn /DEST pdfmark
end
 -150 3463 a 650 w
Fd(S)12 b(e)g(r)g(i)h(a)f(l)24 b(.)g(p)12 b(r)h(i)g(n)f(t)22
b(\()d(a)10 b(c)g(c)g(e)g(l)27 b(.)15 b(c)t(y)21 b(,)59
b(3)8 b(\))20 b(;)p 1 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray
-150 3560 4200 75 v 0 TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray
-150 3537 a
SDict begin H.S end
 -150 3537 a -150 3537 a
SDict begin 9 H.A end
 -150 3537 a -150
3537 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.33) cvn /DEST pdfmark
end
 -150 3537 a 650 w Fd(S)12 b(e)g(r)g(i)h(a)f(l)24
b(.)g(p)12 b(r)h(i)g(n)f(t)22 b(\()d(a)10 b(c)g(c)g(e)g(l)27
b(.)16 b(c)5 b(z)23 b(,)59 b(3)8 b(\))20 b(;)p 1 TeXcolorgray
0 TeXcolorgray 1 TeXcolorgray -150 3635 4200 75 v 0 TeXcolorgray
1 TeXcolorgray 0 TeXcolorgray -150 3612 a
SDict begin H.S end
 -150 3612 a
-150 3612 a
SDict begin 9 H.A end
 -150 3612 a -150 3612 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.34) cvn /DEST pdfmark
end
 -150 3612 a 321 w
Fb(g)p 1 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -150
3709 4200 75 v 0 TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray
-150 3687 a
SDict begin H.S end
 -150 3687 a -150 3687 a
SDict begin 9 H.A end
 -150 3687 a -150
3687 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.35) cvn /DEST pdfmark
end
 -150 3687 a 2 w Fb(g)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 3 4
TeXDict begin 3 3 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-158 -435 a
SDict begin H.S end
 -158 -435 a -158 -435 a
SDict begin H.R end
 -158 -435 a -158
-435 a
SDict begin [/View [/XYZ H.V]/Dest (page.3) cvn /DEST pdfmark end
 -158 -435 a 0 TeXcolorgray 0 TeXcolorgray 4021
-327 a Fe(3)p 0 TeXcolorgray -150 -150 a
SDict begin H.S end
 -150 -150 a
-150 -150 a
SDict begin 12 H.A end
 -150 -150 a -150 -150 a
SDict begin [/View [/XYZ H.V]/Dest (section.5) cvn /DEST pdfmark end
 -150 -150 a 1172
-50 a Ff(V)-7 b(.)45 b(R)t Fd(E)t(T)t(R)q(O)t(S)t(P)t(E)t(C)t(T)t(I)t
(V)t(E)26 b(O)t(F)e(T)t(H)t(E)h(P)n(A)t(S)t(T)f Ff(1)t(0)g
Fd(W)t(E)t(E)t(K)t(S)-67 75 y Ff(The)30 b(\002rst)i(week)e(of)h(the)f
(class)i(w)o(as)f(dedicated)f(for)g(projects)g(presentation.)f(Then,)g
(in)i(the)g(second)f(week)g(of)g(the)h(class,)g(we)g(gi)n(v)o(e)f(our)
-150 175 y(project)d(preferences)f(for)i(the)g(year)-5
b(.)27 b(Our)h(teacher)f(assign)h(us)g(to)h(our)e(project)g(and)g
(group)f(at)j(the)f(be)o(ginning)d(of)j(week)g(3.)f(The)h(w)o(ork)f(as)
i(a)-150 275 y(group)e(start)i(at)g(week)f(3.)g(Thus,)g(this)h(section)
f(will)i(co)o(v)o(er)d(the)h(retrospecti)n(v)o(e)f(of)h(week)g(3)h(to)f
(week)h(7.)p 0 TeXcolorgray 0 TeXcolorgray -150 427 4393
4 v -150 527 4 100 v -97 497 a Fa(W)-5 b(eek)p 150 527
V 607 w(P)n(osti)o(v)o(e)p 1513 527 V 1127 w(Deltas)p
2876 527 V 1134 w(Action)p 4239 527 V -150 530 4393 4
v -150 929 4 399 v -19 600 a Ff(3)p 150 929 V 181 w(W)e(e)36
b(had)f(the)g(\002rst)h(encounter)d(with)j(our)204 700
y(clients)g(this)h(week.W)-7 b(e)37 b(had)f(\002rst)h(touch)204
799 y(with)31 b(the)g(project)g(detail)g(and)f(we)i(had)f(a)204
899 y(greater)c(understanding)f(of)i(this)h(project.)p
1513 929 V 1567 600 a(W)-7 b(e)26 b(had)g(to)f(start)i(w)o(orking)d(on)
h(the)h(prob-)1567 700 y(lem)i(statement.)p 2876 929
V 2930 600 a(W)-7 b(e)59 b(had)f(to)g(do)g(more)g(research)g(on)2930
700 y(quaternion,)23 b(sensors,)j(and)g(head-up)e(dis-)2930
799 y(play)k(alignment)f(system.)p 4239 929 V -150 932
4393 4 v -150 1331 4 399 v -19 1002 a(4)p 150 1331 V
181 w(W)-7 b(e)22 b(got)g(some)f(tips)h(from)f(our)g(teacher)g(on)204
1102 y(resolving)38 b(the)i(communication)d(break-)204
1201 y(do)n(wn)27 b(with)i(our)e(clients.)p 1513 1331
V 1567 1002 a(W)-7 b(e)28 b(had)f(a)g(communication)e(breakdo)n(wn)1567
1102 y(with)j(our)g(clients.)p 2876 1331 V 2930 1002
a(W)-7 b(e)38 b(had)f(to)h(be)g(cautious)f(and)g(mindful)2930
1102 y(when)26 b(sending)f(material)i(to)g(our)f(clients,)2930
1201 y(mak)o(e)35 b(sure)h(it)g(is)h(proofread)c(and)j(looks)2930
1301 y(good.)p 4239 1331 V -150 1334 4393 4 v -150 1733
4 399 v -19 1404 a(5)p 150 1733 V 181 w(W)-7 b(e)29 b(had)f(the)g
(second)g(meeting)f(with)i(our)204 1503 y(clients.)i(This)h(helped)e
(us)i(to)g(get)f(started)204 1603 y(with)d(our)g(requirement)e
(documents.)p 1513 1733 V 1567 1404 a(W)-7 b(e)35 b(had)g(to)f(w)o(ork)
g(on)h(the)f(requirement)1567 1503 y(document.)p 2876
1733 V 2930 1404 a(W)-7 b(e)48 b(had)f(to)h(think)f(deeply)f(about)h
(the)2930 1503 y(requirement)38 b(for)j(this)h(project)e(and)h(do)2930
1603 y(more)c(research)h(on)g(the)h(hardw)o(are)e(that)2930
1703 y(we)28 b(might)g(use)h(for)f(this)h(project.)p
4239 1733 V -150 1736 4393 4 v -150 2134 4 399 v -19
1806 a(6)p 150 2134 V 181 w(W)-7 b(e)48 b(had)f(our)g(requirement)e
(document)204 1905 y(signed)52 b(by)g(our)g(clients.)h(Our)f(clients)
204 2005 y(were)22 b(really)h(satis\002ed)g(with)g(our)f(require-)204
2104 y(ment)28 b(document.)p 1513 2134 V 1567 1806 a(W)-7
b(e)52 b(had)f(to)h(w)o(ork)f(on)g(the)h(technical)1567
1905 y(re)n(vie)n(w)27 b(document.)p 2876 2134 V 2930
1806 a(W)-7 b(e)31 b(had)f(to)g(do)g(research)f(on)h(nine)f(main)2930
1905 y(technologies)48 b(that)j(critical)f(to)h(imple-)2930
2005 y(ment)28 b(this)h(project.)p 4239 2134 V -150 2138
4393 4 v -150 2437 4 299 v -19 2207 a(7)p 150 2437 V
181 w(W)-7 b(e)22 b(\002nished)f(our)f(technical)h(re)n(vie)n(w)f(doc-)
204 2307 y(ument)27 b(on)h(W)-7 b(ednesday)i(.)p 1513
2437 V 1567 2207 a(W)e(e)44 b(had)e(to)h(start)h(thinking)d(about)h
(the)1567 2307 y(design)27 b(document.)p 2876 2437 V
2930 2207 a(W)-7 b(e)37 b(had)e(to)i(do)e(research)h(on)f(the)i(tech-)
2930 2307 y(nologies)29 b(that)h(w)o(as)h(not)f(co)o(v)o(ered)e(in)i
(our)2930 2407 y(technical)d(re)n(vie)n(w)h(document.)p
4239 2437 V -150 2440 4393 4 v -150 2739 4 299 v -19
2510 a(8)p 150 2739 V 181 w(This)34 b(is)i(a)f(short)f(week)g(because)g
(of)g(the)204 2609 y(thanksgi)n(ving)26 b(break.)p 1513
2739 V 1567 2510 a(W)-7 b(e)21 b(had)f(to)h(start)f(w)o(orking)f(on)h
(the)h(design)1567 2609 y(document.)p 2876 2739 V 2930
2510 a(W)-7 b(e)36 b(had)e(to)h(w)o(ork)f(on)h(the)g(design)f(doc-)2930
2609 y(ument)28 b(during)g(break)h(to)h(k)o(eep)f(on)h(track)2930
2709 y(with)e(the)h(deadline)e(of)h(the)h(document.)p
4239 2739 V -150 2742 4393 4 v -150 3041 4 299 v -19
2812 a(9)p 150 3041 V 181 w(W)-7 b(e)22 b(had)e(a)i(great)f(foundation)
d(to)j(w)o(ork)g(on)204 2911 y(the)k(design)f(document.)f(W)-7
b(e)26 b(got)e(a)i(better)204 3011 y(idea)i(about)f(the)i(progress)e
(report.)p 1513 3041 V 1567 2812 a(W)-7 b(e)19 b(had)g(to)g(\002nish)f
(the)h(design)f(document.)p 2876 3041 V 101 w(W)-7 b(e)22
b(had)e(to)i(get)f(together)f(as)i(a)f(group)f(and)2930
2911 y(tackle)28 b(the)g(document)f(together)-5 b(.)p
4239 3041 V -150 3044 4393 4 v -150 3443 4 399 v -40
3114 a(10)p 150 3443 V 160 w(W)e(e)29 b(submitted)f(our)g(design)f
(document.)p 1513 3443 V 133 w(W)-7 b(e)55 b(had)f(to)h(w)o(ork)f(on)h
(the)f(progress)1567 3214 y(report)67 b(document)g(and)i(presentation)
1567 3313 y(video.)p 2876 3443 V 2930 3114 a(W)-7 b(e)35
b(had)g(to)g(think)f(about)g(what)g(we)h(did)2930 3214
y(in)25 b(the)h(last)g(10)f(weeks.)g(W)-7 b(e)27 b(had)e(to)h(learn)
2930 3313 y(ho)n(w)41 b(to)g(do)h(screen)f(capture)f(presenta-)2930
3413 y(tion.)p 4239 3443 V -150 3446 4393 4 v -150 3558
a
SDict begin H.S end
 -150 3558 a -150 3558 a
SDict begin 12 H.A end
 -150 3558 a -150 3558 a
SDict begin [/View [/XYZ H.V]/Dest (section.6) cvn /DEST pdfmark end
 -150
3558 a 1392 3615 a Ff(V)t(I)t(.)46 b(O)p Fd(V)t(E)t(R)t(A)t(L)t(L)24
b Ff(R)t Fd(E)t(T)t(R)q(O)t(S)t(P)t(E)t(C)t(T)t(I)t(V)t(E)p
0 TeXcolorgray 0 TeXcolorgray -96 3793 4093 4 v -96 3893
4 100 v 462 3863 a Fa(P)n(osti)o(v)o(e)p 1267 3893 V
1126 w(Deltas)p 2630 3893 V 1134 w(Action)p 3993 3893
V -96 3896 4093 4 v -96 4693 4 798 v -43 3966 a Ff(W)-7
b(e)21 b(ha)n(v)o(e)e(a)h(better)f(understanding)e(of)i(our)-43
4066 y(teammates)45 b(and)f(our)g(clients)h(w)o(orking)-43
4165 y(style)39 b(and)f(schedule.)f(There)h(will)h(be)f(a)-43
4265 y(learning)27 b(curv)o(e)h(when)g(w)o(orking)f(on)h(this)-43
4365 y(project,)f(b)n(ut)i(it)g(is)h(re)n(w)o(arding.)p
1267 4693 V 1320 3966 a(As)f(we)f(will)h(go)f(to)g(the)g
(implementation)1320 4066 y(process)36 b(on)h(the)g(winter)f(term,)h
(we)g(had)1320 4165 y(to)20 b(think)f(more)f(deeply)h(about)f(our)h
(imple-)1320 4265 y(mentation)e(details)i(during)e(winter)i(break.)1320
4365 y(W)-7 b(e)46 b(need)f(to)g(ha)n(v)o(e)g(a)g(better)g(w)o(orking)
1320 4464 y(schedule)19 b(for)g(this)i(class.)g(The)e(success)i(of)1320
4564 y(the)29 b(team)f(and)g(our)g(project)g(is)h(our)f(main)1320
4664 y(goal.)p 2630 4693 V 2683 3966 a(W)-7 b(e)40 b(ha)n(v)o(e)f(to)g
(do)g(another)f(run)g(and)h(re-)2683 4066 y(search)26
b(for)g(the)h(design)f(documents)f(dur)n(-)2683 4165
y(ing)f(winter)g(break.W)-7 b(e)24 b(ha)n(v)o(e)g(to)h(rechar)o(ge)2683
4265 y(ourselv)o(es)g(and)g(fully)g(committed)f(to)i(this)2683
4365 y(project.)p 3993 4693 V -96 4697 4093 4 v 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 4 5
TeXDict begin 4 4 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
-158 -435 a
SDict begin H.S end
 -158 -435 a -158 -435 a
SDict begin H.R end
 -158 -435 a -158
-435 a
SDict begin [/View [/XYZ H.V]/Dest (page.4) cvn /DEST pdfmark end
 -158 -435 a 0 TeXcolorgray 0 TeXcolorgray 4021
-327 a Fe(4)p 0 TeXcolorgray 1715 -50 a
SDict begin H.S end
 1715 -50 a 1715
-50 a
SDict begin 12 H.A end
 1715 -50 a 1715 -50 a
SDict begin [/View [/XYZ H.V]/Dest (section*.1) cvn /DEST pdfmark end
 1715 -50 a 2 w Ff(R)t Fd(E)t(F)t(E)t(R)t(E)
t(N)t(C)t(E)t(S)-150 -1 y
SDict begin H.S end
 -150 -1 a -150 -1 a
SDict begin 9 H.A end
 -150 -1
a -150 -1 a
SDict begin [/View [/XYZ H.V]/Dest (cite.sampleCode) cvn /DEST pdfmark
end
 -150 -1 a 0 TeXcolorgray 74 x Fd([1])p 0
TeXcolorgray 42 w(J.)135 b(Lindblom,)i(\223Sfe)p 679
82 34 5 v 34 w(mma8452q)g(library)h(basic)g(e)o(xample)g(sk)o(etch,)-5
b(\224)139 b(In)m(v)o(enSense)f(Inc,)f(2012.)f([Online].)i(A)-5
b(v)n(ailable:)p 0 TeXcolorgray -31 162 a
SDict begin H.S end
 -31 162 a 0
TeXcolorgray -14 x Fd(https://github)m(.com/sparkfun/)q(MMA845)q(2)p
1014 157 34 5 v 39 w(Accelerometer)p 0 TeXcolorgray 1444
102 a
SDict begin H.R end
 1444 102 a 1444 148 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(https://github.com/sparkfun/MMA8452_Accelerometer)>>/Subtype
/Link H.B /ANN pdfmark end
 1444 148 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
